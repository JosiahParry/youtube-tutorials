[
  {
    "objectID": "dots/slides.html#dplyrselect.data-...",
    "href": "dots/slides.html#dplyrselect.data-...",
    "title": ". . .",
    "section": "dplyr::select(.data, ...)",
    "text": "dplyr::select(.data, ...)\n\nOne or more unquoted expressions separated by commas. Variable names can be used as if they were positions in the data frame, so expressions like x:y can be used to select a range of variables.\n\n\nthere’s a really good chance you’ve used the select function from dplyr select uses dots—albeit a special kind called dynamic dots—to let you select many different columns with freedom"
  },
  {
    "objectID": "dots/slides.html#dplyrmutate.data-...",
    "href": "dots/slides.html#dplyrmutate.data-...",
    "title": ". . .",
    "section": "dplyr::mutate(.data, ...)",
    "text": "dplyr::mutate(.data, ...)\n\nName-value pairs. The name gives the name of the column in the output.\n\n\ndots are also used in the mutate function from dplyr to let you create any columns you’d like by passing in expressions to names"
  },
  {
    "objectID": "dots/slides.html#paste...",
    "href": "dots/slides.html#paste...",
    "title": ". . .",
    "section": "paste(...)",
    "text": "paste(...)\n\none or more R objects, to be converted to character vectors.\n\n\nthe function paste from base R lets you pass in as many R objects as you would like to create nice character strings"
  },
  {
    "objectID": "dots/slides.html#lapplyx-fun-...",
    "href": "dots/slides.html#lapplyx-fun-...",
    "title": ". . .",
    "section": "lapply(x, FUN, ...)",
    "text": "lapply(x, FUN, ...)\n\noptional arguments to FUN"
  },
  {
    "objectID": "dots/slides.html#primary-uses",
    "href": "dots/slides.html#primary-uses",
    "title": ". . .",
    "section": "2 primary uses",
    "text": "2 primary uses\n\npassing arguments from one function to another\nwith S3 methods\n\n\n\naccording to advanced R there are two primary uses of dots they are to pass arguments from one function to another and secondly, which we will not go over in this video, is the use of dots to allow different s3 methods to take different arguments (like the very very very many predict methods)\n\n\nhttps://adv-r.hadley.nz/functions.html#fun-dot-dot-dot"
  },
  {
    "objectID": "dots/slides.html#recap",
    "href": "dots/slides.html#recap",
    "title": ". . .",
    "section": "recap",
    "text": "recap\nDots can:\n\npass arguments from one function to another\nbe collected using list()\nbe sneaky and “swallow” arguments\n\n\nYou should check them with {ellipsis}"
  },
  {
    "objectID": "simple-features/script.html",
    "href": "simple-features/script.html",
    "title": "GIS fundamentals:",
    "section": "",
    "text": "Hey, fellow programmers and geospatial nerds. Josiah here. It’s been a while since my last video. The subject for this video is one a topic that feels so rudimentary, but is often skipped over. It’s a fundamental that folks like myself don’t truly learn until later in life. It’s got to do with vector data: points lines and polygons.\nI’ve been doing geospatial analysis in some way, shape, or form since 2014. Only recently have I felt I truly understood vector data. We’re going to walk through the simple feature standard from the Open Geospatial Consortium (OGC).\nLet’s think about all the different types of data we can gather about the world around us: locations of cities, roads, UFO sightings, rivers, houses, and quite literally anything that can be observed in the world around us (including things on other planets). All of this data can be represented by simple geometry features such as points, lines, and polygons. The Simple Feature Standard gives us a way to do that. The SF standard makes it easy to describe geometries in a consistent way using geometric primitives so that they can be understood no matter what programming language or software is being used."
  },
  {
    "objectID": "simple-features/script.html#simple-feature-standard",
    "href": "simple-features/script.html#simple-feature-standard",
    "title": "GIS fundamentals:",
    "section": "Simple Feature Standard",
    "text": "Simple Feature Standard\n\n“This standard enumerates the requirements for defining and representing geographic features in geographic information systems, applications and transmittable data formats.”\n\nThe simple feature standard (SF) defines how vector data is recorded and transmitted. Of course data need to be recorded and transmitted, but is a whole standard really necessary? What does it mean to be a standard and why are they important? Well, that gets to the core of why the OGC exists if you ask me.\n\n\nThere could, and maybe should, be a whole video dedicated to the OGC and the work that they do. I’ll provide links in the description and this will be available as a blog on my website.\nOGC standards formalize how something should be built, function, or behave. Because they are generally agreed upon and fairly exhaustive, they ensure that users can expect the same behavior regardless of what tool or language they may be using. Standards are critical for the open source community and commercial entities that rely upon open source. These standards define, in words, how software should behave.\nThe simple feature (SF) standard is broken up into two parts. The first defines the “common architecture” and the second defines how a SQL interface should interact with the simple features. We don’t care about SQL today. Only about the first part.\nWe’re going to get quite specific. So get ready for a journey."
  },
  {
    "objectID": "simple-features/script.html#geometric-primitives",
    "href": "simple-features/script.html#geometric-primitives",
    "title": "GIS fundamentals:",
    "section": "Geometric Primitives",
    "text": "Geometric Primitives\nEvery shape that we work with is composed of other geometric units. These other units are the smallest composible unit we work with. They are called geometric primitives. When working with points, lines, and polygons, there is only one primitive that we use. Points. Points are the building blocks of (almost) every single geometry that we work with.\n\n\nFor the whiz kids out there: I’m referring only to the common geometry objects Point, Line/LineString, Polygon and their Multi-types.\nPoint’s are defined by at least two values and up to four. The first two are the most important: the X and Y coordinates. A simple point looks like Point (X Y). Where X and Y are floating point numbers (they have decimals) representing the respective dimensions. Point have two other optional dimensions Z and M.\nZ is used for 3-dimensional data. It represents the altitude (height) of a point. For example, the peak of Mount Washington is located at Point (-71.3 44.3) but that ignores the height of the peak which is 6,289. If we wanted to record the elevation that might look like Point (-71.3 44.3 6289).\nThe M dimension is for a measurement. Mount Washington is known for being ridiculously cold. This year it broke it’s own previous record and clocked in a -108° F measurement. We can actually encode this into a single point measurement. Point (-71.3 44.3 6289 -108).\nThe Z and M measurements are exceptionally useful, but less common. Though they are seeing increased use as 3-dimensional data becomes more and more available. For the remainder we’ll only consider points in 2 dimensions."
  },
  {
    "objectID": "simple-features/script.html#geometry-objects",
    "href": "simple-features/script.html#geometry-objects",
    "title": "GIS fundamentals:",
    "section": "Geometry Objects",
    "text": "Geometry Objects\nFrom points we can create geometric objects. Geometric objects represent a single thing—like an intersection location, the path of a river, or the shape of a building. These are all represented by a single geometric objects.\nA Point is the most basic geometric object because it is also a geometric primitive.\n\nImage of a point (0, 0)\n\nTwo Points connect to make a Line.\n\nAnimates to connect a line (0, 0), (5, 0).\n\nA Line can only have two points. Whereas the LineString geometric object is defined by two or more points that create a path.\n\nAnimation of adding an additional point\n\n\n\n\n\n\n\nNote\n\n\n\n“A LineString is a Curve with linear interpolation between Points. Each consecutive pair of Points defines a Line segment.” - SFA Part 1: Common Architecture\n\n\n\n\nIt is interpolation and not approximation because the lines must pass through each point.\nLineString paths are defined as a sequence of Points. By adding an increasing number of Points, you can make LineStrings extremely detailed.\n\nAnimation of increasing the number of vertexes in a polygon from 3 to 100 to approximate a circle\n\nNotice how Points compose LineStrings. Likewise, polygons are composed by LineStrings—though not any old LineString. Polygons are closed shapes so they must be defined by a simple and closed line. Simple and closed LineStrings are called LinearRings.\n\nImage of simple vs non-simple linear ring\n\nLineStrings become closed by adding final closing Point at the starting point. So the starting and the closing point must be identical. There will always be one more point than there are vertexes in polygons.\n\nimage of closed LineString\n\nTo be “simple”, the line must not intersect (or cross) itself at any point. Think of the shape of a country’s border.\n\nImage of a countries border (bulgaria)\n\nThe shape of a polygon must define an enclosed space. The inside of the polygon is the area defined by the exterior ring. But get this: the order of the points in the exterior ring of a polygon matter! Just knowing all of the vertexes in a polygon is not enough. You must also know in which order they go.\n\npicture of creating a closed line by randomly shuffling the order of vertexes. Also going clockwise vs counter clockwise\n\nThe exterior ring of a polygon must record each vertex in counter clock-wise order.\n\n\nNote that this is the same rotation of the unit circle. Can anyone confirm if this is intentional?\n\n\n\n\n\n\nTip\n\n\n\nThis is called the winding order.\n\n\nHere’s another quirk. Polygons can also have holes inside of them. Think of a land parcel with a pond in it. Should the body of water be included? Sometimes. Sometimes not. For example if one was interested in only the land area it may be best to include it?\nPolygon holes also must be closed and simple LinearRings. But here’s the catch: they have a different winding order. Interior rings, or holes, are recorded with a clockwise winding.\n\nanimation of creating a polygon with CCW exterior ring and a CW interrior ring"
  },
  {
    "objectID": "simple-features/script.html#multiples",
    "href": "simple-features/script.html#multiples",
    "title": "GIS fundamentals:",
    "section": "Multiples",
    "text": "Multiples\nWe’ve now built up each of the major geometric objects from Points to Polygons and have seen how smaller units build into larger ones. This concept of making one geometry from another extends into the concept of a GeometryCollection.\nGeometryCollections collect multiple geometric objects of any type into one single entity. This alone can be very useful. Though the GeometryCollection actually has three subclasses that are a bit more restrictive.\nGeometryCollection subclasses start with the Multi- prefix indicating that it contains multiple objects. The Multi- geometry collections differ from the more general GeometryCollection in that they can contain only one type of geometric object. Each geometric object—Point, LineString, and Polygon—have a corresponding Multi type—MultiPoint, MultiLineString, and MultiPolygon respectively.\n\n\n\n\n\ngraph BT\n    A[GeometryCollection] \n    MP(MultiPoint) -->  A\n    ML(MultiLineString) --> A\n    MPLY(MultiPolygon) --> A\n    P(Point) --> MP\n    L(LineString) --> ML\n    PLY(Polygon) --> MPLY\n\n\n\n\n\n\n\n\nMultiPoint\nA MultiPoint, for example, is comprised of one ore more points. Say we have three points Point (0 0), Point (1 0), and Point (1 1). Each of these are considered to be a single feature.\n\n\n\n\n\n\nTip\n\n\n\nA feature refers to any “phenomena”, or thing, that exists in the real physical world.\n\n\nBut what if each of these points were related to each other? Perhaps each point indicates an emergency exit for a single building. It could be quite useful to track these exits as a single feature. Particularly when our data set may contain hundreds or thousands of building emergency exits. In this case we would represent the feature as a MultiPoint ((0 0), (1 0), (1 1)).\n\nanimation of 3 points being different colors switching to the same color. perhaps a label of Point() Point() Point() to MultiPoint((), (), ())\n\nMultiLineString\nMaybe geometry collections of LineStrings are more natural to think about. Road networks are a great example where MultiLineStrings can be made useful. Roads are classified into different categories. This is the road network of Grafton County, New Hampshire. Not all of these roads are the same type. Some of them are dirt roads that connect to people’s houses and farms. Others are larger two lane roads that act as main thoroughfares, and there are a few interstates interspersed as well.\n\n\n\n\n\nWhen we symbolize the road network based on the road type, the differences in type become more apparent.\n\n\n\n\n\nThere are few U.S. roads and interstates whereas the vast majority of the region is covered in “common name” roads. It may make sense to collect each of the road types into a single MultiLineString geometry collection. A MultiLineString, like the MultiPoint, is composed of many LineStrings into a single feature.\nMultiPolygon\nMultiPolygons may be the most common type of geometry collection subclass that we encounter naturally. A really common place where we see multiple polygons being part of the same feature is in political boundaries. Island nations are a really great example of this. Take the Philippines for example.\nThe Philippines is an archipelago of over 7,000 islands making up an entire nation. Each island is an enclosed polygon. But the collection of polygons is identified collectively as The Philippines.\n\n\n\n\n\n\nit would be nice to animate each of these to appear one at a time.\n\nCollecting all of these polygons into a single MultiPolygon is a natural decision given that it represents a single feature.\nGeometryCollection\nEach of these subtypes restrict the constituent geometry object types. The general GeometryCollection geometry object has no such limitation.\n\nA GeometryCollection is a geometric object that is a collection of some number of geometric objects.\n\nI think of GeometryCollections as a grab bag of miscellaneous geometry objects. And here’s a fun thing thing. Since GeometryCollections are geometry objects they can contain GeometryCollections which can contain another one so on forever and ever—if you ever found an actual use case for them.\nPersonally, I’ve never found such a use case, or really any uses for a GeometryCollection object other than some intermediate in an analysis.\n\n\nGEOMETRYCOLLECTION (POLYGON ((0 0, 7 0, 7 5, 0 5, 0 0)), LINESTRING (0 5, 9 8, 7 9, 8 9, 2 10), POINT (0 0))"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html",
    "href": "hot-spot-analysis/hot-spot-analysis.html",
    "title": "Hot Spot Analysis",
    "section": "",
    "text": "options(width = 78)"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#lisa-is-going-to-help-us",
    "href": "hot-spot-analysis/hot-spot-analysis.html#lisa-is-going-to-help-us",
    "title": "Hot Spot Analysis",
    "section": "LISA is going to help us",
    "text": "LISA is going to help us\n\nlocal indicators of spatial association (LISA)\ndecompose global statistics to the local level\nThe Local Moran’s I is the most famous"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#which-lisa-for-hot-spots",
    "href": "hot-spot-analysis/hot-spot-analysis.html#which-lisa-for-hot-spots",
    "title": "Hot Spot Analysis",
    "section": "Which LISA for hot spots?",
    "text": "Which LISA for hot spots?\n\nGetis-Ord Gi and Gi*\nLocal versions of the Getis-Ord Global G\n\n\n\nnote: the \\(i\\) subscript is a good hint that a measure is local"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#getis-ord-g",
    "href": "hot-spot-analysis/hot-spot-analysis.html#getis-ord-g",
    "title": "Hot Spot Analysis",
    "section": "Getis-Ord G",
    "text": "Getis-Ord G\n\nG informs of the presence of high-high or low-low clustering\n\n\n\\[\nG = \\frac{\\sum_{i = 1}^{n} \\sum_{j = 1}^{n} w_{ij}x_ix_j}{\\sum_{i = 1}^{n}\\sum_{j = 1}^{n} x_i x_j}\n\\]"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#local-getis-ord-g-g_i",
    "href": "hot-spot-analysis/hot-spot-analysis.html#local-getis-ord-g-g_i",
    "title": "Hot Spot Analysis",
    "section": "Local Getis-Ord G (\\(G_i\\))",
    "text": "Local Getis-Ord G (\\(G_i\\))\n\nMost global statistics are a double sum\n\nfirst over \\(j\\) and then \\(i\\)\n\n\n\n\\(G = \\frac{\\sum_{i = 1}^{n} \\sum_{j = 1}^{n} w_{ij}x_ix_j}{\\sum_{i = 1}^{n}\\sum_{j = 1}^{n} x_i x_j}\\)\nDecompose the G into a LISA\n\\(Gi = \\frac{\\sum_j w_{ij} x_j}{\\sum_j x_j}\\)"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#g_i",
    "href": "hot-spot-analysis/hot-spot-analysis.html#g_i",
    "title": "Hot Spot Analysis",
    "section": "\\(G_i\\)",
    "text": "\\(G_i\\)\n\nThe numerator is the spatial lag: \\(\\sum_j w_{ij} x_j\\)\n\nDenominator is the sum of all x values except \\(x_i\\): \\(\\sum_j x_j\\)\n\n\\(G_i = \\frac{\\sum_j w_{ij} x_j}{\\sum_j x_j}\\)\n\n\n\n“ratio of the weighted average of the values in the neighboring locations to the sum of all values, not including the value at the location” (GeodaCenter)\n\n\n\n\n\nnote: \\(G_i\\) is often returned as a Z-score"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#example",
    "href": "hot-spot-analysis/hot-spot-analysis.html#example",
    "title": "Hot Spot Analysis",
    "section": "Example",
    "text": "Example"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#example-1",
    "href": "hot-spot-analysis/hot-spot-analysis.html#example-1",
    "title": "Hot Spot Analysis",
    "section": "Example",
    "text": "Example"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#example-data",
    "href": "hot-spot-analysis/hot-spot-analysis.html#example-data",
    "title": "Hot Spot Analysis",
    "section": "Example data",
    "text": "Example data\n\n\nSimple feature collection with 49 features and 1 field\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 0 ymin: 0 xmax: 7 ymax: 7\nCRS:           NA\n# A tibble: 49 × 2\n       x                    geometry\n   <dbl>                   <POLYGON>\n 1 5.70  ((0 0, 1 0, 1 1, 0 1, 0 0))\n 2 4.71  ((1 0, 2 0, 2 1, 1 1, 1 0))\n 3 2.94  ((2 0, 3 0, 3 1, 2 1, 2 0))\n 4 1.87  ((3 0, 4 0, 4 1, 3 1, 3 0))\n 5 2.46  ((4 0, 5 0, 5 1, 4 1, 4 0))\n 6 2.00  ((5 0, 6 0, 6 1, 5 1, 5 0))\n 7 0.408 ((6 0, 7 0, 7 1, 6 1, 6 0))\n 8 3.96  ((0 1, 1 1, 1 2, 0 2, 0 1))\n 9 4.00  ((1 1, 2 1, 2 2, 1 2, 1 1))\n10 1.93  ((2 1, 3 1, 3 2, 2 2, 2 1))\n# … with 39 more rows\n# ℹ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#the-numerator",
    "href": "hot-spot-analysis/hot-spot-analysis.html#the-numerator",
    "title": "Hot Spot Analysis",
    "section": "The numerator",
    "text": "The numerator\n\ngrd_nb <- grd |> \n  mutate(\n    nb = st_contiguity(geometry),\n    wt = st_weights(nb),\n    x_lag = st_lag(x, nb, wt)\n  )"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#the-numerator-1",
    "href": "hot-spot-analysis/hot-spot-analysis.html#the-numerator-1",
    "title": "Hot Spot Analysis",
    "section": "The numerator",
    "text": "The numerator\n\n\nSimple feature collection with 49 features and 5 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 0 ymin: 0 xmax: 7 ymax: 7\nCRS:           NA\n# A tibble: 49 × 6\n                      geometry    id nb        wt            x x_lag\n *                   <POLYGON> <int> <nb>      <list>    <dbl> <dbl>\n 1 ((0 0, 1 0, 1 1, 0 1, 0 0))     1 <int [3]> <dbl [3]> 5.70  4.22 \n 2 ((1 0, 2 0, 2 1, 1 1, 1 0))     2 <int [5]> <dbl [5]> 4.71  3.71 \n 3 ((2 0, 3 0, 3 1, 2 1, 2 0))     3 <int [5]> <dbl [5]> 2.94  3.14 \n 4 ((3 0, 4 0, 4 1, 3 1, 3 0))     4 <int [5]> <dbl [5]> 1.87  2.51 \n 5 ((4 0, 5 0, 5 1, 4 1, 4 0))     5 <int [5]> <dbl [5]> 2.46  1.82 \n 6 ((5 0, 6 0, 6 1, 5 1, 5 0))     6 <int [5]> <dbl [5]> 2.00  1.07 \n 7 ((6 0, 7 0, 7 1, 6 1, 6 0))     7 <int [3]> <dbl [3]> 0.408 0.807\n 8 ((0 1, 1 1, 1 2, 0 2, 0 1))     8 <int [5]> <dbl [5]> 3.96  3.74 \n 9 ((1 1, 2 1, 2 2, 1 2, 1 1))     9 <int [8]> <dbl [8]> 4.00  3.17 \n10 ((2 1, 3 1, 3 2, 2 2, 2 1))    10 <int [8]> <dbl [8]> 1.93  2.84 \n# … with 39 more rows\n# ℹ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#the-numerator-2",
    "href": "hot-spot-analysis/hot-spot-analysis.html#the-numerator-2",
    "title": "Hot Spot Analysis",
    "section": "The numerator",
    "text": "The numerator"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#the-denominator",
    "href": "hot-spot-analysis/hot-spot-analysis.html#the-denominator",
    "title": "Hot Spot Analysis",
    "section": "The denominator",
    "text": "The denominator\n\nthe of sum of all x values\nOR, spatial lag of a complete graph w/ binary weights\n\nst_weights(nb, style = \"B\")\n\n\nComplete graph: all locations are connected\n\nst_complete_nb(n, diag = FALSE)"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#the-denominator-1",
    "href": "hot-spot-analysis/hot-spot-analysis.html#the-denominator-1",
    "title": "Hot Spot Analysis",
    "section": "The denominator",
    "text": "The denominator\n\n\ncomplete_nb <- st_complete_nb(n = nrow(grd), diag = FALSE)\ncomplete_nb[[1]]\n\n [1]  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[25] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49\n\n\n\n\n\ndenom <- st_lag(\n  grd_nb$x, \n  complete_nb, \n  st_weights(complete_nb, style = \"B\")\n)\n\ndenom\n\n [1] 92.63630 93.63145 95.40112 96.47070 95.87481 96.33858 97.92817 94.37887\n [9] 94.33532 96.40508 95.16384 96.29836 98.33663 97.91501 95.98179 96.41519\n[17] 96.48203 96.05971 96.01014 98.07216 97.06022 96.37010 96.43836 96.18403\n[25] 98.30599 98.08788 96.49048 95.93543 96.36399 95.82990 96.31504 97.17146\n[33] 96.65137 95.37411 95.97823 97.14021 97.39183 97.05320 95.40683 94.90385\n[41] 96.22288 95.82727 96.27249 96.75152 97.76805 95.96140 97.15449 96.76554\n[49] 96.84677"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#the-denominator-2",
    "href": "hot-spot-analysis/hot-spot-analysis.html#the-denominator-2",
    "title": "Hot Spot Analysis",
    "section": "The denominator",
    "text": "The denominator\n\ngrd_nb |> \n  mutate(\n    complete_nb = st_complete_nb(n()),\n    wt_b = st_weights(complete_nb, style = \"B\"),\n    sum_xj = st_lag(x, complete_nb, wt_b)\n  ) |> \n  select(x, x_lag, sum_xj)\n\n\n\n\nSimple feature collection with 49 features and 3 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 0 ymin: 0 xmax: 7 ymax: 7\nCRS:           NA\n# A tibble: 49 × 4\n       x x_lag sum_xj                    geometry\n   <dbl> <dbl>  <dbl>                   <POLYGON>\n 1 5.70  4.22    92.6 ((0 0, 1 0, 1 1, 0 1, 0 0))\n 2 4.71  3.71    93.6 ((1 0, 2 0, 2 1, 1 1, 1 0))\n 3 2.94  3.14    95.4 ((2 0, 3 0, 3 1, 2 1, 2 0))\n 4 1.87  2.51    96.5 ((3 0, 4 0, 4 1, 3 1, 3 0))\n 5 2.46  1.82    95.9 ((4 0, 5 0, 5 1, 4 1, 4 0))\n 6 2.00  1.07    96.3 ((5 0, 6 0, 6 1, 5 1, 5 0))\n 7 0.408 0.807   97.9 ((6 0, 7 0, 7 1, 6 1, 6 0))\n 8 3.96  3.74    94.4 ((0 1, 1 1, 1 2, 0 2, 0 1))\n 9 4.00  3.17    94.3 ((1 1, 2 1, 2 2, 1 2, 1 1))\n10 1.93  2.84    96.4 ((2 1, 3 1, 3 2, 2 2, 2 1))\n# … with 39 more rows\n# ℹ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#g_i-1",
    "href": "hot-spot-analysis/hot-spot-analysis.html#g_i-1",
    "title": "Hot Spot Analysis",
    "section": "\\(G_i\\)",
    "text": "\\(G_i\\)\n\ngrd_nb |> \n  mutate(\n    complete_nb = st_complete_nb(n()),\n    wt_b = st_weights(complete_nb, style = \"B\"),\n    sum_xj = st_lag(x, complete_nb, wt_b),\n    gi = scale(x_lag / sum_xj)\n  ) |> \n  select(x, x_lag, sum_xj, gi)\n\nSimple feature collection with 49 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 0 ymin: 0 xmax: 7 ymax: 7\nCRS:           NA\n# A tibble: 49 × 5\n       x x_lag sum_xj gi[,1]                    geometry\n   <dbl> <dbl>  <dbl>  <dbl>                   <POLYGON>\n 1 5.70  4.22    92.6  3.22  ((0 0, 1 0, 1 1, 0 1, 0 0))\n 2 4.71  3.71    93.6  2.44  ((1 0, 2 0, 2 1, 1 1, 1 0))\n 3 2.94  3.14    95.4  1.57  ((2 0, 3 0, 3 1, 2 1, 2 0))\n 4 1.87  2.51    96.5  0.681 ((3 0, 4 0, 4 1, 3 1, 3 0))\n 5 2.46  1.82    95.9 -0.235 ((4 0, 5 0, 5 1, 4 1, 4 0))\n 6 2.00  1.07    96.3 -1.25  ((5 0, 6 0, 6 1, 5 1, 5 0))\n 7 0.408 0.807   97.9 -1.62  ((6 0, 7 0, 7 1, 6 1, 6 0))\n 8 3.96  3.74    94.4  2.44  ((0 1, 1 1, 1 2, 0 2, 0 1))\n 9 4.00  3.17    94.3  1.67  ((1 1, 2 1, 2 2, 1 2, 1 1))\n10 1.93  2.84    96.4  1.13  ((2 1, 3 1, 3 2, 2 2, 2 1))\n# … with 39 more rows\n# ℹ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#g_i-vs-g_i",
    "href": "hot-spot-analysis/hot-spot-analysis.html#g_i-vs-g_i",
    "title": "Hot Spot Analysis",
    "section": "\n\\(G_i\\) vs \\(G_i^*\\)\n",
    "text": "\\(G_i\\) vs \\(G_i^*\\)\n\n\nThe only difference is in neighbor matrix\n\n\\(G_i^*\\) includes the observation \\(i\\) in the calculation\n\n\\(G_i\\) does not\n\noften rewritten as \\(G_i = \\frac{\\sum_{j\\ne i} w_{ij} x_j}{\\sum_{j \\ne i} x_j}\\)\n\nI don’t like this because they’re the same except the nb list"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#g_i-2",
    "href": "hot-spot-analysis/hot-spot-analysis.html#g_i-2",
    "title": "Hot Spot Analysis",
    "section": "\\(G_i^*\\)",
    "text": "\\(G_i^*\\)\n\n\nincludes the observed value (focal observation)\nuse include_self(nb)"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#g_i-3",
    "href": "hot-spot-analysis/hot-spot-analysis.html#g_i-3",
    "title": "Hot Spot Analysis",
    "section": "\\(G_i^*\\)",
    "text": "\\(G_i^*\\)\n\ngrd |> \n  transmute(\n    nb = include_self(st_contiguity(geometry)), # include the self \n    wt = st_weights(nb), \n    x_lag = st_lag(x, nb, wt), \n    # now we can sum all of x \n    denom = sum(x),\n    gi = scale(x_lag / denom)\n  )\n\nSimple feature collection with 49 features and 5 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 0 ymin: 0 xmax: 7 ymax: 7\nCRS:           NA\n# A tibble: 49 × 6\n   nb        wt        x_lag denom  gi[,1]                    geometry\n * <nb>      <list>    <dbl> <dbl>   <dbl>                   <POLYGON>\n 1 <int [4]> <dbl [4]> 4.59   98.3  3.46   ((0 0, 1 0, 1 1, 0 1, 0 0))\n 2 <int [6]> <dbl [6]> 3.87   98.3  2.50   ((1 0, 2 0, 2 1, 1 1, 1 0))\n 3 <int [6]> <dbl [6]> 3.10   98.3  1.47   ((2 0, 3 0, 3 1, 2 1, 2 0))\n 4 <int [6]> <dbl [6]> 2.40   98.3  0.539  ((3 0, 4 0, 4 1, 3 1, 3 0))\n 5 <int [6]> <dbl [6]> 1.92   98.3 -0.0988 ((4 0, 5 0, 5 1, 4 1, 4 0))\n 6 <int [6]> <dbl [6]> 1.22   98.3 -1.03   ((5 0, 6 0, 6 1, 5 1, 5 0))\n 7 <int [4]> <dbl [4]> 0.707  98.3 -1.72   ((6 0, 7 0, 7 1, 6 1, 6 0))\n 8 <int [6]> <dbl [6]> 3.77   98.3  2.37   ((0 1, 1 1, 1 2, 0 2, 0 1))\n 9 <int [9]> <dbl [9]> 3.26   98.3  1.69   ((1 1, 2 1, 2 2, 1 2, 1 1))\n10 <int [9]> <dbl [9]> 2.74   98.3  0.992  ((2 1, 3 1, 3 2, 2 2, 2 1))\n# … with 39 more rows\n# ℹ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#g_i-g_i-interpretation",
    "href": "hot-spot-analysis/hot-spot-analysis.html#g_i-g_i-interpretation",
    "title": "Hot Spot Analysis",
    "section": "\n\\(G_i\\) / \\(G_i^*\\) interpretation",
    "text": "\\(G_i\\) / \\(G_i^*\\) interpretation\n\nHigh \\(G_i\\) > 0: location with high value neighborhood\nLow \\(G_i\\) < 0: location with low value neighborhood"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#hypothesis-testing",
    "href": "hot-spot-analysis/hot-spot-analysis.html#hypothesis-testing",
    "title": "Hot Spot Analysis",
    "section": "Hypothesis testing",
    "text": "Hypothesis testing\n\n\n\\(H_0\\) - observed value is not spatially dependent\n\n\\(H_1\\) - observed value is spatially dependent\n\n\\(H_0\\) - we would expect to find this value under complete spatial randomness (CSR)\n\n\\(H_1\\) - we would not expect to find this value under CSR"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#resources",
    "href": "hot-spot-analysis/hot-spot-analysis.html#resources",
    "title": "Hot Spot Analysis",
    "section": "resources:",
    "text": "resources:\n\nhttps://geodacenter.github.io/workbook/6a_local_auto/lab6a.html"
  },
  {
    "objectID": "hot-spot-analysis/code-through-ending.html",
    "href": "hot-spot-analysis/code-through-ending.html",
    "title": "Hot Spot Analysis Recap",
    "section": "",
    "text": "Create neighbors\nCreate weights\nCalculate measure\n\nreturns data.frame\n\nunnest results\nvisualize"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#the-spatial-lag",
    "href": "spatial-lag/spatial-lag.html#the-spatial-lag",
    "title": "spatial analysis",
    "section": "The Spatial Lag",
    "text": "The Spatial Lag\n\nThe weighted average of a variable in a neighborhood\n\n\\[Wy_i = \\sum_{j = 1}^{n} W_{ij} * yj\\]\n\nit’s a formula which is tough lets break it down"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#ij",
    "href": "spatial-lag/spatial-lag.html#ij",
    "title": "spatial analysis",
    "section": "\\(ij\\)",
    "text": "\\(ij\\)\n\n\n\n\\(i\\) is the observed element of a vector (black)\n\n\\(j\\) is that element’s neighbors in space (white)\n\n\\(ij\\) the neighbors of element \\(i\\)"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#ij-1",
    "href": "spatial-lag/spatial-lag.html#ij-1",
    "title": "spatial analysis",
    "section": "\\(ij\\)",
    "text": "\\(ij\\)"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#yi",
    "href": "spatial-lag/spatial-lag.html#yi",
    "title": "spatial analysis",
    "section": "\\(yi\\)",
    "text": "\\(yi\\)\n\n\n\\(yi\\) is the observed value at each location"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#w_ij",
    "href": "spatial-lag/spatial-lag.html#w_ij",
    "title": "spatial analysis",
    "section": "\\(W_{ij}\\)",
    "text": "\\(W_{ij}\\)\n\n\nThe spatial weights\nFor simplicity: row standardized weights\n\n\\(1 \\div card(i)\\)\n\ncardinality is the number of neighbors\n\n\n8 neighbors\n\n\n\n\n\nCodecardi <- 8\nwij <- rep(1, cardi) / cardi\n\nwij\n#> c(0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125)"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#sum_j-1n-w_ij-yj",
    "href": "spatial-lag/spatial-lag.html#sum_j-1n-w_ij-yj",
    "title": "spatial analysis",
    "section": "\\(\\sum_{j = 1}^{n} W_{ij} * yj\\)",
    "text": "\\(\\sum_{j = 1}^{n} W_{ij} * yj\\)\n\nvalues <- c(8.4, 15.5, 6.9, 11.5, 3, 26.8, 5.2, 0.9, 7.9)\n\n# neighbor index\nnbs <- c(1:4, 6:9)\n\n# create neighbor values\nyj <- values[nbs]\n\n# multiply each element\nwij * yj\n\n[1] 1.0500 1.9375 0.8625 1.4375 3.3500 0.6500 0.1125 0.9875\n\n\n\n# the spatial lag\nsum(wij * yj)\n\n[1] 10.3875"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#observed-vs.-lagged",
    "href": "spatial-lag/spatial-lag.html#observed-vs.-lagged",
    "title": "spatial analysis",
    "section": "Observed vs. Lagged",
    "text": "Observed vs. Lagged"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#understanding-the-lag",
    "href": "spatial-lag/spatial-lag.html#understanding-the-lag",
    "title": "spatial analysis",
    "section": "Understanding the lag",
    "text": "Understanding the lag\n\nit is the average value of the neighborhood\n“expected value” of the neighborhood\nsummarizes values of \\(x\\) for an observation \\(i\\)’s neighborhood"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#identifying-neighbors",
    "href": "spatial-lag/spatial-lag.html#identifying-neighbors",
    "title": "spatial analysis",
    "section": "Identifying Neighbors",
    "text": "Identifying Neighbors\n\nsimplest way using st_contiguity()\n\nrequires sf or sfc object\nQueen contiguity by default\n\nshared sides and corners\n\n\n\n\n\ndata(guerry, package = \"sfdep\")\n\nnb <- st_contiguity(guerry)\nnb\n\nNeighbour list object:\nNumber of regions: 85 \nNumber of nonzero links: 420 \nPercentage nonzero weights: 5.813149 \nAverage number of links: 4.941176"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#nb-class-objects",
    "href": "spatial-lag/spatial-lag.html#nb-class-objects",
    "title": "spatial analysis",
    "section": "\nnb class objects",
    "text": "nb class objects\n\n\nnb class from spdep\n\n\n\n\nattributes(nb)\n\n$class\n[1] \"nb\"   \"list\"\n\n$region.id\n [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\" \"13\" \"14\" \"15\"\n[16] \"16\" \"17\" \"18\" \"19\" \"20\" \"21\" \"22\" \"23\" \"24\" \"25\" \"26\" \"27\" \"28\" \"29\" \"30\"\n[31] \"31\" \"32\" \"33\" \"34\" \"35\" \"36\" \"37\" \"38\" \"39\" \"40\" \"41\" \"42\" \"43\" \"44\" \"45\"\n[46] \"46\" \"47\" \"48\" \"49\" \"50\" \"51\" \"52\" \"53\" \"54\" \"55\" \"56\" \"57\" \"58\" \"59\" \"60\"\n[61] \"61\" \"62\" \"63\" \"64\" \"65\" \"66\" \"67\" \"68\" \"69\" \"70\" \"71\" \"72\" \"73\" \"74\" \"75\"\n[76] \"76\" \"77\" \"78\" \"79\" \"80\" \"81\" \"82\" \"83\" \"84\" \"85\"\n\n$call\nspdep::poly2nb(pl = x, queen = queen)\n\n$type\n[1] \"queen\"\n\n$sym\n[1] TRUE"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#nb-class-objects-1",
    "href": "spatial-lag/spatial-lag.html#nb-class-objects-1",
    "title": "spatial analysis",
    "section": "\nnb class objects",
    "text": "nb class objects\n\nsparse matrix (list) of neighbors\neach element is an integer vector\nelements are row position of neighbor\n\n\n\nnb[1:3]\n\n[[1]]\n[1] 36 37 67 69\n\n[[2]]\n[1]  7 49 57 58 73 76\n\n[[3]]\n[1] 17 21 40 56 61 69"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#spatial-weights",
    "href": "spatial-lag/spatial-lag.html#spatial-weights",
    "title": "spatial analysis",
    "section": "spatial weights",
    "text": "spatial weights\n\nst_weights(nb)\nrow standardized by default\nreturns list\neach element is numeric vector with same cardinality as the neighbor list\n\ncontains the weight for the corresponding element in the nb list\nnote: cardinality is the number of neighbors"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#spatial-weights-1",
    "href": "spatial-lag/spatial-lag.html#spatial-weights-1",
    "title": "spatial analysis",
    "section": "spatial weights",
    "text": "spatial weights\n\nwt <- st_weights(nb)\n\nwt[1:3]\n\n[[1]]\n[1] 0.25 0.25 0.25 0.25\n\n[[2]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[3]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#spatial-lag",
    "href": "spatial-lag/spatial-lag.html#spatial-lag",
    "title": "spatial analysis",
    "section": "spatial lag",
    "text": "spatial lag\n\nuse st_lag(x, nb, wt)\n\n\n\nx <- guerry$crime_pers\n\nst_lag(x, nb, wt)\n\n [1] 23047.50 26919.67 26195.50 14401.25 15038.67 15749.00 22111.67 13672.33\n [9] 22859.20 11475.20 12200.14 13278.67 24734.00 11752.83 17992.60 21974.40\n[17] 26711.00 19344.00 23696.71 25108.67 21643.17 18306.00 24280.00 14451.60\n[25] 21047.67 21421.33 25961.50 10869.83 13415.67 17172.17 20238.25 12504.25\n[33] 26723.00 21772.83 26462.20 19252.00 24683.20 20607.25 24412.00 19373.71\n[41] 16000.20 23993.25 20337.86 16818.67 17113.83 13013.00 22133.00 24093.75\n[49] 25661.67 22190.17 29030.00 16951.00 24509.00 24982.75 19491.50 24176.00\n[57] 27639.67 21274.33 24510.33 30166.00 23459.00 16184.00 18002.00 10910.00\n[65] 16251.25 15572.00 25884.25 23020.60 26495.00 24690.50 17339.00 25522.33\n[73] 18970.00 19701.83 21841.00 24520.40 14025.80 14565.17 13306.67 12579.00\n[81] 21529.50 23474.50 24373.17 19900.50 23373.60"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#spatial-lag-1",
    "href": "spatial-lag/spatial-lag.html#spatial-lag-1",
    "title": "spatial analysis",
    "section": "spatial lag",
    "text": "spatial lag\n\ncalculate by hand using lists\n\n\nij <- nb[[1]]\nwij <- wt[[1]]\nxij <- x[ij]\n\nxij * wij\n\n[1] 4696.25 6555.25 4698.25 7097.75\n\nsum(xij * wij)\n\n[1] 23047.5"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#guerry",
    "href": "spatial-lag/spatial-lag.html#guerry",
    "title": "spatial analysis",
    "section": "Guerry",
    "text": "Guerry\n\ndplyr::glimpse(guerry)\n\nRows: 85\nColumns: 27\n$ code_dept       <fct> 01, 02, 03, 04, 05, 07, 08, 09, 10…\n$ count           <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ ave_id_geo      <dbl> 49, 812, 1418, 1603, 1802, 2249, 3…\n$ dept            <int> 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12…\n$ region          <fct> E, N, C, E, E, S, N, S, E, S, S, S…\n$ department      <fct> Ain, Aisne, Allier, Basses-Alpes, …\n$ crime_pers      <int> 28870, 26226, 26747, 12935, 17488,…\n$ crime_prop      <int> 15890, 5521, 7925, 7289, 8174, 102…\n$ literacy        <int> 37, 51, 13, 46, 69, 27, 67, 18, 59…\n$ donations       <int> 5098, 8901, 10973, 2733, 6962, 318…\n$ infants         <int> 33120, 14572, 17044, 23018, 23076,…\n$ suicides        <int> 35039, 12831, 114121, 14238, 16171…\n$ main_city       <ord> 2:Med, 2:Med, 2:Med, 1:Sm, 1:Sm, 1…\n$ wealth          <int> 73, 22, 61, 76, 83, 84, 33, 72, 14…\n$ commerce        <int> 58, 10, 66, 49, 65, 1, 4, 60, 3, 3…\n$ clergy          <int> 11, 82, 68, 5, 10, 28, 50, 39, 42,…\n$ crime_parents   <int> 71, 4, 46, 70, 22, 76, 53, 74, 77,…\n$ infanticide     <int> 60, 82, 42, 12, 23, 47, 85, 28, 54…\n$ donation_clergy <int> 69, 36, 76, 37, 64, 67, 49, 63, 9,…\n$ lottery         <int> 41, 38, 66, 80, 79, 70, 31, 75, 28…\n$ desertion       <int> 55, 82, 16, 32, 35, 19, 62, 22, 86…\n$ instruction     <int> 46, 24, 85, 29, 7, 62, 9, 77, 15, …\n$ prostitutes     <int> 13, 327, 34, 2, 1, 1, 83, 3, 207, …\n$ distance        <dbl> 218.372, 65.945, 161.927, 351.399,…\n$ area            <int> 5762, 7369, 7340, 6925, 5549, 5529…\n$ pop1831         <dbl> 346.03, 513.00, 298.26, 155.90, 12…\n$ geometry        <MULTIPOLYGON> MULTIPOLYGON (((801150 20…"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#in-one-fell-swoop",
    "href": "spatial-lag/spatial-lag.html#in-one-fell-swoop",
    "title": "spatial analysis",
    "section": "In one fell swoop",
    "text": "In one fell swoop\n\nguerry |> \n  transmute(\n    nb = st_contiguity(geometry),\n    wt = st_weights(nb),\n    crime_lag = st_lag(crime_pers, nb, wt)\n  )\n\nSimple feature collection with 85 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 47680 ymin: 1703258 xmax: 1031401 ymax: 2677441\nCRS:           NA\n# A tibble: 85 × 4\n   nb        wt        crime_lag                    geometry\n * <nb>      <list>        <dbl>              <MULTIPOLYGON>\n 1 <int [4]> <dbl [4]>    23048. (((801150 2092615, 800669 …\n 2 <int [6]> <dbl [6]>    26920. (((729326 2521619, 729320 …\n 3 <int [6]> <dbl [6]>    26195. (((710830 2137350, 711746 …\n 4 <int [4]> <dbl [4]>    14401. (((882701 1920024, 882408 …\n 5 <int [3]> <dbl [3]>    15039. (((886504 1922890, 885733 …\n 6 <int [7]> <dbl [7]>    15749  (((747008 1925789, 746630 …\n 7 <int [3]> <dbl [3]>    22112. (((818893 2514767, 818614 …\n 8 <int [3]> <dbl [3]>    13672. (((509103 1747787, 508820 …\n 9 <int [5]> <dbl [5]>    22859. (((775400 2345600, 775068 …\n10 <int [5]> <dbl [5]>    11475. (((626230 1810121, 626269 …\n# … with 75 more rows\n# ℹ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#lets-make-something-shall-we",
    "href": "spatial-lag/spatial-lag.html#lets-make-something-shall-we",
    "title": "spatial analysis",
    "section": "Let’s make something, shall we?",
    "text": "Let’s make something, shall we?"
  },
  {
    "objectID": "writing-functions-shorts/functions-intermediate.html",
    "href": "writing-functions-shorts/functions-intermediate.html",
    "title": "functions-intermediate",
    "section": "",
    "text": "s3 methods\nside-effects"
  },
  {
    "objectID": "writing-functions-shorts/understanding-functions.html#functions-rock-because",
    "href": "writing-functions-shorts/understanding-functions.html#functions-rock-because",
    "title": "understanding functions",
    "section": "functions rock because…",
    "text": "functions rock because…\n\nrepeating code is easy\neasier to read\nmakes your code simpler\n(somewhat) easy to share"
  },
  {
    "objectID": "writing-functions-shorts/understanding-functions.html#function-arguments-1",
    "href": "writing-functions-shorts/understanding-functions.html#function-arguments-1",
    "title": "understanding functions",
    "section": "function arguments",
    "text": "function arguments\n\nadd <- function(x, y) {\n  x + y \n}\n\nadd(10, 2)\n\n[1] 12"
  },
  {
    "objectID": "writing-functions-shorts/understanding-functions.html#functions",
    "href": "writing-functions-shorts/understanding-functions.html#functions",
    "title": "understanding functions",
    "section": "functions:",
    "text": "functions:\n\nare objects\nthat take inputs (arguments)\nreturn an output\ncontain valid R code"
  },
  {
    "objectID": "writing-functions-shorts/understanding-functions.html#make-good-functions-by",
    "href": "writing-functions-shorts/understanding-functions.html#make-good-functions-by",
    "title": "understanding functions",
    "section": "make good functions by:",
    "text": "make good functions by:\n\nhandle missing arguments\nexiting the function early\nchecking types"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#for-loops",
    "href": "getting-away-with-for-loops/index.html#for-loops",
    "title": "for loops in R",
    "section": "for loops",
    "text": "for loops\n\na way to repeat code a set number of times\nextremely common in every other programming language\n\n\nfor loops are a way to repeat a piece of code a set number of times they’re very common in other programming languages. but in R they’re not always recommended and for reasons we’ll get into"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#for-loops-1",
    "href": "getting-away-with-for-loops/index.html#for-loops-1",
    "title": "for loops in R",
    "section": "for loops",
    "text": "for loops\n\nstart by defining a loop with for keyword\n\n\n# what you are iterating through\nfor () {\n}\n\nto write a for loop we start by declaring it with the keyword for the parenthesis will be used to definie what we’re iterating through and the brackets are going to contain the code that will be repeated"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#for-loops-2",
    "href": "getting-away-with-for-loops/index.html#for-loops-2",
    "title": "for loops in R",
    "section": "for loops",
    "text": "for loops\n\niterate through an index\n\n\n# what you are iterating through\nfor (i in 1:length(x)) {\n}\n\nthere are two common ways we can iterate. the first is to iterate through a sequence of indexes in this loop the value i will take the value from 1, 2, 3, and so on until we reach the length of x meaning if there are 10 values in x i will take on the value 1, 2, 3, 4, 5, 6, 7, 8, 9, and 100"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#for-loops-3",
    "href": "getting-away-with-for-loops/index.html#for-loops-3",
    "title": "for loops in R",
    "section": "for loops",
    "text": "for loops\n\niterate through values\n\n\n# what you are iterating through\nfor (val in x) {\n}\n\nalternatively, we can iterate through each value in x. at each iteration the placeholder val will take on that value of x so, the first iteration val will have the first value of x the second will have the second value of x, and so on"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#for-loops-4",
    "href": "getting-away-with-for-loops/index.html#for-loops-4",
    "title": "for loops in R",
    "section": "for loops",
    "text": "for loops\n\nindexes are used to subset typically\n\n\n\n\n\n\nmost helpful for subsetting multiple things\n\n\ni like using the i in … format. this is clearest to me. and it’s often used for subsetting objects at each step in the for loop"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#for-loops-5",
    "href": "getting-away-with-for-loops/index.html#for-loops-5",
    "title": "for loops in R",
    "section": "for loops",
    "text": "for loops\n\nor use values directly\n\n\nfor (val in x) {\n  \n  result <- fx(val) |>\n    do_another_thing()\n    \n}\n\ntaking the values at each iteration is useful when you have only one object you’re iterating through and you do not need to keep track of the iteration number"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#humans-are-fallible",
    "href": "getting-away-with-for-loops/index.html#humans-are-fallible",
    "title": "for loops in R",
    "section": "humans are fallible",
    "text": "humans are fallible\n\n\n\nhttps://xkcd.com/1739/\n\nThere are some really valid and good reasons why for loops don’t get all that much love. Often, for loops are pretty slow. And I think it mostly boils down to us asking too much of them. And, that’s our fault."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#section-4",
    "href": "getting-away-with-for-loops/index.html#section-4",
    "title": "for loops in R",
    "section": "",
    "text": "Botticelli’s illustration of Dante’s Divine Comedy (1481)\n\nWhat are we doing wrong when we write for loops? For loops pained Patrick Burns so much that he dedicated a special place in hell for them. Two places actually. The second and third circles of hell can be traced back to for loops."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#walk-with-me-through-hell",
    "href": "getting-away-with-for-loops/index.html#walk-with-me-through-hell",
    "title": "for loops in R",
    "section": "Walk with me through hell",
    "text": "Walk with me through hell\n\n\n\nWalk with me in hell for a moment, will you?"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#section-5",
    "href": "getting-away-with-for-loops/index.html#section-5",
    "title": "for loops in R",
    "section": "",
    "text": "The R Inferno - Patrick Burns\nhttps://www.burns-stat.com/pages/Tutor/R_inferno.pdf\n\nR is pretty good at a lot of things. Most cases of bad for loops are because you tried to do something that R can do better. You most likely did something each time in a loop that can be done only once with a vectorized function. Vectorize functions?? Well, I’m so glad you asked."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#the-powerhouse-of-r",
    "href": "getting-away-with-for-loops/index.html#the-powerhouse-of-r",
    "title": "for loops in R",
    "section": "the powerhouse of R",
    "text": "the powerhouse of R\n\nLike the mitochondria is the powerhouse of the cell. Vectors are the power house of R"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#vectors-1",
    "href": "getting-away-with-for-loops/index.html#vectors-1",
    "title": "for loops in R",
    "section": "vectors",
    "text": "vectors\n\nthe basic unit in R\natomic and lists\n4 main types of atomic vectors"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#vectors-2",
    "href": "getting-away-with-for-loops/index.html#vectors-2",
    "title": "for loops in R",
    "section": "vectors",
    "text": "vectors\n\n\nChapter 3, Vectors (Advanced R, Hadley Wickham)\nhttps://adv-r.hadley.nz/vectors-chap.html\n\nthe basic unit in R is the vector there are two types. atomic and lists atomic vectors are what we think of when we say vector there are 4 main types of them logical, integer, double, and character (or string)"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#vectors-3",
    "href": "getting-away-with-for-loops/index.html#vectors-3",
    "title": "for loops in R",
    "section": "vectors",
    "text": "vectors\n\nare composed of elements\nelements are of the same type\ncreated with c()\n\n\nc(TRUE, FALSE, NA)\n\n3 elements\n\n\n\n\nAtomic vectors store only one type of data at a time and are created with c(). Every vector is composed of n elements. this is a logical vector with 3 elements."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#circle-3",
    "href": "getting-away-with-for-loops/index.html#circle-3",
    "title": "for loops in R",
    "section": "Circle 3",
    "text": "Circle 3\n\nfind sum of the natural log of x\n\n\n\n\n\n\nx <- runif(10)\n\nlsum <- 0\n\nfor (i in 1:length(x)) {\n  lsum <- lsum + log(x[i])\n}\n\nlsum\n\n[1] -5.71996\n\n\n\nLet’s take the example straight out of the book!\nThe objective? Take the natural logarithm of each element and then add them all up.\nCalculates the log of \\(x_i\\) and adds it the the lsum object which grows until the list ends."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#vectorized-solution",
    "href": "getting-away-with-for-loops/index.html#vectorized-solution",
    "title": "for loops in R",
    "section": "vectorized solution",
    "text": "vectorized solution\n\n\nsum(log(x))\n\n\n\nlog() applied to each element\n\n\n\n\nlog(x)\n\n [1] -0.10903704 -1.32610781 -0.98852842 -0.55712551 -0.09628208 -1.60106342\n [7] -0.10715136 -0.05691404 -0.41430740 -0.46344273\n\n\n\n\nsum() applied to all elements\n\n\n\n\nsum(log(x))\n\n[1] -5.71996\n\n\n\nlog and sum are both vectorized functions but they are vectorized in different ways log() is vectorized in the way that it does something to each element. sum() is vectorized in the way that it takes an entire vector and does operation on the entire thing.\nlog applies the natural log to every element at once and sum sums it all up!"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#vectorized-solutions",
    "href": "getting-away-with-for-loops/index.html#vectorized-solutions",
    "title": "for loops in R",
    "section": "vectorized solutions",
    "text": "vectorized solutions\n\nyou should use them\ncleaner\nfaster\nmore effective\n\n\nyou should always look for vectorized solutions they are clearer always faster and since they’re faster, they’re more effective"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#another-example",
    "href": "getting-away-with-for-loops/index.html#another-example",
    "title": "for loops in R",
    "section": "another example",
    "text": "another example\n\nrow means of Anscombe’s Quartet\n\n\n\nanscombe <- as.matrix(datasets::anscombe)\nanscombe\n\n      x1 x2 x3 x4    y1   y2    y3    y4\n [1,] 10 10 10  8  8.04 9.14  7.46  6.58\n [2,]  8  8  8  8  6.95 8.14  6.77  5.76\n [3,] 13 13 13  8  7.58 8.74 12.74  7.71\n [4,]  9  9  9  8  8.81 8.77  7.11  8.84\n [5,] 11 11 11  8  8.33 9.26  7.81  8.47\n [6,] 14 14 14  8  9.96 8.10  8.84  7.04\n [7,]  6  6  6  8  7.24 6.13  6.08  5.25\n [8,]  4  4  4 19  4.26 3.10  5.39 12.50\n [9,] 12 12 12  8 10.84 9.13  8.15  5.56\n[10,]  7  7  7  8  4.82 7.26  6.42  7.91\n[11,]  5  5  5  8  5.68 4.74  5.73  6.89\n\n\n\nlet’s take another example using anscombes quartet and calculating the average of each row"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#another-example-1",
    "href": "getting-away-with-for-loops/index.html#another-example-1",
    "title": "for loops in R",
    "section": "another example",
    "text": "another example\nusing a loop\n\nfor (i in 1:nrow(anscombe)) {\n  row <- anscombe[i,]\n  print(mean(row))\n}\n\n[1] 8.6525\n[1] 7.4525\n[1] 10.47125\n[1] 8.56625\n[1] 9.35875\n[1] 10.4925\n[1] 6.3375\n[1] 7.03125\n[1] 9.71\n[1] 6.92625\n[1] 5.755\n\n\n\nthis can be accomplished fairly simply using a for loop in which we subset the matrix by its row number then calculate the mean for that row"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#vectorized",
    "href": "getting-away-with-for-loops/index.html#vectorized",
    "title": "for loops in R",
    "section": "vectorized",
    "text": "vectorized\nusing an existing vectorized function\n\nrowMeans(anscombe)\n\n [1]  8.65250  7.45250 10.47125  8.56625  9.35875 10.49250  6.33750  7.03125\n [9]  9.71000  6.92625  5.75500\n\n\n\nbut since there is an already vectorized function rowMeans() we should use that instead."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#growing-objects",
    "href": "getting-away-with-for-loops/index.html#growing-objects",
    "title": "for loops in R",
    "section": "growing objects",
    "text": "growing objects\n\nR only allocated what it needed with results <- c()\n\n\nc(results, log(x[i])) needs to\n\nmove the data,\nmake space,\nand check types each time\n\n\n\n\nwhen you create an object in R R only stores the amount of memory necessary for it at that time and when you want to amke it bigger, R needs to move the data, figure out how much space to make, and check the types of data that are being squished every. single. time. and while this is bad…."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#section-6",
    "href": "getting-away-with-for-loops/index.html#section-6",
    "title": "for loops in R",
    "section": "",
    "text": "“How to rbind dataframes in a for loop”\nAsked Jan 23, 2019\nSolution:\n\ni=1\ntable_page_all  <- data.frame()\nfor (page in as.character(df$website)){\n\n  keywordA <- data.frame(matrix(page))\n  keywordB <- data.frame(matrix(\"REVIEW\"))\n  keywordC <- data.frame(df$keyword_page[i])\n\n   i <- i +1\n   table_page_all  <- rbind(table_page_all, \n                            data.frame(keywordA, keywordB, keywordC))\n}\n\ncolnames(table_page_all) <- c(\"KEYWORD A\", \"KEYWORD B\", \"KEYWORD C\")\n\n\n\nhttps://stackoverflow.com/questions/54328512/how-to-rbind-dataframes-in-a-for-loop\n\nthis is a really great example of what not to do when writing a for loop It’s an accepted answer for a stack overflow question from 2019. the challenges arise from line 2 and the rbind statement when we want to fill an object using a for loop we should always make sure there is room for it"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#preallocating-vectors",
    "href": "getting-away-with-for-loops/index.html#preallocating-vectors",
    "title": "for loops in R",
    "section": "preallocating vectors",
    "text": "preallocating vectors\n\ngrowing objects is slow\nif R knows the size, it is okay\n\n\n\nresults <- numeric(length(x))\n\nfor (i in 1:length(x)) {\n  \n  results[i] <- log(x)[i]\n  \n}\n\n\nmake sure that R knows how big an object is going to be we don’t want it figuring it out more than once"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#benchmarking-pre-allocation",
    "href": "getting-away-with-for-loops/index.html#benchmarking-pre-allocation",
    "title": "for loops in R",
    "section": "benchmarking pre-allocation",
    "text": "benchmarking pre-allocation\n\n\nthese are still bad because they don’t take advantage of the vectorization of log()\n\nx <- runif(1000)\n\nbench::mark(\n  not_allocated = {\n    results <- c()\n    for (i in 1:length(x)) results <- c(results, log(x[i]))\n  },\n  allocated = {\n    results <- numeric(length(x))\n    for (i in 1:length(x)) results[i] <- log(x[i])\n  }\n)\n\n# A tibble: 2 × 6\n  expression         min   median `itr/sec` mem_alloc `gc/sec`\n  <bch:expr>    <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl>\n1 not_allocated   2.08ms   2.45ms      406.    3.88MB     32.0\n2 allocated     747.72µs 815.43µs     1166.   25.37KB     41.0\n\n\n\nlets compare the differences in runtime memory and speed when we preallocate our vectors preallocation is sooooo much faster and soooo much more memory efficient"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#a-new-example",
    "href": "getting-away-with-for-loops/index.html#a-new-example",
    "title": "for loops in R",
    "section": "a new example",
    "text": "a new example\n\n\n\n\nmy_df <- data.frame()\n\nfor (i in 1:10) {\n  \n  n_samples <- rbinom(1, 100, runif(1))\n  \n  index <- sample.int(nrow(iris), size = n_samples, replace = TRUE)\n  \n  my_df <- rbind(my_df, iris[index,])\n  \n}\n\ndim(my_df)\n\n[1] 451   5\n\n\n\nsince the stack over flow example isn’t reproducible let’s make a new one. we’ll take a random number of rows from the iris dataset and then append it to an empty data frame 10 times\nfirst we create an empty data frame get a random number of rows to sample then we sample random integers, with replacement, as an index to subset the iris dataset then we squish it onto the my_df object"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#example-but-better",
    "href": "getting-away-with-for-loops/index.html#example-but-better",
    "title": "for loops in R",
    "section": "example but better",
    "text": "example but better\n\n\n\n\n\nresults <- vector(mode = \"list\", length = 10)\n\nfor (i in 1:10) {\n\n  n_samples <- rbinom(1, 100, runif(1))\n  \n  index <- sample.int(nrow(iris), size = n_samples, replace = TRUE)\n  \n  results[[i]] <- iris[index,]\n  \n}\n\nmy_df <- do.call(rbind, results)\n\ndim(my_df)\n\n[1] 451   5\n\n\n\nyou might be thinking “if i don’t know how many rows im going to have, how can i preallocate a dataframe of a determined size?”\nim going to say “don’t do that” and tell you to use a list lists are so flexible and so useful.\neach element of a list can hold whatever the hell we want lets take advantage of that\non each iteration let’s store the subset into a list then at the end we can squish them all together using an arcane incantation of do.call() and rbind()"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#example-but-better-1",
    "href": "getting-away-with-for-loops/index.html#example-but-better-1",
    "title": "for loops in R",
    "section": "example but better",
    "text": "example but better\n\n\n\n\nresults <- vector(mode = \"list\", length = 10)\n\nfor (i in 1:10) {\n\n  n_samples <- rbinom(1, 100, runif(1))\n  \n  index <- sample.int(nrow(iris), size = n_samples, replace = TRUE)\n  \n  results[[i]] <- iris[index,]\n  \n}\n\nmy_df <- dplyr::bind_rows(results)\n\ndim(my_df)\n\n\na more contemporary solution would be to use dplyr’s bind rows function and honestly, yah do that."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#section-7",
    "href": "getting-away-with-for-loops/index.html#section-7",
    "title": "for loops in R",
    "section": "",
    "text": "as florian privé wrote in his wonderful blog post “bullshit” hey, i didn’t say it. they did"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#section-8",
    "href": "getting-away-with-for-loops/index.html#section-8",
    "title": "for loops in R",
    "section": "",
    "text": "Why loops are slow in R - Florian Privé\nhttps://privefl.github.io/blog/why-loops-are-slow-in-r/"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#apply-functions",
    "href": "getting-away-with-for-loops/index.html#apply-functions",
    "title": "for loops in R",
    "section": "\napply() functions",
    "text": "apply() functions\n\nare nothing more than an internal C loop\nthey do their part in preallocating\n\nvapply() for example is type-safe\nroughly the same speed as for loops\n\n\nlet us not be misled. apply functions are not vectorized they are no more than an internal c loop they do their part in preallocating so they probably get right what you dont vapply() is even fancier in that it is type safe but if you wanted that you’d use rust since they’re just loop they’re roughly the same speed as a for loop"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#section-9",
    "href": "getting-away-with-for-loops/index.html#section-9",
    "title": "for loops in R",
    "section": "",
    "text": "they’re idiomatic\ncan be easier to read\nfewer lines of code (typically)\n\n\nthey’re idiomatic they can be easy to read (most of the time) and typically end up in fewer lines of code."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#scenario-simulated-p-values",
    "href": "getting-away-with-for-loops/index.html#scenario-simulated-p-values",
    "title": "for loops in R",
    "section": "Scenario: simulated p-values",
    "text": "Scenario: simulated p-values\n\ncalculate a statistic once (observed)\ncreate replicates with random samples (reps)\ncount how many times the observed was more extreme than the reps\nthe ratio is the simulated p-value\n\n\n\\[\np_{sim} = \\frac{M + 1}{R + 1}\n\\]\n\nthe problem was with how i was calculating simulated p-values simulated p-values are calculated by calculating an observed statistic then calculating the same measure but using random samples of your data after which you count how many times your statistic was more extreme than the replications then the ratio is the simulated p-value"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#my-previous-approach",
    "href": "getting-away-with-for-loops/index.html#my-previous-approach",
    "title": "for loops in R",
    "section": "my previous approach",
    "text": "my previous approach\n\ncalculate a statistic once\nabstract the calculation for all inputs using *apply()\n\nrepeat nsim times replicate()\n\n\n\nthe way i would do this was to first create a function that calculated the statistic then i’d abstract that to handle a vector of inputs using apply and then id repeat it a number of times with replicate()"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#set-contstants",
    "href": "getting-away-with-for-loops/index.html#set-contstants",
    "title": "for loops in R",
    "section": "set contstants",
    "text": "set contstants\n\nnsim = 999"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#set-contstants-1",
    "href": "getting-away-with-for-loops/index.html#set-contstants-1",
    "title": "for loops in R",
    "section": "set contstants",
    "text": "set contstants\n\nnsim = 999\nn = 100"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#set-contstants-2",
    "href": "getting-away-with-for-loops/index.html#set-contstants-2",
    "title": "for loops in R",
    "section": "set contstants",
    "text": "set contstants\n\nnsim = 999\nn = 100\nk = 10\n\n\nfirst, specify the number of simulations then the number of observations then the number or neighbors for each location"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#calculate-observed-observations",
    "href": "getting-away-with-for-loops/index.html#calculate-observed-observations",
    "title": "for loops in R",
    "section": "calculate “observed” observations",
    "text": "calculate “observed” observations\n\nsampling from a random normal distribution\n\n\n\n\n\n\nobs <- rnorm(n, sd = 0.5)\n\nobs\n\n  [1]  0.631477142 -0.163116680  0.664899631  0.636214661  0.207320717\n  [6] -0.769975021 -0.464283517 -0.147360223 -0.002883586  1.202326694\n [11]  0.381796731 -0.399504624 -0.573828505 -0.144730787 -0.149607559\n [16] -0.205755416  0.126111724 -0.445960564  0.217841650 -0.618769211\n [21] -0.112133943  0.188697823  0.066668180  0.402094755 -0.028553387\n [26]  0.251803986  0.542884681 -0.345476920 -0.642299677  0.023363086\n [31] -0.117853278 -0.271444128 -0.216655159 -0.324735823  0.363375374\n [36]  0.575955877  0.496080183 -0.214756555  0.619152050 -0.139673141\n [41]  0.878951545  0.280373045 -0.226391986 -0.416021648 -0.583285274\n [46] -0.532795290 -0.781891026  0.578268499  0.416023564 -0.113664346\n [51]  0.133068681 -0.188351359  1.220682314 -0.397669559 -0.027438737\n [56]  0.125070661  0.309121647 -0.086311751 -1.111950137 -0.631807192\n [61]  0.179364448 -0.005522739 -0.470324581 -0.057912661 -0.407484354\n [66]  0.121131740 -0.712549197  0.182970562  0.124206324  0.032644091\n [71]  0.009578196  0.128669189 -0.324505039 -0.059584381  0.332067850\n [76]  0.550484551  0.071885740 -0.058876799 -0.456034183 -0.718793120\n [81] -0.398544763  0.627041553  0.386071093 -0.109757813 -0.212405142\n [86] -0.209490050  0.498493430 -0.137889015  0.628009409  0.323337195\n [91]  0.649656151 -0.436631056  0.004185480 -0.440435862  0.298129508\n [96]  0.059858821 -0.141086939  0.727994201  0.114509795  0.498271964\n\n\n\nfor the sake of example, our “observed” statistic can be values from a random normal distribution"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#calculate-statistic-once",
    "href": "getting-away-with-for-loops/index.html#calculate-statistic-once",
    "title": "for loops in R",
    "section": "calculate statistic once",
    "text": "calculate statistic once\n\nin this case the “statistic” is the mean of 10 random values\n\n\n\n# calculate the statistic for one location i\nstat_calc <- function(k) mean(rnorm(k))\n\n# for example\nstat_calc(10)\n\n[1] 0.04043044\n\n\n\nand our statistic that we’re comparing to is the average of our K (10) random neighbors also from a normal distribution this super simple function takes a number k and return the average"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#generalize-for-a-vector",
    "href": "getting-away-with-for-loops/index.html#generalize-for-a-vector",
    "title": "for loops in R",
    "section": "generalize for a vector",
    "text": "generalize for a vector\n\n# write a function that abstracts to all [i, n]\nsimulate_stat <- function(n, k) {\n  sapply(1:n, \\(x) stat_calc(k))\n}\n\nsimulate_stat(100, 5)\n\n  [1] -0.602426248  0.180523489 -0.581355766  0.420786234  0.309852115\n  [6] -0.984980320 -0.323278982 -0.608887758  0.664531573 -0.184549005\n [11]  0.989520068 -0.060102461 -0.180402211 -0.619058037  0.084000646\n [16]  0.045911613  0.485379980 -0.027356989  0.139386703  0.289302386\n [21]  0.230713467 -0.193438400  0.505530631 -0.011872220 -0.232747564\n [26]  0.213136531 -0.359344537 -0.119056287  0.444854189 -0.035327755\n [31]  0.386681023 -0.421645796  0.012669832  0.034845254  0.267658962\n [36]  0.007010214  0.063571445  0.122497711  0.740724507 -0.438614539\n [41] -0.563525411  0.032876173 -0.117340632  0.243906716  0.328789406\n [46] -0.158480434  0.008116015  0.170851993  0.060778903  0.008736812\n [51]  0.554868167 -0.544664664 -0.309598599 -0.201443222 -0.464309605\n [56]  0.926308862  0.447793632 -0.661267617  0.105239385  0.221594856\n [61] -0.103155849  0.809794906 -0.182043467  0.224180365 -0.618556134\n [66] -0.528179300  1.295211844 -1.426050988 -0.730956717 -0.396441256\n [71]  0.340642931  0.249105897  0.235976457 -0.076725380 -0.325395579\n [76]  0.262193847 -0.181470216 -0.146240529 -0.002595019  0.741887602\n [81]  0.282080191  0.297974565 -0.547104399  0.345812861 -0.092270604\n [86] -1.024169669 -0.557661169  0.138645106 -0.034226969  0.267966054\n [91]  0.742224673 -0.484139695 -0.453993114 -0.601421471 -0.445290774\n [96] -0.225143093 -0.615895628  0.545072926  0.301983915  0.065925835\n\n\n\nnext i would generalize this with an apply statement here we just run stat_calc() n number of times and return a vector"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#repeat-it",
    "href": "getting-away-with-for-loops/index.html#repeat-it",
    "title": "for loops in R",
    "section": "repeat it",
    "text": "repeat it\n\nreps <- replicate(\n  nsim,\n  simulate_stat(n, k)\n)\n\ndim(reps)\n\n[1] 100 999\n\nhead(reps)\n\n            [,1]        [,2]       [,3]        [,4]        [,5]        [,6]\n[1,] -0.51496777  0.29583067  0.6894046  0.04918726 -0.06896474 -0.53336917\n[2,] -0.13294636 -0.05158104 -0.2760196 -0.12651346 -0.09521819 -0.40149901\n[3,]  0.27473581 -0.53347829 -0.1057627 -0.08760898  0.36259658  0.07924616\n[4,]  0.31285567  0.48388171  0.1803423 -0.39903375 -0.15918647  0.31204464\n[5,] -0.03997914  0.66098633 -0.1636986  0.32377374 -0.13679592  0.33498244\n[6,]  0.10334729 -0.03532271  0.1945962  0.06642699 -0.17377821  0.40564122\n            [,7]       [,8]         [,9]       [,10]       [,11]       [,12]\n[1,]  0.34012633  0.4005306  0.559637297  0.49998663  0.45360477  0.05615078\n[2,] -0.01284181  0.2098793 -0.145470491 -0.26382365 -0.66841145 -0.28629961\n[3,]  0.08982928  0.5663737  0.074783535  0.07636215  0.08100392  0.02399229\n[4,]  0.25381872  0.5745468 -0.504780466  0.16502864 -0.01446454 -0.24073511\n[5,]  0.06172193 -0.8106437  0.075693791 -0.06586965 -0.22560754  0.12203599\n[6,]  0.25752125  0.4646712 -0.007005765  0.17270922 -0.13355804 -0.34226180\n           [,13]       [,14]        [,15]       [,16]       [,17]       [,18]\n[1,]  0.30919951 -0.18666514 -0.004617855  0.22588216 -0.43072723 -0.35201667\n[2,] -0.14381761  0.03132988  0.010082080  0.61897661 -0.56387470  0.13482791\n[3,]  0.06252011  0.20768389 -0.123951733 -0.14289170  0.12214798 -0.20814741\n[4,] -0.20219959  0.09914978  0.187758260  0.29275300 -0.31477807  0.03833962\n[5,]  0.14921663 -0.29571802 -0.036870085  0.74644521 -0.13867711  0.35541212\n[6,] -0.15836088  0.22196708  0.231465381  0.05421817 -0.06124467 -0.26784378\n           [,19]       [,20]        [,21]       [,22]       [,23]       [,24]\n[1,] -0.25216013  0.05932977  0.006404654 -0.39544075 -0.41839762  0.12051720\n[2,] -0.14141965  0.60729505 -0.410638346 -0.03604191  0.16822926 -0.01168733\n[3,] -0.35940543 -0.49587228  0.325431071 -0.07413386 -0.49504685 -0.51907586\n[4,] -0.12408119 -0.21614148  0.198587380 -0.20967646  0.05446210  0.32511777\n[5,] -0.34789087 -0.09957614  0.037904025 -0.04800270  0.67820402 -0.06083854\n[6,]  0.04196668 -0.11945251  0.030837751  0.07143987  0.05397694  0.13102876\n           [,25]      [,26]      [,27]       [,28]      [,29]       [,30]\n[1,] -0.36114551  0.4917656 -0.5129156 -0.38946609 -0.2078415  0.19885502\n[2,] -0.43095853 -0.4961883  0.6464689  0.25264921  0.8703092  0.30947698\n[3,]  0.46399919  0.5841361  0.1645994 -0.82740740 -0.4993384 -0.24997107\n[4,]  0.53418614  0.2858982 -0.3079700  0.09474611  0.1622631  0.06750515\n[5,] -0.14585366  0.4259941  0.1442553 -0.40614958  0.7447625  0.41714973\n[6,]  0.01830265  0.4057847  0.2269353  0.45904261  0.4266509  0.06025433\n           [,31]       [,32]       [,33]      [,34]        [,35]       [,36]\n[1,] -0.38565056  0.20163456  0.12047162 -0.1686046 -0.008522827 -0.16309530\n[2,]  0.24216570  0.33589454 -0.80807232 -0.1006614  0.254964416  0.01418675\n[3,]  0.06670266  0.03336345 -0.56981498 -0.2393054  0.390157188  0.11616957\n[4,]  0.14078894 -0.67035012 -0.40068295  0.4996056  0.032957979 -0.16244167\n[5,]  0.22062709  0.35033993 -0.01477433  0.5616152  0.611629813  0.02018557\n[6,] -0.68283218  0.09260788  0.04409432  0.4171718 -0.460268048  0.35723917\n          [,37]       [,38]        [,39]       [,40]       [,41]        [,42]\n[1,] -0.1993621 -0.03829284  0.191597939 -0.02285408  0.01089519 -0.377068570\n[2,] -0.4211381  0.15408889  0.134312384 -0.23847683  0.49433687  0.234508269\n[3,]  0.9548491 -0.19296683 -0.002375535  0.28836337 -0.13524257 -0.006363107\n[4,] -0.2531325  0.31542961  0.426021808  0.35636894  0.32695001 -0.380906274\n[5,] -0.6057257  0.50512706 -0.531360687 -0.72548089  0.01287447  0.214207251\n[6,]  0.2549436  0.31886224 -0.002732059 -0.12157162 -0.25039524  0.057464349\n          [,43]       [,44]       [,45]       [,46]      [,47]      [,48]\n[1,]  0.3098685  0.89388453  0.26913997  0.07854172  0.7197595  0.7431758\n[2,]  0.2983027 -0.04839929 -0.11725951 -0.31318810  0.1775069  0.2092706\n[3,] -0.2778185  0.61832258  0.22214085  0.43464439  0.5291206 -0.1157195\n[4,]  0.2978624 -0.02275456  0.15232645 -0.57560762 -0.1113488  0.2437632\n[5,]  0.1448592 -0.12100974  0.03851727  0.27006394  0.2426246 -0.1839891\n[6,]  0.2994346  0.04489344 -0.64894696 -0.19002949  0.1662315  0.4883923\n         [,49]      [,50]      [,51]       [,52]       [,53]       [,54]\n[1,] 0.4541345  0.1690603 -0.3175250 -0.07499836  0.13240957 -0.31834132\n[2,] 0.3633764 -0.1747268  0.3697134 -0.23978869  0.47824260  0.27963047\n[3,] 0.1912132 -0.2419545  0.7875248  0.19015981  0.09348095 -0.28275898\n[4,] 0.6997756 -0.2710890  0.1692130  0.19469030 -0.07776197  0.58103819\n[5,] 0.1013837  0.1576790  0.0300594 -0.32315572 -0.18106873  0.29026811\n[6,] 0.3652599  0.1197155  0.1560979  0.41575054  0.11877140 -0.00419979\n            [,55]      [,56]      [,57]       [,58]       [,59]       [,60]\n[1,] -0.205638154  0.5945895  0.2501387  0.19298550 -0.23958476  0.05205367\n[2,] -0.057431442  0.2238074 -0.1889901 -0.08806125 -0.20864200  0.27758503\n[3,]  0.006160391  0.2915204  0.1365372 -0.12492269 -0.66075956  0.12054776\n[4,] -0.075129748 -0.1340137 -0.7110547  0.12477085  0.13143104 -0.08398255\n[5,] -0.038894406  0.1286849 -0.1800076  0.30065726 -0.01577549  0.29183138\n[6,]  0.227581184 -0.3894915  0.1619258 -0.06330361  0.50408131 -0.04339876\n           [,61]       [,62]      [,63]       [,64]        [,65]       [,66]\n[1,]  0.47790860  0.06066022  0.4088132  0.08161260  0.201106649  0.26065515\n[2,] -0.45668773  0.18285414  0.1516047  0.47710860  0.644341979  0.46694268\n[3,]  0.33600356 -0.03468124 -0.1507738 -0.27196683 -0.210157405  0.28566832\n[4,]  0.09719675 -0.20192089 -0.3952859 -0.07099785  0.003520747  0.12004320\n[5,] -0.29388894 -0.50395487  0.2640612  0.02550520  0.006675474 -0.44416958\n[6,]  0.39454269  0.24875452 -0.1029660  0.15251211 -0.469379164  0.05121025\n          [,67]       [,68]       [,69]       [,70]       [,71]      [,72]\n[1,]  0.6749891 -0.09619021  0.29139570 -0.20432493 -0.08025688  0.1645395\n[2,]  0.4151347 -0.13511791 -0.11591383 -0.58210447 -0.13940796  0.2564241\n[3,] -0.1701387  0.06432416 -0.31151599 -0.02059541  0.22341244  0.5691127\n[4,]  0.2209303 -0.28258173 -0.32738062 -0.10787235  0.05110671  0.1125893\n[5,]  0.1116928  0.01574254  0.58376340  0.10510574  0.13488920  0.1412790\n[6,]  0.1666152 -0.26204110 -0.07957735  0.03655788 -0.03211792 -0.3340783\n            [,73]       [,74]      [,75]       [,76]       [,77]       [,78]\n[1,] -0.247565114  0.40518858 -0.3806428 -0.46445524 -0.35432809  0.07521995\n[2,]  0.282862902 -0.34019810  0.1985671 -0.30762877 -0.54033928  0.38752657\n[3,]  0.003613628 -0.08150022 -0.1346725 -0.09151010  0.38693452  0.02405683\n[4,] -0.400069775  0.47296010  0.5271406  0.18208489 -0.07531307  0.06264377\n[5,]  0.418314897 -0.22622178  0.2243401  0.00711069 -0.12022228 -0.24287045\n[6,]  0.399396813  0.44335779 -0.1429270 -0.01265987 -0.31749625  0.04284685\n           [,79]       [,80]       [,81]        [,82]        [,83]       [,84]\n[1,] -0.04005815 -0.04767865 -0.17963555 -0.311184905  0.518614742 -0.03338581\n[2,]  0.07925653 -0.05458927  0.26023668 -0.105343727 -0.110364551  0.27636463\n[3,] -0.09406211  0.17369797 -0.07062201  0.185766648 -0.016806645  0.03129255\n[4,]  0.15525923 -0.14301724  0.12838375 -0.352054750 -0.002793731  0.06663838\n[5,]  0.02657600 -0.79081577  0.02014986  0.426928054 -0.003637414  0.13050498\n[6,]  0.60345605 -0.16416651 -0.30227700 -0.001653791 -0.077689521  0.02579147\n           [,85]       [,86]       [,87]      [,88]       [,89]      [,90]\n[1,]  0.46584251  0.01071760 -0.14376190  0.1005222 -0.26359121  0.1312087\n[2,] -0.98405780 -0.10373773  0.01672711 -0.1955776  0.18991696  0.1677682\n[3,]  0.22733740  0.03805034  0.33737557  0.4098596 -0.39518103 -0.1564946\n[4,]  0.05505626 -0.09261122  0.13025228  0.3330306 -0.56285394  0.3856186\n[5,] -0.12258958  0.17797493 -0.38719005  0.2023579 -0.06466657  0.3179036\n[6,] -0.41851913  0.14804088  0.15569819 -0.3306315  0.16381039  0.3765377\n           [,91]      [,92]       [,93]      [,94]        [,95]       [,96]\n[1,]  0.03114589 -0.4379956  0.12416759  0.1644524 -0.338147803 -0.11835749\n[2,] -0.30299555 -0.7956639  0.59813458 -0.1301600  0.125251645 -0.27848067\n[3,]  0.19555601 -0.1524930  0.19717900 -0.5509186  0.399259957  0.01268418\n[4,]  0.01446853  0.1079070 -0.12189451 -0.5502657 -0.025835611 -0.16888419\n[5,]  0.27339301 -0.3229302  0.25506567  0.5105540 -0.006367967  0.20277859\n[6,]  0.05954728  0.1738164  0.07213237 -0.4071221 -0.190461128  0.52840311\n           [,97]       [,98]       [,99]      [,100]      [,101]      [,102]\n[1,]  0.08907654  0.41699156 -0.05137094  0.27574629 -0.37856960 -0.05881549\n[2,]  0.00263289 -0.10469203 -0.01906331  0.78354422 -0.01184569  0.55830852\n[3,] -0.20776635  0.37287279  0.39001431  0.32225500  0.40995222  0.51444345\n[4,] -0.10523968 -0.28872693  0.19933431  0.22610743  0.17535856 -0.21337626\n[5,]  0.41769739 -0.06967248 -0.10105337 -0.04952475 -0.06369735 -0.08486079\n[6,] -0.20550759 -0.10108347 -0.04901355  0.28673876  0.46134203 -0.37934635\n          [,103]      [,104]      [,105]      [,106]     [,107]      [,108]\n[1,]  0.07998623  0.24052151  0.02124482  0.20231986 0.09737834 -0.01251451\n[2,] -0.16568164  0.19275729 -0.30522595 -0.21217341 0.07830599 -0.05638935\n[3,] -0.13237687  0.07999936 -0.22773889  0.07012252 0.09921312  0.33843381\n[4,]  0.43127975 -0.03692194  0.23128625  0.17675268 0.13421788 -0.01111016\n[5,]  0.35140891  0.34304242  0.49188699 -0.35291748 0.03646319  0.20500994\n[6,] -0.21268433  0.13996509 -0.48662370  0.08578167 0.19046483 -0.49692464\n         [,109]      [,110]      [,111]     [,112]     [,113]      [,114]\n[1,]  0.3196991 -0.75055880  0.11149735 -0.1718741 -0.2701093 -0.29841538\n[2,]  0.0214736 -0.26242490 -0.22176122  0.6630349 -0.5348378 -0.02097985\n[3,]  0.1234662  0.06247894  0.29079798  0.1247118 -0.1747623 -0.20770946\n[4,] -0.7077374  0.43235357 -0.09825469  0.2197409  0.0738736  0.30489580\n[5,] -0.2475654 -0.28032945 -0.19363665 -0.3842612  0.6389058  0.16120591\n[6,]  0.5251831  0.34053135 -0.31610835 -0.3146257 -0.1767507 -0.20702967\n          [,115]     [,116]     [,117]        [,118]      [,119]      [,120]\n[1,]  0.02566214 0.16070428  0.2352991  0.1062474641  0.37685315 -0.07426108\n[2,]  0.08139194 0.20847570 -0.1639809  0.0718039370 -0.20179148 -0.67012377\n[3,]  0.24318408 0.26113782 -0.4679509 -0.0592133889 -0.08160505 -0.09592748\n[4,] -0.37132739 0.09643558  0.0330706 -0.0001296273  0.50163365  0.45865443\n[5,] -0.10421518 0.01794710  0.2836286  0.3009871084  0.32635136  0.19480889\n[6,]  0.28346041 0.13434612  0.2583342 -0.0334763075  0.07900864 -0.37951447\n          [,121]      [,122]      [,123]      [,124]     [,125]       [,126]\n[1,]  0.67661210 -0.14702784 -0.09240761  0.05369508 -0.1730627  0.097240466\n[2,]  0.18647245 -0.40254320  0.39921482  0.01256342  0.2180293 -0.587649933\n[3,]  0.05619297 -0.08676255 -0.14204297  0.13887854  0.4353370 -0.008937031\n[4,]  0.02472606  0.21078734  0.03284713 -0.33595550 -0.2132423 -0.323010092\n[5,] -0.40697990 -0.10580466 -0.11898944  0.16981414 -0.2442862 -0.223479069\n[6,] -0.18404727 -0.03738464  0.60275711  0.33038533  0.4147564  0.074834338\n          [,127]      [,128]        [,129]      [,130]     [,131]      [,132]\n[1,] -0.03544734 -0.45255812  0.4341703425  0.20059179  0.0264295  0.34445913\n[2,]  0.24214245  0.13548831 -0.2784007172  0.31517680 -0.2468703  0.06271889\n[3,]  0.07876653  0.51198902 -0.3259981114  0.01948984 -0.3557472 -0.00531022\n[4,]  0.28087000  0.44552999 -0.0004794803 -0.62667121 -0.1933706  0.25683786\n[5,]  0.37859184  0.15283037  0.3476818099  0.63538132  0.2918755 -0.22047934\n[6,] -0.04076022 -0.01165899  0.2575556072 -0.28202782  0.2475470 -0.32338680\n          [,133]      [,134]      [,135]      [,136]      [,137]      [,138]\n[1,] -0.24868929 -0.53184426  0.36090565 -0.35139296 -0.47251384  0.03003811\n[2,] -0.13304056 -0.53038971 -0.25651383 -0.01862317  0.03589266 -0.15891035\n[3,]  0.04427159  0.33783051 -0.49142413  0.04448394  0.73469766  0.13883693\n[4,]  0.09390231 -0.04583197 -0.39731912  0.18167407 -0.30345696  0.14596347\n[5,] -0.22478329  0.13001196  0.09718603  0.35581485  0.41416520 -0.17254885\n[6,] -0.08587639  0.08417227  0.12508659 -0.12673771  0.13413005  0.04804610\n          [,139]      [,140]      [,141]     [,142]      [,143]      [,144]\n[1,] -0.09840264 -0.08276381 -0.03641869  0.1102107 -0.13248786  0.19383813\n[2,]  0.12891407 -0.49622019 -0.07022943 -0.1201232 -0.15393060 -0.16164298\n[3,] -0.12748957 -0.01122559  0.07902150 -0.1390136 -0.12966954 -0.54263835\n[4,] -0.25563414  0.32825614 -0.22056688  0.1106293  0.12318647  0.04741405\n[5,]  0.22208157  0.29528865 -0.55543715  0.3703098  0.09815616 -0.16957631\n[6,]  0.47950378  0.38181838  0.31234037 -0.2301352  0.20507920 -0.13336090\n          [,145]     [,146]      [,147]       [,148]      [,149]     [,150]\n[1,]  0.21604577  0.2724162  0.27321021  0.090172991  0.41054666 -0.1685871\n[2,] -0.29709635 -0.1382186  0.43892694 -0.209543362 -0.33255407 -0.1107152\n[3,]  0.44867582  0.2690576  0.07530388  0.116419680  0.03662097 -0.3064979\n[4,]  0.10055396  0.4242063  0.23296820  0.003775349 -0.53158628  0.1991016\n[5,] -0.46066600  0.2991094  0.27516333  0.308666824  0.31679403  0.4931368\n[6,]  0.02025905 -0.2269778 -0.32070605 -0.493111263  0.36828251 -0.3204407\n          [,151]      [,152]      [,153]      [,154]     [,155]      [,156]\n[1,] -0.33772060  0.09104796  0.21311339  0.43348167 -0.2122639 -0.23082795\n[2,]  0.01371973  0.55717894 -0.29564299 -0.50887723  0.1037492  0.07082691\n[3,]  0.17880067  0.10316466 -0.40025060  0.03038997  0.4565141 -0.02727471\n[4,] -0.10382681  0.11466328  0.12351268 -0.08641971 -0.1279099 -0.33256904\n[5,]  0.06798737 -0.02880777 -0.02966342  0.06418877 -0.0164606  0.18132531\n[6,]  0.57383797  0.03893307  0.08477902 -0.05858530  0.2573035 -0.29312382\n          [,157]      [,158]      [,159]       [,160]      [,161]      [,162]\n[1,] -0.05760366  0.60036787  0.91615291 -0.004068247  0.18745570  0.27031375\n[2,] -0.07005677  0.06184669  0.27143083 -0.169700341  0.15896729  0.34625368\n[3,]  0.33301630 -0.26665815 -0.02714895 -0.335125558 -0.63707539 -0.06027264\n[4,]  0.03878025 -0.12900785 -0.34042047 -0.361193456  0.02464986  0.46511051\n[5,] -0.53918404  0.32957129 -0.12953561  0.079844471 -0.31765895  0.26788535\n[6,] -0.23130645  0.19181499 -0.59746582 -0.005884803 -0.18195633  0.28279609\n          [,163]       [,164]      [,165]     [,166]      [,167]     [,168]\n[1,]  0.24897311  0.013310533 -0.05475684 0.11628772 -0.07145987 -0.2620769\n[2,]  0.06878027 -0.006509185 -0.25925662 0.11363719  0.21922909 -0.1656778\n[3,] -0.22057501  0.150921180 -0.51786655 0.54637246  0.16065825 -0.1354462\n[4,]  0.17640832  0.309518517 -0.10703029 0.22106639  0.42320910 -0.1179704\n[5,] -0.51365877  0.112282317  0.25290814 0.02184504 -0.02243014 -0.1028867\n[6,]  0.11705215  0.190352950 -0.06634886 0.12398997  0.14420890 -0.2629912\n          [,169]      [,170]     [,171]      [,172]     [,173]      [,174]\n[1,]  0.24878888 -0.27696358  0.2903099 -0.29596996 0.63373736  0.15982853\n[2,]  0.01699296  0.09407324 -0.1380069  0.27816420 0.09517327 -0.22214094\n[3,] -0.32730318 -0.05443997 -0.1054329 -0.15412814 0.50599437 -0.45279581\n[4,]  0.06850036 -0.50974929  0.3850953 -0.20507095 0.12894216  0.07542852\n[5,]  0.41600957  0.31228558  0.1129408 -0.08172014 0.07175750 -0.11160141\n[6,] -0.30684505 -0.23846082 -0.1356184  0.26592373 0.56680885 -0.40361879\n         [,175]      [,176]     [,177]       [,178]      [,179]      [,180]\n[1,] -0.1260085  0.19619499 -0.3769492  0.019177744 -0.18330676 -0.03281073\n[2,] -0.1176825  0.22298408 -0.6465713 -0.440198891  0.19082529  0.05487320\n[3,] -0.1960603 -0.03450015  0.3236228  0.044061345  0.04735194 -0.71439416\n[4,]  0.4298621  0.39219343 -0.2252700  0.006917698 -0.32361452 -0.27175163\n[5,] -0.3381917  0.03613306  0.1163166  0.307365235 -0.79425394  0.04578629\n[6,] -0.1276330 -0.01587694 -0.1183579 -0.521322944 -0.08415145 -0.40259584\n          [,181]      [,182]      [,183]       [,184]     [,185]      [,186]\n[1,]  0.02467613  0.01896842  0.15832256 -0.002083879 -0.1255552 -0.03453561\n[2,] -0.39830620 -0.11366161 -0.07852769  0.096471867  0.1736268 -0.11371125\n[3,] -0.66881543  0.22189145  0.25675091  0.313317042  0.1999895 -0.55248507\n[4,]  0.12544733 -0.02011782 -0.60429934 -0.164379355 -0.1569230 -0.07171592\n[5,]  0.28418410 -0.06137830 -0.11486407 -0.366863234 -0.4455983  0.25806368\n[6,]  0.35166295 -0.59141815 -0.07710377  0.313189682  0.4827346 -0.20120594\n          [,187]     [,188]      [,189]      [,190]      [,191]      [,192]\n[1,]  0.07517741  0.3469990 -0.12566223 -0.33351082 -0.15575606 -0.09256326\n[2,]  0.39033262  0.1684334 -0.02614352 -0.01840284  0.20627984  0.09958466\n[3,] -0.33335870 -0.3119430 -0.61756087  0.21057666  0.21377055 -0.14221838\n[4,]  0.64974891 -0.1263220  0.20702300 -0.22269139  0.20487372  0.11903870\n[5,]  0.23283702  0.4127805  0.10167940  0.25273722  0.32619763 -0.18767807\n[6,]  0.24332780  0.7906886  0.27931176  0.30212861 -0.04488623  0.38932896\n         [,193]      [,194]      [,195]      [,196]      [,197]      [,198]\n[1,]  0.1783881 -0.20169499 -0.20341052 -0.04951387 -0.17557782 -0.06401391\n[2,] -0.3247861  0.94008667 -0.34783257  0.38449163  0.12095395 -0.36605019\n[3,]  0.4687286 -0.13782203 -0.14351267  0.43380937  0.08177479  0.12387867\n[4,] -0.3725658  0.37226182  0.09672991 -0.09813513 -0.15009420  0.07783471\n[5,] -0.3061092 -0.25444675 -0.56923510  0.08031812 -0.73584860  0.16592921\n[6,]  0.2893635  0.03746593  0.34051910 -0.15495556  0.49885823 -0.35684347\n           [,199]      [,200]     [,201]     [,202]      [,203]      [,204]\n[1,] -0.788729266 -0.08855345  0.1438645 0.59100121 -0.05418581  0.22045079\n[2,]  0.009117062  0.26185863  0.1807247 0.44086358  0.37764595 -0.82303798\n[3,]  0.111970089 -0.12249229 -0.8846151 0.15753553  0.10152958  0.27085435\n[4,]  0.127451372  0.34662749  0.2179595 0.34211866 -0.28085422  0.06319672\n[5,]  0.476691671 -0.38242966 -0.2433138 0.43690686  0.09263637 -0.41804373\n[6,] -0.387864478  0.20628265  0.4262885 0.09213592  0.22942686  0.31626202\n          [,205]      [,206]      [,207]       [,208]       [,209]       [,210]\n[1,] -0.52477055 -0.18409506 -0.17475440 -0.003923209 -0.003494141 -0.042136344\n[2,]  0.54250640  0.34108727  0.16531572  0.070021748  0.004158838  0.028432761\n[3,] -0.12774455  0.04951616  0.13618357 -0.020725620 -0.698916463  0.345942317\n[4,] -0.20257207 -0.19019998  0.11712829 -0.066569169  0.263077789 -0.005889938\n[5,] -0.44562343 -0.55635599 -0.02209073 -1.191122430 -0.390353960  0.136490846\n[6,] -0.01061633 -0.53563667 -0.25325602  0.014257734 -0.056647711  0.013302394\n          [,211]      [,212]      [,213]     [,214]      [,215]     [,216]\n[1,] -0.50654977  0.43677573 -0.56486553 0.66860664  0.29656222 -0.1616451\n[2,]  0.02762911  0.10181671 -0.17841445 0.25224507  0.47363596  0.3618334\n[3,]  0.30702243 -0.32389774 -0.18256383 0.51900953  0.09617023  0.8278041\n[4,] -0.01496451 -0.36215534 -0.06362646 0.07919467 -0.34743199  0.1750812\n[5,] -0.38442062  0.14765728 -0.21534205 0.08264555 -0.65314868  0.5361200\n[6,]  0.04650486  0.04186063  0.15101658 0.60189844 -0.11537778 -0.2086058\n          [,217]      [,218]      [,219]      [,220]      [,221]      [,222]\n[1,]  0.43306502 -0.48007059  0.58529267  0.08017197 -0.07881244 -0.10667939\n[2,]  0.42478111 -0.06980584 -0.50946261  0.28821388  0.07033099  0.15719949\n[3,] -0.67292439  0.16088978  0.25032607 -0.16624124  0.60018933  0.03154508\n[4,]  0.11089807  0.29103564 -0.30699237 -0.03949639 -0.44415852 -0.30586527\n[5,] -0.06849822 -0.44071257  0.06859542  0.29108047 -0.18406077 -0.27111870\n[6,]  0.10717618  0.20194950  0.11374507  0.16127025 -0.17276728 -0.21694855\n         [,223]     [,224]      [,225]      [,226]     [,227]      [,228]\n[1,]  0.1480555  0.7442470  0.04250587 -0.14335915 -0.3225607 -0.32813479\n[2,] -0.0737734 -0.1532441 -0.47838007 -0.06465120 -0.1235594 -0.19154545\n[3,]  0.0998858 -0.2080213  0.24449458 -0.06805462  0.3099673 -0.08829082\n[4,]  0.1362090 -0.5909163 -0.09972801 -0.76286593  0.1853374 -0.30196029\n[5,]  0.5853967 -0.1813828 -0.19080325  0.37727598 -0.1929059 -0.14751192\n[6,] -0.1430237  0.1991270  0.05366406 -0.27970012 -0.1639546  0.27810337\n          [,229]      [,230]      [,231]      [,232]     [,233]      [,234]\n[1,] -0.31909559  0.25234817 -0.50567325 -0.83877698 -0.2664388 -0.32378560\n[2,]  0.03835881  0.21092153  0.01830782  0.09323278  0.2330347 -0.43134648\n[3,] -0.36556057 -0.39485921  0.91555180 -0.13768585  0.3958869  0.02831702\n[4,] -0.23291791 -0.14384532  0.25973778 -0.02513104 -0.3374738 -0.23690773\n[5,]  0.35377505  0.01834415  0.16028120 -0.43723467 -0.1005713 -0.45049385\n[6,] -0.72299250  0.27943514  0.07465925 -0.66021464  0.0636950  0.02475576\n          [,235]     [,236]      [,237]      [,238]     [,239]      [,240]\n[1,]  0.53720734  1.0164129  0.11494715 -0.02842599  0.4121183 -0.21719367\n[2,] -0.41005229 -0.3507893 -0.02847593 -0.48529645 -0.5107249 -0.11597008\n[3,]  0.11561822 -0.3448054 -0.05020314  0.15723519  0.5776321 -0.01952338\n[4,] -0.09256436 -0.4154472 -0.19323397 -0.41749386 -0.4273707 -0.24032595\n[5,]  0.10403367  0.2579695 -0.05109292 -0.46584594 -0.1789494 -0.11248582\n[6,]  0.30986465 -0.4568700 -0.11900553 -0.02186569  0.1015657  0.14662964\n           [,241]      [,242]      [,243]      [,244]       [,245]     [,246]\n[1,]  0.096802543 -0.01517874 -0.08768147  0.36813400 -0.102300170 -0.1980573\n[2,] -0.087925214 -0.45435798  0.09945324 -0.41053707  0.284826020 -0.2616851\n[3,]  0.008930464 -0.51257499  0.15501923 -0.10643443  0.001799029  0.2500382\n[4,] -0.147431268 -0.10703347 -0.32606832 -0.11863655  0.612728606  0.6110435\n[5,]  0.260062028  0.06881588 -0.73177778  0.05258622  0.558541880  0.1125311\n[6,] -0.006282530  0.36683784  0.16714235  0.24181833  0.705031005  0.3473981\n           [,247]      [,248]      [,249]      [,250]      [,251]       [,252]\n[1,] -0.101576991 -0.27327332  0.48550970  0.04337648  0.14244315 -0.115704610\n[2,]  0.002000728 -0.30662999 -0.38556461  0.07452792  0.06838067 -0.009807564\n[3,]  0.640674339 -0.04358837 -0.06201677 -0.06856601 -0.13130266 -0.222874838\n[4,]  0.170797616  0.03117837 -0.19509786  0.60282863  0.10569154  0.202516788\n[5,]  0.148271495 -0.02210876  0.55869080  0.24841431  0.32067772  0.163903907\n[6,]  0.454676653 -0.06535293 -0.22599115  0.29862469 -0.09727494 -0.253572602\n           [,253]      [,254]      [,255]     [,256]      [,257]      [,258]\n[1,]  0.296745254 -0.05764645 -0.12755720  0.2892895  0.13532583 -0.37122365\n[2,]  0.004255602 -0.52789549  0.70635235 -0.3328534 -0.10095393 -0.16974928\n[3,] -0.061603968  0.23095625 -0.01337549 -0.1072212 -0.29647178 -0.08246317\n[4,]  0.015764726  0.24903803 -0.54986382 -0.3337167  0.26756945  0.50182603\n[5,] -0.495102591  0.33838826 -0.31728045  0.1304718 -0.01914749 -0.02547675\n[6,]  0.147744827  0.16816486 -0.06772342 -0.2276464 -0.50171833  0.26585637\n         [,259]      [,260]      [,261]      [,262]      [,263]     [,264]\n[1,] -0.4862092 -0.17816313 -0.08784331  0.26743699 -0.25145854  0.4554261\n[2,] -0.4680933 -0.26205184 -0.17499649  0.19104421 -0.07681937  0.2414988\n[3,]  0.4524011 -0.10251490  0.20296942  0.25040238  0.28227142 -0.6537011\n[4,] -0.6006814 -0.29246266 -0.10095709 -0.05590851  0.24944488 -0.8766273\n[5,]  0.1074564 -0.11249310  0.25518083 -0.27502954  0.18098598  0.2369385\n[6,] -0.3891637 -0.09607579 -0.30076274 -0.69757666  0.20196185  0.1554259\n          [,265]     [,266]       [,267]       [,268]     [,269]       [,270]\n[1,] -0.06482482  0.8648402 -0.231523329 -0.006787629  0.2498502  0.887349861\n[2,] -0.15076787 -0.2638881 -0.497163370  0.231141034  0.3523787 -0.007648399\n[3,]  0.31832128  0.1534566 -0.402644366  0.146918173 -0.1277053 -0.068329551\n[4,]  0.22239491 -0.2976861 -0.268370892 -0.052804065  0.2594258 -0.115829655\n[5,] -0.08796049  0.1203056 -0.009108267  0.793205390  0.3175205  0.133050302\n[6,]  0.27328647  0.0546354 -0.374083184  0.076217424 -0.1607805  0.389079846\n         [,271]     [,272]      [,273]     [,274]      [,275]     [,276]\n[1,] -0.2224045 -0.3707098  0.42585336 0.06879911 -0.04447817 -0.1379224\n[2,]  0.1754499 -0.3209892 -0.10341428 0.54741973 -0.14219526 -0.1838556\n[3,] -0.0910849  0.5044084  0.32567749 0.11366407  0.22157172 -0.4242306\n[4,]  0.2287471  0.4289593  0.18021546 0.43878690  0.05385335 -0.2099052\n[5,] -0.1762037 -0.3940521 -0.01545397 0.10707747 -0.14016768  0.1791234\n[6,] -0.2931440 -0.1185173 -0.08250692 0.23473626 -0.09298443  0.2439402\n          [,277]      [,278]      [,279]     [,280]      [,281]       [,282]\n[1,] -0.08950364  0.35485360  0.01939733  0.2707463  0.37116597  0.345225020\n[2,]  0.05580144 -0.07398764  0.20518205 -0.3358479  0.01971120  0.537770173\n[3,]  0.11884004  0.22986474  0.15397488 -0.1630819 -0.05337157  0.081011309\n[4,]  0.59468749  0.16806904 -0.21909879  0.5496074  0.17519282  0.250022039\n[5,]  0.16261498  0.20956751  0.23146070  0.5726557  0.31365664  0.009216743\n[6,]  0.31709483  0.11133015 -0.50855546 -0.2508987 -0.28601405 -0.210681054\n          [,283]       [,284]      [,285]      [,286]      [,287]      [,288]\n[1,] -0.12083573 -0.204012205  0.36471742  0.20553508  0.26148878  0.18958020\n[2,] -0.31520676  0.004205493  0.26796820 -0.09741049  0.10053094 -0.02533303\n[3,] -0.01035097 -0.136852580 -0.20216689  0.15187457  0.15065208 -0.02525320\n[4,]  0.07742170  0.091655275 -0.20564674 -0.13001702  0.03298439  0.31328788\n[5,]  0.30236875  0.263870141 -0.58634872 -0.38555493 -0.14561591 -0.81380613\n[6,]  0.20543964  0.045681154 -0.04635294  0.02202945 -0.29883231 -0.32934066\n         [,289]     [,290]      [,291]     [,292]      [,293]      [,294]\n[1,]  0.3557190 -0.4973362 -0.02782911 -0.3163782 -0.14412749  0.05264305\n[2,] -0.3015703 -0.3795308 -0.27388574  0.1364845 -0.20813735 -0.10176857\n[3,]  0.2435900  0.4643752 -0.05324333 -0.1923259  0.08179124  0.12217650\n[4,] -0.2318989  0.9641496  0.32204030 -0.1023540 -0.42641458 -0.37453108\n[5,] -0.1655141  0.1191137 -0.01212967  0.2104382  0.37227830  0.39520394\n[6,]  0.3766527  0.4919740 -0.30204668 -0.1047697 -0.03484757 -0.17295135\n         [,295]      [,296]      [,297]      [,298]     [,299]     [,300]\n[1,]  0.1984170  0.10122172  0.89610036 -0.20254820  0.2575176 -0.0588413\n[2,] -0.3595251  0.11753553  0.26273822 -0.38106489  0.5315644 -0.1106813\n[3,]  0.2778470 -0.19361706  0.49724560 -0.21018304 -0.1485324  0.4973120\n[4,] -0.3092686 -0.03430054  0.23152611 -0.38514177 -0.0768688 -0.2665689\n[5,] -0.5658736 -0.07776771 -0.17862769  0.19436120 -0.4468992  0.1959817\n[6,]  0.1457221 -0.26260583  0.01468597  0.04137145 -0.1435991  0.2589896\n          [,301]      [,302]      [,303]      [,304]      [,305]     [,306]\n[1,] -0.55908910  0.38353793  0.03616726  0.46559917 -0.54502058 -0.1630005\n[2,]  0.06324324  0.34586708 -0.02805880  0.19462603  0.24009453 -0.1408090\n[3,]  0.49295238  0.47656826  0.03940042  0.29121593 -0.07218776 -0.0219068\n[4,]  0.01868009 -0.11345823 -0.56796023 -0.22586443  0.14986802  0.1249621\n[5,]  0.50312525  0.27176726 -0.19563325 -0.01422309 -0.27630567  0.0452833\n[6,] -0.02292727  0.01891159  0.38782538  0.02170871  0.62215445  0.1532040\n          [,307]      [,308]      [,309]      [,310]      [,311]      [,312]\n[1,]  0.08654481 -0.02544354  0.67969985  0.94193096  0.29706118 -0.50973969\n[2,]  0.06209786  0.39627236 -0.38596202  0.31870261  0.11732956  0.45107174\n[3,]  0.45325711  0.08804495  0.20267058 -0.30675999 -0.90872281  0.40096634\n[4,]  0.24543343  0.22000812 -0.04444801  0.17605495  0.12047834 -0.08452725\n[5,] -0.21727248  0.58058536 -0.31591223  0.28942669 -0.02735415  0.23830976\n[6,] -0.11460015 -0.14605746 -0.01349595 -0.02161532  0.24960834  0.21105470\n          [,313]      [,314]      [,315]      [,316]      [,317]      [,318]\n[1,]  0.46528064  0.11932983 -0.49503184 -0.48326428 -0.37453057  0.01353718\n[2,] -0.51892300  0.50548720  0.05242995  0.05850332  0.06479772 -0.02294212\n[3,]  0.09843793  0.27619840 -0.93020787  0.25104936  0.06221467  0.04340551\n[4,] -0.30434690 -0.20171049 -0.02014022  0.07176219 -0.44537771 -0.01808776\n[5,]  0.55783411 -0.15171906  0.09424310 -0.02987368  0.07241716  0.05213072\n[6,]  0.09262141  0.01426311  0.05621738 -0.15900742  0.38836762  0.27793910\n          [,319]      [,320]      [,321]      [,322]      [,323]      [,324]\n[1,] -0.07810620 -0.52102751 -0.39635212  0.35827401  0.02202253  0.02751020\n[2,]  0.10276310  0.43520983  0.31442942  0.19060242  0.22155723 -0.03199369\n[3,]  0.17479046  0.03796178  0.38623569  0.36741943 -0.34081913  0.14195847\n[4,] -0.02504708 -0.02485715  0.34147365  0.59382765  0.19959967  0.04792705\n[5,] -0.09001182 -0.27746523  0.12500303  0.09038307  0.46030088  0.08841197\n[6,]  0.09696579 -0.14191013 -0.08810397 -0.42007458 -0.20119172 -0.06438059\n          [,325]      [,326]      [,327]      [,328]     [,329]      [,330]\n[1,] -0.28672177  0.05823396  0.47561601 -0.00622391  0.2153794  0.02402516\n[2,] -0.17606457 -0.20218484 -0.09357823  0.01755688  0.3639336  0.34404676\n[3,]  0.07533245 -0.14514050  0.04950537  0.53957515 -0.8404329  0.59828524\n[4,] -0.24550347  0.14085126 -0.34110455 -0.14156136 -0.3368064 -0.16316290\n[5,] -0.30642832  0.20744839 -0.47659876 -0.07600850 -0.1578640 -0.59677863\n[6,]  0.01903903 -0.02702308  0.52137471 -0.27548428 -0.4562401 -0.24519184\n           [,331]      [,332]      [,333]      [,334]      [,335]      [,336]\n[1,] -0.180766294 -0.17216744  0.39625362  0.04958605  0.09143289 -0.17043515\n[2,] -0.120469687 -0.56395622 -0.06893176 -0.56554480 -0.41078585  0.18949726\n[3,] -0.004030575 -0.06163562  0.22114167 -0.55379810  0.50581656  0.30321380\n[4,]  0.318327251  0.22886650 -0.47114589  0.33017629  0.73267521 -0.03742665\n[5,]  0.236898784 -0.05592420 -0.52241300  0.28536531  0.71543351 -0.14814862\n[6,] -0.293055903  0.06246513  0.37636670  0.36180584 -0.03075846 -0.41773075\n          [,337]      [,338]      [,339]     [,340]      [,341]      [,342]\n[1,]  0.15262773  0.08410244  0.16828832  0.0558011 -0.09071545 -0.09872352\n[2,]  0.01994438  0.12691739 -0.40197885 -0.2954351 -0.22941833  0.15984408\n[3,] -0.13985380 -0.03305568 -0.40406006  0.6510945 -0.08521939 -0.33417435\n[4,]  0.34862557  0.29544290 -0.08888572  0.3998920  0.03764052  0.28230340\n[5,]  0.08059040  0.16988339  0.10353193  0.2420476  0.39469627  0.20986916\n[6,]  0.80546360  0.42187469 -0.63189770 -0.2960664  0.09043648  0.08392291\n          [,343]      [,344]      [,345]      [,346]      [,347]      [,348]\n[1,] -0.23893318 -0.08569299 -0.41947525  0.36415873 -0.12117052  0.02099978\n[2,] -0.02590983  0.37294175 -0.21116130 -0.14579653  0.02273199  0.03687371\n[3,] -0.11343233  0.35063586 -0.80193714  0.34946386 -0.44346793 -0.33873844\n[4,] -0.07812354 -0.04556296 -0.27946410 -0.09996636 -0.13528909 -0.40310954\n[5,]  0.25178948 -0.39738555 -0.06756623  0.19163460  0.40976361 -0.07719342\n[6,] -0.34963988  0.07004076  0.17343345  0.09818249 -0.09038020  0.50696124\n          [,349]      [,350]       [,351]      [,352]       [,353]       [,354]\n[1,] -0.11904524  0.34478287 -0.135709105  0.20719312 -0.235454287 -0.001943308\n[2,]  0.15785918  0.11874015 -0.023313740  0.16260865 -0.166231654 -0.216865390\n[3,] -0.43718339 -0.67930885  0.009786124  0.06108403 -0.336526688  0.067212048\n[4,] -0.09614078 -0.28010095  0.257108605 -0.23521217 -0.006609384 -0.331351012\n[5,]  0.28869049 -0.07833284  0.078827060 -0.45203397 -0.242884680 -0.228645978\n[6,]  0.36162330  0.42957125  0.287994330  0.24488015 -0.262578825  0.189537105\n          [,355]      [,356]     [,357]      [,358]     [,359]       [,360]\n[1,] -0.12108308  0.07270538 -0.1991119  0.22016338  0.1934036 -0.386848621\n[2,] -0.50759838 -0.08563225 -0.1423216  0.39421037  0.0385825 -0.007588379\n[3,] -0.13979912  0.22727341 -0.1436249  0.07718922 -0.3815053 -0.320164043\n[4,] -0.32978412  0.22618292 -0.5121838  0.26900951 -0.2850657 -0.766096135\n[5,]  0.07858572 -0.39141130  0.3431703 -0.15828028  0.3309060  0.335467051\n[6,] -0.30528563  0.03654795  0.1284586  0.02262186  0.0965491  0.893029789\n         [,361]     [,362]      [,363]      [,364]     [,365]     [,366]\n[1,]  0.1270666  0.2874422  0.20228678  0.35416008  0.3343923 -0.4172170\n[2,] -0.1105976 -0.1042193 -0.12930898  0.14080639 -0.3192441 -0.2688258\n[3,]  0.1512736  0.6668281 -0.13728884 -0.71675613  0.1935546  0.7205244\n[4,] -0.2778838  0.1106169  0.09932407  0.32651308  0.4941151  0.3698245\n[5,] -0.0953357  0.1718259  0.20884105 -0.09524714  0.1996434 -0.4427955\n[6,]  0.4486085  0.6150578 -0.74089569  0.05003565  0.1870943 -0.3900015\n          [,367]      [,368]      [,369]     [,370]     [,371]      [,372]\n[1,]  0.17136394  0.01486145 -0.16404042 -0.3702804  0.1525510 -0.27203927\n[2,]  0.21782391  0.19637431 -0.09873834  0.3694562 -0.2832218 -0.02005864\n[3,]  0.34921534  0.45141083 -0.08544331 -0.2123703  0.2202819  0.48460927\n[4,] -0.03460419 -0.23792104 -0.46585689  0.3520054  0.1074481 -0.06017427\n[5,]  0.52038496 -0.14042838  0.54634764 -0.4868619  0.3982630  0.37231688\n[6,]  0.06209068  0.02968562  0.18082903  0.3565038 -0.2514634 -0.59118982\n          [,373]      [,374]      [,375]      [,376]      [,377]      [,378]\n[1,]  0.08590915 -0.59436916 -0.12503741 -0.18251974  0.01229705 -0.09803513\n[2,] -0.39981204 -0.35455538  0.56532348 -0.11884537  0.02217829  0.46848786\n[3,]  0.14228042 -0.23389701  0.14262093  0.04255654 -0.49861073  0.08225080\n[4,] -0.01861648  0.16671401  0.32030134 -0.16941212 -0.66201831 -0.15706514\n[5,] -0.31618082  0.07393994  0.04944227  0.52310454  0.11344578 -0.32748028\n[6,]  0.14541019  0.58676608 -0.15723526 -0.04527442 -0.35423205 -0.07563252\n          [,379]      [,380]      [,381]      [,382]      [,383]     [,384]\n[1,]  0.18997873 -0.04039059 -0.03409434 -0.22532376 -0.34893533  0.5310446\n[2,]  0.06419988  0.31178024  0.13337016  0.05228216 -0.22371738 -0.6648214\n[3,] -0.20643924 -0.03944470 -0.67993453 -0.24538687 -0.41492105 -0.1172485\n[4,] -0.49523365 -0.14420102 -0.12014321 -0.69603956  0.45950234 -0.4373850\n[5,] -0.08622509 -0.42939292  0.36332751 -0.05443710  0.01513745 -0.1140039\n[6,] -0.20592945  0.30260273  0.35532961  0.05496190 -0.38592658 -0.8611695\n          [,385]      [,386]     [,387]      [,388]       [,389]     [,390]\n[1,] -0.12678240 -0.20469315  0.2246877 -0.44382298 -0.868173861  0.2489340\n[2,] -0.38962653  0.20344485 -0.1560382  0.04877028 -0.079558211  0.1334184\n[3,]  0.19292564  0.09758139 -0.1900989  0.40426119 -0.033110221 -0.7605776\n[4,]  0.15841388  0.29795428  0.5523953  0.61132284 -0.003995128 -0.3550463\n[5,] -0.06353585 -0.06801936  0.1930796  0.12641002  0.575790500 -0.5474381\n[6,]  0.25115215  0.32002158  0.1049670 -0.31636788 -0.414181770 -0.3773210\n          [,391]      [,392]      [,393]      [,394]      [,395]      [,396]\n[1,]  0.06520607 -0.57908735 -0.01048255 -0.70907593  0.07002794 -0.16897561\n[2,] -0.31527870  0.19354908 -0.10949287 -0.56544104  0.03334153 -0.41923420\n[3,]  0.03933011  0.56327992 -0.18766015  0.15374179  0.07041464  0.23807775\n[4,] -0.29421131 -0.16047062 -0.05672059 -0.05994981 -0.55931372 -0.20038356\n[5,] -0.44445554  0.06065739  0.14360665  0.44178605  0.07930177  0.03008896\n[6,] -0.25637259 -0.28363035  0.07907430  0.08832997 -0.12201386  0.58020588\n           [,397]     [,398]      [,399]      [,400]     [,401]      [,402]\n[1,] -0.460031855 -0.1717405 -0.26850430 -0.10576106  0.5927612 -0.01652435\n[2,]  0.003927032  0.6355305 -0.18017066 -0.18948300 -0.4128911 -0.46684501\n[3,]  0.173619457  0.3306740  0.10426913  0.14669490 -0.2320758 -0.02272399\n[4,] -0.012309008 -0.2711482  0.02698542  0.11129326  0.3067006 -0.21657365\n[5,] -0.013584783 -0.2678473 -0.09980918 -0.03784434 -0.2166127  0.11792444\n[6,]  0.460465265  0.3643314 -0.08138057  0.01082324  0.1768173  0.42770871\n          [,403]      [,404]      [,405]      [,406]      [,407]       [,408]\n[1,] -0.15202678 -0.06445769  0.01785783 -0.73171015 -0.37037464 -0.431306469\n[2,] -0.40199011  0.31527744  0.59591829 -0.02243327 -0.12541671  0.005019165\n[3,] -0.27909226  0.42109755  0.42215281 -0.05601329 -0.52253760  0.140401308\n[4,] -0.01607514  0.29062208 -0.04445835 -0.68914025  0.19473260 -0.488789349\n[5,]  0.32201745 -0.38306041 -0.06337666  0.05544417  0.05060087 -0.491755898\n[6,] -0.09297370  0.53997475  0.39453904 -0.05034610  0.02727751  0.549616665\n          [,409]     [,410]        [,411]      [,412]      [,413]     [,414]\n[1,]  0.13562343 -0.3425252  0.1000060990 -0.16778120  0.11179961  0.6763484\n[2,]  0.02125144  0.0548219  0.1584947792  0.51091983  0.14467276  0.2952366\n[3,]  0.00628632  0.1868796  0.0218901263  0.26723598 -0.46286019  0.2116933\n[4,] -0.11940137  0.5506835 -0.4705516067 -0.04561539  0.41471266  0.4096488\n[5,]  0.03111906 -0.1058748 -0.0006392585  0.17152797 -0.32090512  0.1864479\n[6,] -0.07831728  0.5763687  0.5145981410  0.16606109  0.06779242 -0.3842250\n          [,415]      [,416]     [,417]      [,418]       [,419]      [,420]\n[1,] -0.47612356  0.26810017 -0.4112034  0.16621748 -0.005705564 -0.08396981\n[2,]  0.29489943  0.33640943 -0.2064435 -0.13832968  0.165421524 -0.10123117\n[3,]  0.09760409  0.37490723  0.1515735 -0.56682398  0.385204600 -0.13409005\n[4,] -0.04278414  0.66854802  0.2814347 -0.06841825  0.045452689 -0.26768325\n[5,] -0.21027636 -0.06621377 -0.3023150 -0.20403085 -0.255871847  0.12318588\n[6,]  0.57256914  0.29920874  0.5953263  0.03191436 -0.398792453  0.31799706\n          [,421]       [,422]      [,423]      [,424]     [,425]      [,426]\n[1,]  0.20653109  0.102170923  0.08990579 -0.09428611  0.1866321  0.18056980\n[2,] -0.02765698  0.009483447 -0.16598444  0.09767317 -0.1577062  0.07919953\n[3,] -0.28879557  0.052107032 -0.32024551  0.11989732 -0.4372349 -0.33354404\n[4,]  0.46758045  0.249840551  0.04979111 -0.33117372 -0.3750579 -0.36771812\n[5,] -0.25311282 -0.184745460  0.07094934  0.26892854 -0.1205040 -0.40938436\n[6,]  0.27251690  0.029617579  0.05810013  0.10431322  0.4664503  0.02997118\n          [,427]      [,428]      [,429]        [,430]      [,431]      [,432]\n[1,] -0.38019126 -0.29979987 -0.02231279 -0.1008024974 -0.45742276 -0.17159994\n[2,] -0.10388188  0.19636013  0.27296389 -0.1587751421  0.07551861  0.05184164\n[3,] -0.03602556 -0.49882869  0.51802429  0.1119884690  0.08350058 -0.24123079\n[4,] -0.10440830 -0.04187737  0.15891297  0.0005480273  0.12301323 -0.38748505\n[5,] -0.09219326  0.28795616 -0.34785084  0.0920628715  0.06761922  0.26946926\n[6,]  0.14724129  0.01087140  0.15011991  0.4090068670  0.13348763  0.54364396\n          [,433]     [,434]     [,435]     [,436]      [,437]     [,438]\n[1,]  0.51430757  0.7294772 -0.1146830  0.1946885 -0.37293206  0.1497019\n[2,] -0.63637976  0.3117007  0.2738385  0.3047910  0.32126121  0.4567863\n[3,]  0.53926596  0.2335182 -0.3456248 -0.4456803  0.15909499 -0.1388235\n[4,]  0.35006751  0.3317292 -0.2432458 -0.4270104  0.10985361  0.2898999\n[5,] -0.36877289 -0.1909717  0.4210998 -0.3648321  0.05626772  0.1384923\n[6,] -0.09777117  0.2623737 -0.4766396  0.3654136 -0.02194745  0.1245863\n          [,439]      [,440]      [,441]      [,442]        [,443]      [,444]\n[1,]  0.59701019 -0.17842664  0.06484315 -0.01326565 -0.2979023682 -0.38481366\n[2,] -0.39808368 -0.01274426 -0.35868046  0.51323686 -0.0002652848 -0.10866064\n[3,]  0.07813605 -0.17658030 -0.08108867 -0.70192780  0.0645926571  0.47443567\n[4,]  0.31377142 -0.14056714  0.27587613 -0.19319000  0.3389203689  0.23180745\n[5,] -0.03278973 -0.23960506 -0.24101893 -0.22444448  0.0679675372  0.07285968\n[6,] -0.22227486 -0.43246161  0.21247840 -0.43147721 -0.3420082838  0.63018713\n           [,445]      [,446]      [,447]     [,448]     [,449]      [,450]\n[1,] -0.557542056  0.08756943  0.22588721  0.2108959  0.2421134 -0.03148753\n[2,] -0.357867732 -0.52786951 -0.02718941  0.2726673  0.3501583  1.32382859\n[3,]  0.140451916  0.44636618 -0.48044567  0.7852886 -0.4911932  0.14173195\n[4,]  0.063286884  0.69923223  0.21055753 -0.2725821  0.1410523 -0.34681076\n[5,] -0.177758015 -0.14283337 -0.16984468  0.2124864 -0.4101778  0.25180836\n[6,]  0.002008818  0.07800827  0.06700246  0.3607260 -0.3462320 -0.10576105\n            [,451]      [,452]     [,453]      [,454]      [,455]      [,456]\n[1,] -0.3537788927  0.22184777  0.4631605  0.07997679 -0.21020152 -0.23676385\n[2,]  0.4808586532  0.09739731  0.3110433  0.52170039 -0.34550994 -0.48350826\n[3,]  0.0002807364 -0.20615301  0.3046474 -0.41014812  0.06412067 -0.04363582\n[4,]  0.7264445577 -0.40268196 -0.1608286 -0.18897485 -0.37953971  0.75110819\n[5,] -0.4380663843  0.39903050 -0.1093095 -0.12318177  0.02799362  0.38221238\n[6,]  0.0078768142  0.25361071  0.2992730  0.15581731 -0.19524204 -0.17168404\n          [,457]      [,458]     [,459]      [,460]      [,461]      [,462]\n[1,]  0.73753850 -0.20911765 -0.2329159 -0.22529337 -0.14947090 -0.57075789\n[2,]  0.03429263 -0.73677472 -0.0351492  0.38239051 -0.13314020  0.64377156\n[3,] -0.55587619  0.29147157 -0.1190712 -0.14923896 -0.49831720 -0.02703229\n[4,] -0.05645878  0.37318299  0.0659379 -0.11252775  0.07813355  0.38967150\n[5,]  0.19338427  0.17817558 -0.8158899  0.06034941  0.15072492 -0.06185814\n[6,]  0.51927385  0.06692231  0.7195762  0.60626365  0.50904233  0.26292618\n          [,463]       [,464]     [,465]      [,466]     [,467]      [,468]\n[1,]  0.38686726  0.427314020 -0.2526092 -0.21025057  0.1323393 -0.30589672\n[2,]  0.67507639 -0.310121901 -0.3714107  0.24311122 -0.1749678 -0.15236195\n[3,] -0.29472324  0.001760877  0.3738489  0.03518998 -0.6331248 -0.08833285\n[4,] -0.09423193 -0.179336965  0.4466165 -0.45396227 -0.2222434 -0.47933152\n[5,]  0.01708414 -0.752952234 -0.4152743 -0.47710130 -0.7114625  0.37496298\n[6,] -0.18566731 -0.325402059 -0.4993718  0.17311787 -0.3273760  0.29423611\n          [,469]      [,470]     [,471]      [,472]     [,473]      [,474]\n[1,]  0.11254132  0.15406935  0.4814986  0.39249177  0.2984528  0.05253844\n[2,] -0.09938599  0.63858548  0.1881910  0.30219395 -0.3694761  0.34854410\n[3,] -0.26425984 -0.17896219 -0.5077206  0.59164767  0.6989132  0.18431193\n[4,]  0.19654948  0.59306018 -0.3451847  0.18212271  0.3304450 -0.28759449\n[5,]  0.45785155 -0.01524817 -0.1367250  0.34138409  0.1904130 -0.88713673\n[6,]  0.04924947 -0.33825871  0.2109675 -0.02335246  0.2862773 -0.35808640\n          [,475]       [,476]      [,477]      [,478]     [,479]        [,480]\n[1,] -0.05911753  0.540896963  0.37820152  0.37977810 0.36055419  0.1856465769\n[2,]  0.10843808 -0.209325141 -0.71515564 -0.03464941 0.57356947 -0.0121416848\n[3,] -0.31176849 -0.159264411 -0.18586071  0.30317695 0.07115385 -0.2055430862\n[4,]  0.21819653 -0.291824004 -0.48325755  0.09760624 0.43323554 -0.0003150309\n[5,]  0.03733031 -0.097270821 -0.71845246  0.22549691 0.29144781  0.2580765160\n[6,] -0.69298571  0.001296756 -0.04770297  0.18938816 0.68169758 -0.1339076052\n          [,481]     [,482]       [,483]      [,484]       [,485]       [,486]\n[1,] -0.18431341 -0.4944663 -0.455584517  0.45166635  0.354865498  0.297160286\n[2,] -0.01486940 -0.1026563  0.278326949 -0.12253940  0.280185026  0.103780956\n[3,] -0.06340334 -0.8459582 -0.351974433  0.17950665  0.612131355  0.693636335\n[4,] -0.17102138  0.2174059 -0.096814046 -0.31620209  0.055413091 -0.009697685\n[5,]  0.59815449 -0.2406182  0.272553718 -0.04648781  0.253672857  0.327161325\n[6,] -0.05426193  0.1399019 -0.009987263  0.35643189 -0.008211332 -0.046248716\n         [,487]     [,488]     [,489]     [,490]      [,491]      [,492]\n[1,]  0.1110773  0.0341099 -0.1883385  0.1919568 -0.06823721  0.16587837\n[2,] -0.5202498 -0.2158285  0.3628673  0.3908094 -0.65874178  0.19510062\n[3,] -0.3473153  0.0517154  0.1335384  0.1358368 -0.17825757  0.28637784\n[4,] -0.2924125  0.0748904  0.3619884 -0.1391993  0.09192500 -0.41093913\n[5,]  0.5322261  0.7969036 -0.5268194  0.1503623 -0.16019413  0.15673991\n[6,] -0.4184006 -0.1956835  0.2110287 -0.3635931 -0.21212146 -0.02613751\n          [,493]      [,494]      [,495]      [,496]      [,497]     [,498]\n[1,] -0.60681797 -0.09692481  0.07077402 -0.01742983 -0.06347092 -0.1159154\n[2,]  0.45373617 -0.51318126  0.57811588  0.31646569 -0.22195256 -0.1902982\n[3,] -0.09478260  0.08840698  0.45856872 -0.15747204 -0.27788247  0.2920483\n[4,]  0.01214098  0.27744895 -0.61213007  0.22549327 -0.39561827 -0.3976728\n[5,]  0.34984502  0.12694317  0.86820682 -0.43792118 -0.18848771 -0.5484061\n[6,] -0.01816589  0.15336864 -0.30984549  0.03702601  0.11204292 -0.1918288\n          [,499]      [,500]     [,501]      [,502]       [,503]      [,504]\n[1,]  0.06786624  0.43686410  0.2343687  0.22201987 -0.214681415 -0.14572353\n[2,] -0.21447311 -0.01521177 -0.3052207  0.05345088  0.169921221 -0.19390352\n[3,] -0.10879173 -0.66522135 -0.3364155 -0.45903349  0.335881614  0.36813653\n[4,]  0.34683631 -0.60803038  0.3815464 -0.05022207 -0.007747593 -0.06414013\n[5,] -0.24109123 -0.48160675 -0.2332325 -0.46800934 -0.288448961  0.09319399\n[6,]  0.23421668 -0.04368893  0.2353618  0.08222640 -0.327244550  0.21546210\n          [,505]      [,506]      [,507]      [,508]      [,509]      [,510]\n[1,] -0.30702955 -0.11515080  0.19541058  0.41910595 -0.46705011  0.41063678\n[2,] -0.45701637  0.22857954 -0.32028325 -0.23388360  0.31298334 -0.47979347\n[3,] -0.28461618 -0.06061915 -0.24011757 -0.06977114 -0.42583606  0.04524885\n[4,] -0.18980978 -0.15551719  0.08454181  0.18971790  0.12295753 -0.58451795\n[5,] -0.31668107 -0.20385634  0.58059533  0.23084653 -0.01182655 -0.06737222\n[6,] -0.09248798  0.49487762 -0.41822225 -0.73242205  0.03553146 -0.80273414\n          [,511]       [,512]      [,513]      [,514]      [,515]     [,516]\n[1,] -0.32217497 -0.796860124 -0.05673925  0.28387258  0.38036880  0.0971856\n[2,]  0.45778618  0.041212004 -0.11469479  0.26847140  0.59432445 -0.2077396\n[3,] -0.01038586  0.084134148  0.32574282 -0.05443216  0.19045143  0.4147241\n[4,]  0.01855526  0.006592487  0.23622455 -0.08224195  0.04456854 -0.3226824\n[5,] -0.10641498 -0.349511938 -0.10104148 -0.38094080 -0.14404081 -0.3010055\n[6,]  0.26732982  0.234095016  0.12109701  0.15946951 -0.54143808 -0.1950341\n          [,517]      [,518]     [,519]     [,520]     [,521]      [,522]\n[1,]  0.04422212 -0.42182186  0.2214855 -0.3074026  0.4326662 -0.21947122\n[2,] -0.19098043  0.05179651 -0.4318614  0.3779699 -0.1975806 -0.14708845\n[3,]  0.10832195  0.52240700  0.3992250 -0.2336062 -0.2792358 -0.23268314\n[4,]  0.35292013 -0.16997020 -0.2261346  0.3409197 -0.3070115 -0.18359299\n[5,]  0.30163052 -0.29016221 -0.3124632  0.1470260  0.4690835 -0.36428342\n[6,]  0.40176518 -0.02029650 -0.2909309 -0.3093442  0.3367011 -0.04682464\n          [,523]      [,524]       [,525]       [,526]      [,527]      [,528]\n[1,]  0.21478937  0.17458810 -0.255558884 -0.008320695  0.13804503 -0.04476702\n[2,] -0.21582779 -0.06451469  0.130805594  0.311496469  0.30335185 -0.22872852\n[3,]  0.09578445 -0.05528670 -0.493686438  0.239102330 -0.26659132  0.41948634\n[4,] -0.28586457 -0.03963148  0.199248046  0.157874039 -0.10281439 -0.14044805\n[5,] -0.23834680  0.04698742  0.003530091 -0.430594136  0.40037344 -0.10085379\n[6,]  0.47203917  0.10046919  0.226232473  0.216887428 -0.06812282 -0.24816291\n           [,529]     [,530]      [,531]      [,532]      [,533]       [,534]\n[1,]  0.657473898  0.3380609 -0.25138702  0.11261030 -0.17972819 -0.510420283\n[2,]  0.110089220  0.2224392 -0.20852746 -0.31387934 -0.55105697  0.389178885\n[3,] -0.112291339 -0.2424182 -0.06485872 -0.34090837  0.42141277 -0.177036781\n[4,]  0.001902467  0.2211415  0.08568682 -0.49748890  0.07918719 -0.063593468\n[5,]  0.046414622  0.1188610 -0.24391205  0.38740381 -0.07306558  0.074776124\n[6,] -0.047551890 -0.1684219  0.20341299 -0.03759684  0.32424477  0.001326059\n          [,535]      [,536]      [,537]     [,538]       [,539]      [,540]\n[1,]  0.10006341 -0.13003064 -0.05122102  0.3118528  0.531047647 -0.07704179\n[2,]  0.01868674  0.22947355 -0.61162076 -0.0479353 -0.374790799  0.38133902\n[3,] -0.02515101 -0.07252174 -0.08771391 -0.6742679  0.032642224 -0.55230224\n[4,] -0.25165518 -0.08252036 -0.60138251  0.2541104  0.371989450 -0.50863237\n[5,] -0.21864377  0.20951483 -0.12625840 -0.4102460  0.112612997 -0.22539034\n[6,]  0.28711306  0.28224369  0.97132663  0.4109884 -0.008497267 -0.11550076\n          [,541]     [,542]      [,543]     [,544]      [,545]      [,546]\n[1,]  0.35547005  0.5239986  0.16016781  0.1804126  0.06895628 -0.08900948\n[2,] -0.15788106 -0.2660451  0.44363223  0.2848005  0.13789795  0.55341309\n[3,] -0.07838234  0.3475581  0.07418316  0.4171709 -0.05238170  0.49178661\n[4,] -0.03423310  0.1966533  0.09725735 -0.3916995 -0.35004324 -0.44229616\n[5,] -0.05558831  0.1019728 -0.19631091  0.2695402  0.14893391 -0.16783966\n[6,]  0.09503509 -0.3050194 -0.01201814  0.9737991  0.03467088 -0.50762079\n          [,547]     [,548]     [,549]      [,550]      [,551]      [,552]\n[1,] -0.04931468 -0.2561999 0.01880408 -0.43903894  0.21547146 -0.28659071\n[2,] -0.54244077  0.2593199 0.40982968  0.31273857 -0.14493967 -0.10145343\n[3,]  0.04583279 -0.4655111 0.39503831 -0.20221173 -0.28676178  0.21679388\n[4,]  0.20963778 -0.7617875 0.60257388  0.04115639 -0.42570695 -0.09498657\n[5,] -0.15338307 -0.9613529 0.06324548 -0.13114167  0.03417026  0.59229173\n[6,] -0.22850786 -0.5571972 0.01739018  0.54648269 -0.40455731  0.17459616\n           [,553]       [,554]      [,555]      [,556]      [,557]     [,558]\n[1,] -0.423147848  0.361626477 -0.13995681  0.02727235  0.21102103  0.1500395\n[2,]  0.078678329  0.050995189 -0.02328470 -0.06689428 -0.36720993 -0.2509729\n[3,]  0.687272975 -0.446622584  0.84808105  0.05206990 -0.04182861 -0.0455005\n[4,]  0.002002581 -0.007450377  0.27588210 -0.39563736  0.03014985  0.3256925\n[5,] -0.156890994  0.532372306 -0.63779451 -0.05648462  0.24988536  0.0119157\n[6,] -0.257789735  0.297900773  0.08637743  0.29182474  0.01376031  0.1360523\n         [,559]      [,560]       [,561]     [,562]     [,563]      [,564]\n[1,]  0.1069510 -0.57457931 -0.251824998 -0.1120578 -0.3473721 -0.05655036\n[2,] -0.2002890 -0.31133015 -0.003100951 -0.6307264 -0.5501258  0.07931756\n[3,]  0.4690047 -0.09208055  0.254907601  0.5158715 -0.6570666  0.20365478\n[4,]  0.1628667 -0.20622817 -0.002456666  0.1309886 -0.1991904 -0.30323210\n[5,]  0.2486152 -0.09560924 -0.408741046 -0.0517305  0.3090741  0.11357015\n[6,] -0.1373482  0.49928848 -0.254822779 -0.1197610 -0.1134363 -0.54623460\n            [,565]       [,566]     [,567]      [,568]      [,569]       [,570]\n[1,] -0.1102654210  0.351518280 -0.3685814 -0.40398355  0.08158743  0.090307349\n[2,] -0.3673222844  0.003008438  0.4989169  0.24725510 -0.27122580 -0.069121272\n[3,] -0.0004045228  0.092648251 -0.1695308  0.05793871  0.07919279  0.334112737\n[4,]  0.0328395389 -0.214255798  0.5045710  0.15565366  0.12064310 -0.002972905\n[5,] -0.0524158697  0.018408590  0.7042535 -0.12081879  0.55765551 -0.009576705\n[6,] -0.0678710275  0.081584567 -0.0028367 -0.15404331 -0.16884554  0.108288286\n         [,571]      [,572]      [,573]     [,574]      [,575]     [,576]\n[1,]  0.1021754 -0.31493175 -0.23763410 -0.2356964 -0.14666078  0.2159747\n[2,]  0.3127978 -0.01955838  0.18423359 -0.1832260 -0.04021197  0.4134444\n[3,] -0.4381178  0.15246726 -0.29947548 -0.6245624 -0.07035252 -0.2469688\n[4,]  0.3707004  0.09111639 -0.26931340  0.1062775  0.02929816  0.1155611\n[5,]  0.1016502  0.06333600 -0.17645404 -0.6649058 -0.24650835  0.3974669\n[6,] -0.3336380  0.35828074 -0.07243131 -0.1385432 -0.13887956 -0.1811757\n          [,577]      [,578]      [,579]      [,580]      [,581]      [,582]\n[1,]  0.06141004  0.55777960 -0.26803447 -0.17444906  0.50953076  0.03100814\n[2,] -0.53642294  0.46546258 -0.02464078 -0.07676114 -0.04572445  0.21684919\n[3,]  0.14759961 -0.04360153 -0.23932807  0.30815845  0.16676546  0.08943849\n[4,]  0.59768040 -0.34377971 -0.47138455 -0.09809591  0.06882402  0.04606305\n[5,]  0.07304730  0.36620946  0.32708211  0.03318574  0.13663515 -0.20288803\n[6,]  0.22628494  0.14867566 -0.37109134 -0.49218571 -0.29472377 -0.83178126\n         [,583]      [,584]      [,585]      [,586]      [,587]      [,588]\n[1,] -0.3854748  0.26931486 -0.03398922  0.09561808  0.07002125 -0.21304139\n[2,]  0.6385797  0.32396390  0.36685966  0.50853273  0.29877038  0.73633621\n[3,]  0.1458300  0.50972121  0.16929522 -0.20068698  0.66259755 -0.04542857\n[4,]  0.3129732 -0.11235583 -0.09227134  0.10457003  0.12271833  0.32504870\n[5,] -0.1647398  0.19765815 -0.08559158 -0.05253529  0.22757702 -0.01260020\n[6,]  0.2910565  0.01705804  0.30897422  0.24127753 -0.18749291 -0.07887805\n           [,589]     [,590]       [,591]      [,592]      [,593]     [,594]\n[1,] -0.050019448 -0.3266944  0.173348950  0.34382582  0.35425561  0.3447510\n[2,] -0.001734670  0.6936942 -0.127368150  0.54124745 -0.01198434 -0.6328451\n[3,] -0.007118852  0.2190098  0.190449164  0.41912624 -0.14565054 -0.2104186\n[4,] -0.171426552  0.1467240 -0.406950661  0.18773515 -0.09942373 -0.2340925\n[5,]  0.445584713  0.1455118  0.209501125 -0.22789972 -0.53816486 -0.4711068\n[6,]  0.167777989 -0.3454764  0.004492143 -0.06026715  0.06758798  0.7347656\n          [,595]      [,596]      [,597]      [,598]      [,599]      [,600]\n[1,]  0.07964180  0.08414630  0.61992037 -0.28420054 -0.47236984 -0.04845636\n[2,] -0.76535476  0.07911255  0.11552011  0.04042891  0.15929628 -0.37300863\n[3,]  0.04553456  0.37012655  0.07477506 -0.42678183 -0.31022799 -0.69280153\n[4,] -0.31451388  0.07250942 -0.48941632  0.40236769  0.16162389 -0.62448160\n[5,] -0.13256262 -0.40429151  0.30362842 -0.25534415  0.46592618 -0.06835387\n[6,]  0.05520652  0.04355634  0.30573381 -0.38479971  0.07287303 -0.02435195\n         [,601]      [,602]      [,603]      [,604]        [,605]      [,606]\n[1,]  0.4553517 -0.08359264 -0.24375238  0.33907660 -6.300834e-05  0.10199302\n[2,]  0.7345551 -0.09612456  0.08764218 -0.42559452 -3.199095e-01 -0.10964277\n[3,]  0.2654573 -0.02952814  0.05628434 -0.28250122  3.114084e-01 -0.09536187\n[4,]  0.2307790 -0.56079890  0.23287042 -0.48968575 -2.190560e-01 -0.16877021\n[5,]  0.3908463 -0.23176438 -0.43660917  0.04964101 -2.854902e-01 -0.19787328\n[6,] -0.3891086  0.08386422  0.17186756  0.58586399  5.277736e-01  0.39081058\n          [,607]     [,608]      [,609]       [,610]       [,611]     [,612]\n[1,]  0.24110202 -0.1852803 -0.50393014 -0.157868583 -0.005439201  0.6133956\n[2,]  0.15877804 -0.2316798 -0.08709650 -0.247858869  0.104627525 -0.6004315\n[3,]  0.36945164  0.2708595 -0.11356414  0.342271492  0.440247836  0.1680949\n[4,]  0.37454961 -0.3089183  0.08560533  0.639719815  0.070164336 -0.3467941\n[5,] -0.06628182  0.1951190  0.06147034  0.004808195 -0.208331466  0.2989094\n[6,] -0.11501500 -0.4671641  0.11890647 -0.006796670  0.121246426 -0.7243389\n          [,613]      [,614]     [,615]      [,616]      [,617]      [,618]\n[1,]  0.33796648  0.39518872 -0.2217410 -0.05342671 -0.08561213 -0.03324316\n[2,] -0.21120769 -0.07507081  0.2078200 -0.56250827 -0.18581153  0.27382124\n[3,]  0.21543765  0.29967686  0.1085626  0.58341696 -0.04311695  0.28726762\n[4,]  0.03588860 -0.05578078 -0.4050777  0.77533122 -0.11417332 -0.46033775\n[5,] -0.05294394  0.14849402 -0.3882749 -0.10232975  0.04282011  0.09088152\n[6,] -0.02268811  0.09972612 -0.3457270 -0.04048581  0.43383240 -0.44031886\n          [,619]       [,620]      [,621]      [,622]      [,623]     [,624]\n[1,] -0.38580484 -0.113161822  0.47266838  0.45606152  0.34654956  0.0870018\n[2,]  0.18190919 -0.294163844 -0.11568945 -0.42117318  0.29362119  0.1561241\n[3,]  0.14051253  0.280742039 -0.59800442 -0.27788744  0.10149020  0.3356282\n[4,]  0.13208505 -0.006873022  0.18576168 -0.07901751 -0.04204649 -0.1876718\n[5,] -0.05777608 -0.071361475  0.22645664  0.23389417  0.12642623 -0.6103176\n[6,] -0.21841822 -0.417289946  0.05289681  0.03237302  0.18476311  0.2462910\n           [,625]     [,626]      [,627]      [,628]       [,629]      [,630]\n[1,]  0.049745213 -0.2229075 -0.02249464 -0.31983992  0.008838464 -0.29920679\n[2,]  0.306288476 -0.2278275  0.02876487 -0.15271889  0.224446284  0.09438772\n[3,] -0.009953495  0.3062618 -0.59343060  0.35220549 -0.628198044 -0.01443779\n[4,]  0.125895492 -0.4928207  0.07316572  0.49603670  0.113946273 -0.44552448\n[5,] -0.279447379 -0.2728661  0.18009073  0.18672113  0.326285431  0.01685139\n[6,]  0.096131024 -0.5183007  0.21980802  0.06882949  0.294273322 -0.43610552\n         [,631]       [,632]     [,633]     [,634]      [,635]      [,636]\n[1,]  0.7926366 -0.330739619 -0.2944930 -0.2428669  0.50318785 -0.07495033\n[2,] -0.3328429 -0.186120939  0.1593312  0.5507064 -0.22415867 -0.26769670\n[3,]  0.9788629  0.315120161 -0.2547986  0.0142139 -0.55008461 -0.17440822\n[4,] -0.5226098  0.164471343  0.3097238  0.2030663 -0.19125215  0.04319933\n[5,] -0.3986450  0.189944657 -0.5732559  0.2060189  0.22276360 -0.27892152\n[6,]  0.2059827  0.009352586  0.2459596 -0.1581782 -0.01382543 -0.20153410\n         [,637]      [,638]      [,639]      [,640]     [,641]      [,642]\n[1,]  0.4137448  0.24407301 -0.03279017  0.47216467 -0.3496431 -0.58438065\n[2,]  0.1801718  0.78295053 -0.35492353  0.03895605  0.1239859 -0.17344719\n[3,] -0.3174980 -0.24988197 -0.28379257  0.16717943 -0.4645169 -0.12858583\n[4,]  0.2912637 -0.45614209  0.13796200  0.18845956 -0.1630745 -0.28908354\n[5,] -0.1501789  0.06754271  0.05251834 -0.25096343  0.6534082 -0.01749221\n[6,]  0.1658156 -0.18415778 -0.28324840 -0.40643956 -0.2899701  0.13347325\n         [,643]      [,644]      [,645]      [,646]      [,647]       [,648]\n[1,] -0.1317508  0.64271774  0.30895151 -0.22356045  0.39644313 -0.347240836\n[2,] -0.1360519  0.46700364 -0.17783869  0.17365722 -0.10367696 -0.227421485\n[3,] -0.3010768 -0.03457544 -0.18148694 -0.07072899 -0.44766442 -0.005620386\n[4,] -0.2944260  0.01851617 -0.50126243  0.05431665 -0.03684192  0.555604679\n[5,]  0.1569930 -0.04042020 -0.08586797 -0.01072609 -0.57147443 -0.087220837\n[6,] -0.1331867 -0.38927999 -0.03942399  0.85363716  0.42053231  0.353671137\n           [,649]      [,650]      [,651]     [,652]      [,653]      [,654]\n[1,]  0.005562341 -0.19540924  0.19571726 -0.1081672 -0.16000002 -0.22602694\n[2,] -0.074830924 -0.55820963  0.14986586 -0.3258350 -0.02879080 -0.16096130\n[3,] -0.147637645  0.15403709 -0.09587155 -0.2786709 -0.35388695  0.06546127\n[4,]  0.461052542 -0.23111787 -0.45380044  0.3857387 -0.29631925  0.08960303\n[5,]  0.391861451 -0.25854896 -0.00148444 -0.5325848 -0.02110959  0.37795851\n[6,]  0.146723550 -0.05609325 -0.11607827  0.1262215 -0.08660282 -0.49644942\n          [,655]       [,656]      [,657]      [,658]     [,659]      [,660]\n[1,] -0.02887448  0.286390471  0.17036589 -0.17429780  0.5129170 -0.10116289\n[2,] -0.14277746 -0.558447669  0.53666288  0.55259614  0.1197066 -0.26062253\n[3,] -0.05803880 -0.276924851 -0.17375252 -0.09388074 -0.2206450 -0.31885203\n[4,] -0.15672254 -0.333657002  0.19892416 -0.04099448 -0.5328783  0.23203954\n[5,] -0.73896391 -0.008335323  0.07008501 -0.09904878 -0.3174589  0.27930920\n[6,]  0.34101074 -0.022608818 -0.58189905 -0.02801949  0.5654453 -0.02433052\n            [,661]      [,662]      [,663]     [,664]      [,665]      [,666]\n[1,] -0.2479959068 -0.05973182 -0.28481768  0.1291056  0.33473261 -0.19508369\n[2,]  0.1595051296 -0.78599933  0.08514238  0.3856220  0.37470851 -0.57041945\n[3,]  0.0007202495 -0.42433288 -0.03509737 -0.1894898  0.09911249 -0.05029394\n[4,] -0.1458194766  0.40998475  0.12305287 -0.7435243  0.06463607 -0.25352194\n[5,] -0.2590985973 -0.54750590  0.30623392  0.1004649 -0.23363807 -0.02955971\n[6,]  0.1053539858 -0.45926913  0.13650739  0.2998725  0.04715705 -0.01732202\n          [,667]       [,668]      [,669]      [,670]      [,671]      [,672]\n[1,]  0.50983418 -0.037758245  0.13060792 -0.13496441 -0.27568852 -0.34540675\n[2,] -0.04617195 -0.267938635 -0.26069390 -0.30873659 -0.11463697  0.05450932\n[3,]  0.31060278  0.061389082 -0.06630817  0.12372586 -0.12067007  0.86529709\n[4,] -0.35611811  0.069368998  0.26465294  0.53715636  0.07874532  0.04130664\n[5,] -0.29887194  0.003499803  0.08197061 -0.03903872  0.70700495 -0.21329547\n[6,] -0.14236225  0.257278155  0.26511567  0.18052147 -0.01072298  0.14155338\n          [,673]      [,674]      [,675]      [,676]      [,677]       [,678]\n[1,] -0.08838027  0.72430241 -0.07146727  0.19002158  0.40694892 -0.267960127\n[2,] -0.40089580 -0.49999877 -0.20700793 -0.36402141  0.23595972 -0.390506897\n[3,] -0.28699086  0.04477845 -0.18401955 -0.39806942  0.23460069 -0.431818591\n[4,] -0.14023968  0.72617702 -0.13032977 -0.16277422  0.01544636 -0.579160384\n[5,]  0.04256688  0.33703760 -0.37902480  0.04524686  0.11992946  0.009952342\n[6,] -0.21054914  0.43902706 -0.26274074 -0.17971246 -0.53498230 -0.048760761\n          [,679]      [,680]      [,681]      [,682]      [,683]      [,684]\n[1,] -0.05939528 -0.07167077  0.08555376 -0.11913813  0.32406083  0.27337835\n[2,]  0.63899961 -0.14379016 -0.05490515 -0.14502882  0.09343072 -0.09450551\n[3,]  0.13111923  0.36472224 -0.21684572  0.02730738  0.02203934 -0.74095726\n[4,] -0.64058818 -0.80323345 -0.16703979 -0.29518312 -0.40901182 -0.16405157\n[5,]  0.75347091  0.23230331  0.26907027 -0.20478703  0.49689359  0.86320010\n[6,]  0.57385416  0.38507260  0.04713732 -0.01064391  0.33017439  0.49395260\n          [,685]      [,686]      [,687]     [,688]      [,689]      [,690]\n[1,] -0.03211326  0.49312539 -0.01609690 -0.4148169  0.02315483  0.27496074\n[2,] -0.29095694 -0.58531222  0.57379647  0.2002697  0.09568214  0.10359561\n[3,] -0.29193354 -0.24445143  0.09407467 -0.4587420  0.18761668 -0.08921189\n[4,] -0.06444544  0.38974627 -0.44115761 -0.1138303 -0.12019588  0.07234242\n[5,] -0.57377770  0.09983073  0.74742450  0.2396244  0.34970654 -0.30337746\n[6,] -0.10668605  0.30603941 -0.57354276 -0.2748165 -0.25593728  0.24130743\n          [,691]     [,692]      [,693]      [,694]       [,695]     [,696]\n[1,]  0.26591078  0.1957665 -0.14405582 -0.54878492  0.245341665  0.4024176\n[2,] -0.05371187 -0.1738611 -0.15025403 -0.38758052 -0.165263603  0.4297455\n[3,] -0.37146870  0.1487995 -0.30255786 -0.28559129 -0.007867781 -0.1956531\n[4,] -0.71476541  0.0525283 -0.79586901 -0.09702792 -0.143100189 -0.1425339\n[5,] -0.14288161 -0.2168595  0.07135683 -0.77643817 -0.031426732 -0.5642963\n[6,] -0.34444506  0.3877462 -0.61529787  0.28507058  0.173166279 -0.1773296\n           [,697]      [,698]     [,699]       [,700]      [,701]      [,702]\n[1,] -0.050648788  0.03240191 -0.1157801  0.009326621 -0.19974371 -0.07307282\n[2,] -0.218261428  0.11539364 -0.1761815  0.175104559 -0.11033223  0.25248796\n[3,]  0.088445524 -0.09864674 -0.2369939 -0.155544254 -0.35814940  0.09561825\n[4,] -0.003632179 -0.10324922  0.5859257  0.583415203  0.29460504  0.24028036\n[5,]  0.031406038 -0.27234945 -0.1086836  0.340880943 -0.33920315  0.04580851\n[6,]  0.755093655 -0.38770422 -0.7533251  0.101498341 -0.04657349  0.08523010\n         [,703]      [,704]      [,705]      [,706]     [,707]     [,708]\n[1,]  0.0641291  0.14620143 -0.15747221  0.04013915 -0.5163814 -0.1186518\n[2,]  0.1631940 -0.10813934 -0.04821866 -0.22366821 -0.3613355  0.2645081\n[3,]  0.1153083  0.03089643  0.22964808  0.02563022 -0.3387153  0.1035164\n[4,] -0.1219216  0.18266703 -0.08668648 -0.30324883  0.1651312 -0.3032828\n[5,]  0.3620837 -0.14185593 -0.44208452 -0.60994069 -0.2425108 -0.1287503\n[6,] -0.1641797 -0.25187663 -0.01089505 -0.04542459  0.1973926  0.1502801\n          [,709]     [,710]      [,711]      [,712]     [,713]      [,714]\n[1,]  0.36998872  0.1175090 -0.22782926  0.08644807  0.4819364 -0.32616196\n[2,] -0.17827239 -0.6628689  0.36150535  0.03389601 -0.2334615  0.44133624\n[3,] -0.19919123 -0.4653095  0.51646242 -0.03288847  0.1972978  0.24413900\n[4,] -0.04885615  0.4228951  0.25230195 -0.09148907  0.3944344  0.42698479\n[5,] -0.01976342  0.3082081 -0.08721571 -0.34846158 -0.1217724 -0.11647448\n[6,] -0.11582758  0.1386511  0.33318932 -0.01126129 -0.3578690 -0.01047388\n          [,715]     [,716]      [,717]      [,718]     [,719]      [,720]\n[1,]  0.71590390  0.3681433 -0.22533738 -0.01342129 0.27545540 -0.54679262\n[2,] -0.11671735 -0.2952664 -0.22287013  0.12540519 0.43285708 -0.37934607\n[3,]  0.01466354  0.1061106 -0.05908411  0.91302435 0.05436042  0.07276830\n[4,]  0.09131234  0.4450066 -0.12312120  0.42208016 0.11794549 -0.05095548\n[5,] -0.10425185 -0.5719189  0.02840419  0.02140189 0.41063420  0.42068987\n[6,]  0.10155267 -0.1240041 -0.39188716  0.07135459 0.12523843 -0.30921119\n          [,721]      [,722]      [,723]      [,724]      [,725]      [,726]\n[1,]  0.23608949 -0.52617741 -0.34097197 -0.28782200 -0.37451097 -0.34952239\n[2,] -0.29509371  0.27329726 -0.05406200  0.09399716 -0.81895721  0.05535531\n[3,] -0.26596701  0.41763951 -0.08822308 -0.38029506 -0.49978366 -0.72514884\n[4,] -0.10496544 -0.05691853  0.21541717  0.66814153  0.08062230  0.47803721\n[5,]  0.01326274  0.12749296  0.58509356 -0.12830459 -0.08883894 -0.18423867\n[6,]  0.53558662  0.49797799 -0.18627401  0.37815293 -0.72482111 -0.20995309\n          [,727]      [,728]      [,729]     [,730]      [,731]      [,732]\n[1,] -0.59598135  0.24176523 -0.33662200 -0.5884542  0.36027591  0.13229369\n[2,]  0.56344444 -0.01015645  0.06232853 -0.5518973  0.01533844 -0.31023113\n[3,] -0.06634151 -0.43218175  0.58753333 -0.4169715  0.19971864 -0.25374750\n[4,]  0.61017235  0.69567396  0.21506141  0.2375045  0.09382049  0.06488215\n[5,] -0.22614158 -0.22922515 -0.03521350 -0.1153993  0.20149104  0.49537820\n[6,]  0.05093362 -0.42889422  0.49476581  0.1181615 -0.19919684 -0.45507276\n          [,733]      [,734]      [,735]      [,736]      [,737]      [,738]\n[1,]  0.20437701  0.05203781  0.49490909  0.31160324  0.09514175  0.05444307\n[2,] -0.52358957  0.28652134  0.23219686  0.10264791 -0.28877298  0.12346658\n[3,]  0.04150331  0.57329527 -0.52124697 -0.15227369  0.09045755  0.08775919\n[4,]  0.40086145 -0.20726313 -0.39121222 -0.04235166  0.54453835 -0.45444801\n[5,]  0.09702086 -0.13985805 -0.34908364 -0.35860060  0.53663313 -0.39676585\n[6,] -0.15486362  0.76282808 -0.01993162 -0.10487993  0.31733929 -0.36240684\n          [,739]      [,740]     [,741]      [,742]      [,743]      [,744]\n[1,]  0.27981900 -0.07096133 -0.4784315  0.66517803 -0.19289862  0.08629504\n[2,]  0.09601641  0.53338792  0.2053575 -0.03001310 -0.30799949  0.07343333\n[3,] -0.14552015  0.06591336  0.3888378  0.19720517 -0.26101007 -0.06323148\n[4,] -0.06538154 -0.43489596 -0.1113351 -0.13054944  0.15214992  0.12249756\n[5,] -0.13667315 -0.19367614  0.3326097 -0.19633159  0.01642466 -0.02296640\n[6,]  0.09781382  0.11094244 -0.5492458 -0.06575614  0.24736870  0.49555292\n          [,745]      [,746]      [,747]      [,748]      [,749]       [,750]\n[1,]  0.13312537  0.01533670 -0.15163966 -0.07607806 -0.05910454 -0.351092042\n[2,]  0.05350924  0.48403226  0.28819131 -0.40904226 -0.28175816  0.101619080\n[3,] -0.11340582  0.04288237  0.24165144  0.27911829  0.20847034 -0.272479248\n[4,] -0.30477591  0.30023948  0.31396015  0.29088805  0.32706905  0.057803034\n[5,]  0.70674400  0.19266358 -0.04307437 -0.06576952 -0.30666204 -0.001147126\n[6,] -0.39409352 -0.26167054  0.33450815 -0.26173913  0.24022919 -0.249305095\n          [,751]      [,752]      [,753]      [,754]      [,755]      [,756]\n[1,] -0.21286409 -0.06238798  0.06214587  0.09024138  0.25196122 -0.18701478\n[2,] -0.12264452  0.31478828  0.55093334 -0.27893041 -0.17801001  0.04541173\n[3,]  0.19696603  0.40104135 -0.03997897  0.12056805 -0.13704124 -0.55611966\n[4,] -0.04944882 -0.15564910 -0.17869199  0.48293818  0.00867633 -0.19903414\n[5,]  0.09725815  0.06648926 -0.12537198  0.16294237  0.48473888  0.36284434\n[6,] -0.07948407 -0.38028564 -0.28510661 -0.59019708  0.01484060  0.07356224\n          [,757]     [,758]      [,759]      [,760]      [,761]     [,762]\n[1,]  0.01571477 -0.0275442 -0.02670737 -0.30325320 -0.11691628  0.2430555\n[2,]  0.25773367 -0.3752802  0.16423640  0.24901632 -0.08614271  0.7512257\n[3,] -0.35398243 -0.6679938 -0.13419701 -0.09077981  0.44723808  0.1641602\n[4,] -0.04736989  0.1546447 -0.49186963 -0.46233014  0.09997943 -0.2701464\n[5,]  0.05340559 -0.0251253  0.11120789  0.62108649  0.37473201  0.2156832\n[6,]  0.79443656 -0.3866704  0.06485681 -0.18493828 -0.69676847  0.5008552\n          [,763]      [,764]     [,765]      [,766]      [,767]      [,768]\n[1,] -0.32180435 -0.39087474  0.5572537 -0.12120575  0.01990296  0.37458994\n[2,]  0.05345742 -0.04631410 -0.2080097  0.15886002  0.04691769  0.26482474\n[3,]  0.15053381 -0.13938692  0.6492183 -0.09373402  0.20017147 -0.09764338\n[4,]  0.30730861  0.20013821  0.1724859  0.04661836  0.11861106  0.16830594\n[5,]  0.43605915  0.05713011 -0.1992022  0.38071559 -0.11443830  0.14564601\n[6,]  0.36030787 -0.10911873  0.2674815  0.09331399 -0.28505735 -0.20016109\n          [,769]      [,770]     [,771]      [,772]     [,773]       [,774]\n[1,] -0.07698102 -0.14588523 -0.1701688 -0.13673593 0.11464316  0.402303767\n[2,] -0.55442453  0.08723151  0.1551522 -0.15357825 0.09074881  0.255554988\n[3,]  0.33239609  0.11631592 -0.1014504  0.13953872 0.03657087  0.025553688\n[4,] -0.16026565 -0.34639279 -0.1499909  0.17300708 0.27449296 -0.157198205\n[5,] -0.04580387 -0.22766644  0.4245902  0.02043079 0.11277552 -0.005587812\n[6,] -0.10613742 -0.01782266 -0.1878873 -0.41100483 0.46995692 -0.010485290\n          [,775]      [,776]      [,777]      [,778]      [,779]      [,780]\n[1,]  0.08504068 -0.16499678  0.72704589 -0.08340320 -0.06788195  0.09770488\n[2,]  0.42340913 -0.14865702  0.19686775  0.25813210 -0.05138050  0.01868630\n[3,]  0.31774095 -0.09592184 -0.11062877  0.06015952 -0.25259644  0.25965601\n[4,] -0.27455301 -0.16660496 -0.06700725  0.20956578 -0.21783639 -0.07157332\n[5,] -0.08720599 -0.15714075  0.30149690  0.11125779  0.16364511  0.04193012\n[6,] -0.02898514  0.03885249 -0.80046746 -0.19787253  0.08664562 -0.28270373\n          [,781]      [,782]      [,783]     [,784]      [,785]       [,786]\n[1,] -0.53662602  0.50203861 -0.36876132 -0.2149850 -0.18655716  0.061426508\n[2,]  0.54845735  0.06453865  0.08230341  0.6508388  0.43245330 -0.008026302\n[3,]  0.03062870  0.44390525  0.24378088  0.7574203  0.07152984 -0.200341582\n[4,] -0.05160702  0.27464622 -0.08616433 -0.3499677  0.01660597  0.064728251\n[5,] -0.31631157 -0.42322562  0.46935859  0.2626024  0.65990909  0.070856076\n[6,]  0.48498916  0.51826254 -0.49454592 -0.6943482  0.32467378 -0.323208377\n           [,787]      [,788]      [,789]      [,790]      [,791]      [,792]\n[1,] -0.048951417  0.28581927 -0.06920729  0.10416141 -0.26103689 -0.33184967\n[2,] -0.150883871  0.25806739  0.03179268  0.68611745  0.04392090 -0.67387010\n[3,]  0.374015348 -0.30716285  0.08329041 -0.35006087 -0.07900104 -0.15855718\n[4,] -0.259978812 -0.26547953 -0.60102494  0.23471847 -0.14683017 -0.08465532\n[5,]  0.007925326  0.04914259  0.18332472 -0.02186943 -0.17950987 -0.13653027\n[6,]  0.403671405  0.16114850 -0.42488311 -0.37555887  0.07912382 -0.39278256\n        [,793]     [,794]      [,795]     [,796]       [,797]     [,798]\n[1,] 0.1892908  0.3725262 -0.26311315 -0.2773312 -0.452171919 -0.2462929\n[2,] 0.4556962 -0.7475739  0.09314962  0.1988916 -0.387356664  0.2957615\n[3,] 0.3036683 -0.1950489 -0.17550871 -0.1510814 -0.135067281  0.1725584\n[4,] 0.3311618 -0.1232280  0.01009321  0.6806001 -0.119376373 -0.3659831\n[5,] 0.1629801 -0.1013562 -0.26875354  0.3285210  0.008686766  0.7863684\n[6,] 0.3412810 -0.2358859  0.13371848 -0.3428728  0.714993186 -0.3918277\n         [,799]      [,800]     [,801]      [,802]      [,803]     [,804]\n[1,] -0.2432686  0.07846436 -0.1338014  0.07925698 -0.08337619  0.5719539\n[2,] -0.2082982  0.09829025  0.2821215  0.06798954  0.14952421  0.3905057\n[3,] -0.2982448  0.21402713 -0.3604891 -0.48809990 -0.02892441  0.2284858\n[4,] -0.4694978  0.22283988  0.2903271 -0.34015524  0.34103824  0.4325925\n[5,]  0.3701103  0.19190209  0.2221522  0.09431947 -0.37259579  0.2120126\n[6,] -0.2507091 -0.68136958  0.1586120 -0.16014729  0.55725968 -0.2226418\n          [,805]      [,806]      [,807]      [,808]      [,809]     [,810]\n[1,]  0.07466853 -0.27318188 -0.11910219  0.05432763  0.01226958  0.1075140\n[2,]  0.12571521  0.17358422  0.02629308 -0.28416887 -0.17770565 -0.4213680\n[3,]  0.06885894  0.12085031 -0.47481935 -0.49444943  0.05160901  0.4981369\n[4,] -0.42679305 -0.51545756  0.24079777 -0.37736935  0.53229197  0.2855510\n[5,] -0.15821309  0.22149437 -0.52752189  0.47128026 -0.22499045  0.1164766\n[6,] -0.31971808  0.05577134  0.08316917  0.18264769 -0.34839948  0.5412797\n         [,811]      [,812]     [,813]      [,814]      [,815]       [,816]\n[1,] -0.4368085  0.49665233 -0.1143276  0.27756719 -0.13934631  0.285536141\n[2,] -0.1089931 -0.19218051 -0.1788569 -0.31892797 -0.04775952  0.440623512\n[3,]  0.1886945 -0.23881149 -0.2982498 -0.08312655 -0.11788774  0.022115468\n[4,] -0.3022087 -0.33298693 -0.3401383 -0.26974722  0.33429298  0.480411533\n[5,] -0.1639126 -0.02004375 -0.1429543 -0.60029146 -0.34304560 -0.008392757\n[6,] -0.1408318  0.74689894  0.3637695 -0.07700249 -0.23318004 -0.049213957\n           [,817]      [,818]      [,819]      [,820]      [,821]      [,822]\n[1,]  0.719125494 -0.08373038  0.25354778 -0.02444596  0.11041058 -0.63523171\n[2,] -0.414390795  0.03956377  0.55690788  0.24086084 -0.19217502  0.10945998\n[3,] -0.305662752 -0.47738505  0.44528617 -0.53814129 -0.20716912 -0.22277930\n[4,] -0.253747505  0.21289107  0.22211265  0.26002956  0.17712586 -0.17983788\n[5,] -0.323882831  0.60558852  0.06332142 -0.38642961 -0.07465909  0.06317947\n[6,] -0.008865601 -0.37520902 -0.22385693  0.97914620 -0.02757669 -0.11033236\n          [,823]      [,824]       [,825]      [,826]      [,827]      [,828]\n[1,] -0.33361564 -0.44931285  0.096080587  0.08842451  0.14610161 -0.16893409\n[2,]  0.65250264  0.27279090  0.028403836 -0.15098354  0.51094262  0.03813488\n[3,] -0.09598469 -0.14617371  0.310971589  0.16610321  0.29927845 -0.45265755\n[4,]  0.54821646 -0.06132150  0.558496255 -0.01271004 -0.28019938 -0.16991729\n[5,]  0.29067296  0.20237235  0.301173863 -0.21649216  0.21661751 -0.03706019\n[6,] -0.13960029  0.05910008 -0.005590394 -0.12939876 -0.03497599 -0.12528873\n          [,829]      [,830]     [,831]       [,832]     [,833]      [,834]\n[1,]  0.11536785  0.22119234  0.1508108 -0.135431967 -0.1932604 -0.01915329\n[2,]  0.17816752 -0.14117662  0.1404419  0.427008345 -0.1521904 -0.31015495\n[3,]  0.26430185  0.15088478 -0.1980811  0.198680391  0.1409894  0.20500049\n[4,] -0.37232964 -0.20189323 -0.2896696  0.070279136 -0.5088881  0.44452239\n[5,] -0.11628373 -0.20858092 -0.3666008 -0.006161958 -0.6836049 -0.24782002\n[6,] -0.07340568 -0.07111901 -0.6042973  0.549962018  0.1357398 -0.24830753\n         [,835]      [,836]      [,837]     [,838]      [,839]       [,840]\n[1,] -0.2462113  0.18743223 -0.18320698 -0.2417331 -0.03563394  0.043017526\n[2,] -0.1296634 -0.11640129  0.09472557 -0.2052609  0.66657977 -0.007158551\n[3,] -0.5671236  0.24175205  0.29669131  0.4466031 -0.04823559 -0.163735898\n[4,] -0.5051669  0.05297871 -0.09812853 -0.3758354  0.03614266 -0.418162689\n[5,] -0.1105394 -0.01779952 -0.39678197 -0.5569888 -0.03834041 -0.198337973\n[6,] -0.2943218 -0.05447046  0.18653858 -0.1075598 -0.47068300  0.193256492\n         [,841]      [,842]      [,843]      [,844]      [,845]     [,846]\n[1,] 0.24902307  0.26027238  0.47559230 -0.26753727 -0.58251403  0.1652761\n[2,] 0.03388313 -0.12585433 -0.59921173 -0.02997862  0.11808275 -0.2748289\n[3,] 0.12187629  0.18123436 -0.01045299  0.30739870 -0.17936496  0.2982113\n[4,] 0.09750084  0.46464599 -0.26963561 -0.04351588  0.08899911  0.3453864\n[5,] 0.19079902 -0.48320526  0.11242055 -0.17329842  0.23140837 -0.2172050\n[6,] 0.26894497 -0.03099345  0.57282036 -0.08724143  0.25496409  0.2225319\n         [,847]     [,848]      [,849]     [,850]      [,851]      [,852]\n[1,]  0.8219842  0.1494788 -0.08953080  0.4362768  0.09548553  0.06179425\n[2,] -0.4962605 -0.6145939  0.24834565 -0.3180961 -0.19724711  0.59328927\n[3,]  0.2820021 -0.2348118  0.02121582  0.4227307  0.17907000 -0.32099549\n[4,] -0.1615674  0.2174002  0.22066840  0.8499906  0.12934799  0.17798351\n[5,] -0.3703301 -0.4768345 -0.04698199  0.1662322 -0.11756927 -0.21970905\n[6,] -0.2790931 -0.1093638 -0.21345038 -0.2177936  0.02876895  0.62108848\n          [,853]      [,854]      [,855]      [,856]       [,857]      [,858]\n[1,]  0.11179629  0.51698770 -0.27110196 -0.02376466 -0.357639183  0.04555926\n[2,]  0.33481599  0.07490505  0.29679340  0.03364364  0.281174089 -0.19499873\n[3,]  0.64228041  0.50119375 -0.13852591  0.70089536  0.188752002  0.58823281\n[4,] -0.29477200 -0.15477526 -0.08068927 -0.40934180 -0.122487108 -0.14862640\n[5,]  0.81209043  0.22774343  0.17952274  0.17370835 -0.009886951  0.07924818\n[6,]  0.04204986  0.29128673 -0.48389341 -0.18201595  0.155664274 -0.08192451\n          [,859]      [,860]      [,861]      [,862]      [,863]     [,864]\n[1,] -0.13645688  0.32853267 -0.48414287  0.24959359 -0.21006659  0.3731771\n[2,] -0.41887686 -0.09046479 -0.05432290 -0.09382596 -0.18099835 -0.0755182\n[3,] -0.27279275 -0.11973487  0.04270741  0.14862575 -0.17907764 -0.4676968\n[4,]  0.31047553  0.37493446 -0.04384645  0.40718837  0.26496631  0.3426030\n[5,]  0.01628821  0.36848719 -0.58475623  0.28362953 -0.01511324 -0.4377592\n[6,]  0.59825600  0.46273439  0.24038991  0.61843813 -0.12579669  0.3958842\n          [,865]      [,866]      [,867]      [,868]      [,869]     [,870]\n[1,] -0.17290828 -0.65191379  0.00416770  0.25862578 -0.50178375  0.2654832\n[2,] -0.13428007  0.55087853  0.39950359  0.39935384 -0.25039008 -0.4598319\n[3,]  0.10620249 -0.36854756  0.66387634  0.04278323 -0.46375458  0.4641614\n[4,]  0.16858550 -0.20915878 -0.06539713 -0.14472446  0.24769019  0.2372273\n[5,]  0.06278013  0.03253165 -0.18257878 -0.10799500  0.06738845 -0.2298985\n[6,] -0.27178960  0.20793372  0.15619543 -0.06738018  0.59155887 -0.3012237\n           [,871]      [,872]     [,873]      [,874]      [,875]      [,876]\n[1,] -0.412286979 -0.32644905  0.1453208  0.36089245  0.09869452 -0.39185965\n[2,]  0.132291121 -0.05301806  0.2996545 -0.02620367 -0.39809013  0.29240624\n[3,]  0.803854097 -0.77334002  0.9414221 -0.10235384 -0.03837881 -0.25156982\n[4,]  0.356803929 -0.24955370 -0.3091243  0.48259055 -0.12982330  0.08830335\n[5,]  0.407081070  0.25588873 -0.2567913 -0.42064593 -0.28076151  0.25904722\n[6,] -0.009413105  0.49539338 -0.4786372 -0.41906506  0.07400656 -0.19841420\n         [,877]     [,878]       [,879]      [,880]      [,881]      [,882]\n[1,]  0.7290518  0.4794035  0.112642420 -0.22592077 -0.43460726  0.21458564\n[2,]  0.4976018  0.1974835 -0.662086876  0.01738467 -0.72139072  0.26063541\n[3,] -0.3061016 -0.1565685  0.073265515  0.39025466 -0.30946265  0.01503905\n[4,] -0.5020212  0.3646635 -0.244978676  0.02319471  0.34229361  0.26768270\n[5,]  0.1691960 -0.2761949  0.636608640  0.55297455 -0.11099663 -0.36191523\n[6,]  0.4844151 -0.3635070 -0.005256264  0.06645868 -0.09853508  0.24918825\n          [,883]      [,884]     [,885]     [,886]     [,887]      [,888]\n[1,] -0.26718493 -0.07893581  0.1179071  0.1689124  0.1479693 -0.03285166\n[2,]  0.22320356  0.32233784 -0.1459172  0.6325499 -0.4071787  0.10303445\n[3,]  0.13168199 -0.25026838  0.4245326  0.2556966  0.3119581 -0.21015967\n[4,] -0.01846982  0.26815388  0.1743022  0.1560005 -0.2419715 -0.12489019\n[5,]  0.33939644 -0.10309532 -0.1489843  0.2254972  0.2727824  0.33289808\n[6,] -0.47314009  0.32536175  0.3759270 -0.2063313  0.1557392 -0.44743904\n          [,889]      [,890]     [,891]       [,892]      [,893]      [,894]\n[1,] -0.16536941 -0.41790231  0.1754295 -0.001704142 -0.18078540 -0.32197282\n[2,]  0.15873035 -0.19262087 -0.1141561  0.675711352 -0.05994546  0.26392369\n[3,]  0.19626724  0.14520934  0.5559003 -0.626783476 -0.04418669  0.02492520\n[4,]  0.26294165 -0.25169506 -0.2306770 -0.563966815  0.16532410 -0.01667899\n[5,] -0.13072269 -0.43948527  0.3585306  0.121011762  0.30355573 -0.12043970\n[6,]  0.09073255  0.03219285  0.1181160  0.106121787 -0.04902406  0.24357443\n         [,895]       [,896]      [,897]       [,898]      [,899]     [,900]\n[1,] -0.3691198 -0.280209476 -0.54439419  0.233013082  0.44231124 0.28559655\n[2,]  0.5001718 -0.586704875 -0.24666601  0.052213827  0.15289769 0.30829232\n[3,] -0.2307113  0.009401566 -0.10692468 -0.019650551 -0.08323701 0.02949387\n[4,]  0.5322414  0.032713167 -0.33805307  0.096376907 -0.15300593 0.01629213\n[5,] -0.1720184  0.232326814  0.04076512 -0.006465998 -0.41593397 0.30214948\n[6,] -0.2688628  0.178866007  0.27333554  0.677708054  0.33684325 0.24493574\n          [,901]      [,902]      [,903]     [,904]     [,905]       [,906]\n[1,]  0.26770398  0.12223633 -0.62004856 -0.4502904 -0.3792223  0.041941088\n[2,] -0.31041253 -0.16136485 -0.27750220 -0.1600813  0.2963689 -0.154081362\n[3,]  0.21123425 -0.42285529  0.58665505 -0.5125996  0.5306936 -0.054397065\n[4,]  0.01083481 -0.04983589 -0.07103916  0.1049823 -0.3340820 -0.125011710\n[5,] -0.08323693  0.19211371 -0.35402314  0.4992988  0.1105118  0.005140023\n[6,]  0.04822162  0.34922416  0.46241391  0.4732494 -0.1101320  0.270285750\n          [,907]        [,908]     [,909]      [,910]      [,911]      [,912]\n[1,] -0.57159409  0.3919195479  0.4124648 -0.07324872  0.08243536 -0.34743618\n[2,]  0.04074436 -0.1447963635  0.2982075  0.62236684 -0.14685298  0.31024647\n[3,]  0.20863440 -0.0008203137  0.4853664  0.26492050 -0.39583959  0.06929511\n[4,]  0.48779222 -0.3668558689 -0.2409824 -0.03970574 -0.07062899 -0.27545679\n[5,] -0.06501335  0.1066198461 -0.3320804 -0.05044880 -0.32897938  0.36172253\n[6,]  0.53201119 -0.4360803508  0.1753395 -0.18438425  0.07579942 -0.06459068\n           [,913]      [,914]       [,915]      [,916]     [,917]       [,918]\n[1,]  0.219540349 -0.16651324 -0.145732947 -0.52264749  0.1595272  0.107689327\n[2,]  0.004375029 -0.19566702 -0.088420690 -0.42111299 -0.4015019  0.860065295\n[3,]  0.271369690 -0.05800588 -0.295962825 -0.28608627  0.2604436 -0.204413621\n[4,] -0.321812052 -0.14082784 -0.134589609 -0.06806348  0.3951529 -0.288341880\n[5,] -0.193146914 -0.82110623 -0.003110004 -0.15510500  0.1225416 -0.006374217\n[6,] -0.079406892  0.07942383 -0.210634012 -0.71836913  0.1517068 -0.004893337\n          [,919]      [,920]      [,921]      [,922]     [,923]      [,924]\n[1,] -0.55479077  0.58827751 -0.51749029  0.15600007  0.2993178  0.07089034\n[2,] -0.31383586 -0.05638017  0.42012283 -0.10786438  0.1610516  0.21509151\n[3,]  0.09226553  0.47292212 -0.58903221  0.09691872  0.7024419 -0.23168709\n[4,] -0.36895654 -0.24264975 -0.13569872  0.01930959 -0.2246225 -0.05679718\n[5,]  0.02514521 -0.07859917  0.02333894 -0.20737245 -0.1082331  0.13363259\n[6,]  0.30276792 -0.38065181  0.38490481 -0.40666453 -0.3198592 -0.15997055\n          [,925]      [,926]      [,927]      [,928]      [,929]      [,930]\n[1,]  0.03328636  0.33666360  0.33681913 -0.16462862  0.04019617  0.74084298\n[2,] -0.01677294  0.19640799 -0.32414600 -0.25524343  0.20928384  0.04895607\n[3,] -0.12433181  0.31758779  0.26979412  0.20900167 -0.28794959  0.20866474\n[4,]  0.10183414  0.16236477 -0.07777552  0.26193093 -0.37994636 -0.35428165\n[5,]  0.42435883 -0.35901404 -0.01973331  0.07754411 -0.43834310  1.16164815\n[6,]  0.29712875  0.06845554  0.32769830  0.24191237 -0.12477749 -0.52122482\n          [,931]     [,932]     [,933]      [,934]      [,935]      [,936]\n[1,]  0.23754662  0.1606029  0.2024757 -0.06195943 -0.40453618 -0.03561780\n[2,] -0.21082544  0.4529289 -0.1352618 -0.37320542 -0.15795044 -0.07997250\n[3,]  0.73758693 -0.4822368  0.1905660  0.07657601 -0.06386608  0.23314447\n[4,]  0.03794077 -0.2966945 -0.2532459  0.27596251 -0.32438261 -0.31517562\n[5,]  0.33824154  0.1786898 -0.3868406 -0.24587691 -0.34223680  0.08517643\n[6,] -0.08605913  0.2550981  0.1252678  0.41247455 -0.27824919  0.74461734\n          [,937]     [,938]      [,939]      [,940]      [,941]      [,942]\n[1,] -0.72579674  0.1463953  0.08466947  0.27879486 -0.21612312 0.127831902\n[2,]  0.45248903 -0.1598354  0.02948813 -0.37133048 -0.19597042 0.003398968\n[3,] -0.50116060 -0.1818127 -0.13166448  1.03141063 -0.01221056 0.040145637\n[4,]  0.01563390 -0.2026577  0.27596187 -0.08470276  0.23353745 0.365079106\n[5,] -0.26440668  0.5133752  0.26790070  0.40048634  0.24668641 0.362107129\n[6,] -0.01897488 -0.2351321  0.17757789 -0.07598482 -0.20960757 0.407268075\n          [,943]      [,944]      [,945]     [,946]     [,947]      [,948]\n[1,]  0.05816817 -0.02355363  0.33090333 -0.2454723 -0.4994938 -0.15568687\n[2,] -0.20988673 -0.48049441  0.03626217  0.2552458  0.1265471  0.10730330\n[3,] -0.06721660  0.61682470  0.54858784 -0.1379955  0.3010692  0.04978719\n[4,]  0.03847759  0.30966148 -0.11656532  0.6920453 -0.1216762 -0.23815130\n[5,]  0.31607065 -0.33960021  0.03522994  0.2777913 -0.5852425  0.05117434\n[6,]  0.37888324 -0.02711209 -0.07317539  0.5439801  0.7280035  0.29505763\n          [,949]       [,950]     [,951]      [,952]      [,953]      [,954]\n[1,] -0.24030753  0.002415335  0.3642143  0.01047724  0.24014846 -0.20004569\n[2,]  0.18530462  0.668772803 -0.1591550  0.22098768 -0.26439156 -0.56732010\n[3,] -0.24858094 -0.166843337  0.3832116  0.22163209  0.08075788  0.16083778\n[4,]  0.21982939 -0.063211344 -0.2376186 -0.44252471  0.50943207 -0.06583417\n[5,] -0.26771161  0.023619438 -0.2126506 -0.42636133 -0.33584104  0.08199910\n[6,]  0.02804767 -0.353575311 -0.1888961 -0.06593865 -0.26233521 -0.21332613\n         [,955]      [,956]      [,957]      [,958]      [,959]      [,960]\n[1,] -0.3439118  0.02349125  0.29857316 -0.38932699 -0.05575370  0.09405063\n[2,]  0.2769104 -0.07892007 -0.30315563  0.17821438 -0.03378732 -0.09979855\n[3,]  0.4435666 -0.05936979  0.51534462  0.07869008  0.55755724 -0.33805588\n[4,]  0.2090963  0.01419782 -0.33525156  0.20082611 -0.05454194 -0.04534644\n[5,]  0.7051122 -0.19401205  0.02136426  0.29061936 -0.45687605  0.13094189\n[6,]  0.2291972  0.42937849 -0.28766164 -0.79856519  0.02477325 -0.24695013\n          [,961]     [,962]      [,963]      [,964]      [,965]      [,966]\n[1,]  0.12314254 -0.3843580 -0.42733724  0.36239207  0.05981142  0.52616516\n[2,]  0.41172550 -0.4364342  0.06996581  0.32126710  0.56816693 -0.15559993\n[3,]  0.05742169  0.4470753 -0.36717995  0.62437072  0.19276849 -0.38454572\n[4,] -0.33050140  0.3844170  0.54963441  0.23185787 -0.09507639  0.29135919\n[5,]  0.22921156  0.1317670  0.44465912  0.02122396 -0.22086462  0.06068081\n[6,]  0.09152589 -0.3853897 -0.08879750 -0.04222556 -0.45501179 -0.46578704\n          [,967]      [,968]      [,969]     [,970]     [,971]      [,972]\n[1,]  0.01352909 -0.04270743  0.09983115  0.2822478 -0.2496828 -0.16698821\n[2,] -0.24835510  0.10906146 -0.36677207  0.4154083  0.1657277 -0.12699096\n[3,] -0.43608995  0.50471198 -0.22928030 -0.6160758  0.3639810  0.21409490\n[4,] -0.42185765  0.12377607  0.11359505 -0.1324287  0.1823074 -0.01190719\n[5,] -0.31706122 -0.26189392 -0.24930269  0.2487614 -0.4009842  0.21479234\n[6,]  0.34894952  0.33659369 -0.16829735 -0.1251111 -0.4283537 -0.46982906\n          [,973]      [,974]      [,975]     [,976]      [,977]      [,978]\n[1,] -0.33510192  0.30610419  0.05902057  0.0187761  0.04768022  0.05632129\n[2,] -0.06628882  0.03745034 -0.63312576  0.3069588 -0.19284861 -0.25479231\n[3,] -0.04135032 -0.17360615  0.51840760 -0.1653122  0.44152168 -0.48124209\n[4,] -0.05033167 -0.01120239  0.11582347  0.1214429 -0.21221033  0.21789806\n[5,] -0.74059729  0.24063756 -0.19576331 -0.2126503 -0.18384158 -0.15354334\n[6,]  0.15276982 -0.17496691 -0.21698716 -0.1170539 -0.15919465  0.27950762\n          [,979]      [,980]      [,981]      [,982]        [,983]      [,984]\n[1,] -0.21401015 -0.31134294  0.25626425 -0.42879399  0.4052707612 -0.36185590\n[2,]  0.04233576 -0.42583372  0.43647243 -0.23593525  0.3546589911  0.33685855\n[3,] -0.17271590  0.06663944 -0.46793271 -0.13585020  0.1860239516 -0.10966062\n[4,]  0.06726419  0.01414202 -0.33445712  0.06489623 -0.0007880222 -0.82405939\n[5,]  0.26092610  0.98415753  0.25767733 -0.19160785  0.1735637411  0.08712636\n[6,] -0.12833749  0.06573932 -0.03875513  0.40141049 -0.1774031940  0.20509181\n         [,985]      [,986]      [,987]     [,988]      [,989]      [,990]\n[1,] -0.2248144 -0.26977303  0.16235672 -0.1061577 -0.09897828 -0.49178009\n[2,] -0.3136517  0.20756319  0.20068064 -0.2265393 -0.32654013  0.05300913\n[3,] -0.2613305 -0.06894408  0.04509250  0.1754386 -0.14479174 -0.24506268\n[4,]  0.1207344 -0.10312790  0.28131674  0.1516023  0.15793037  0.17777566\n[5,] -0.3783833 -0.44048159 -0.01535437 -0.2528319 -0.10752023 -0.15972586\n[6,] -0.2463233 -0.38981158  0.46983301 -0.5081926 -0.31131993  0.56674386\n          [,991]      [,992]      [,993]       [,994]     [,995]      [,996]\n[1,]  0.01151520 -0.24968264  0.06129555  0.242886791 -0.1867168  0.40910467\n[2,]  0.48334183  0.09499175 -0.12403007 -0.151197928 -0.2061307 -0.19050404\n[3,]  0.23060508 -0.01065018 -0.14196075 -0.398304841  0.1766413 -0.48094042\n[4,]  0.16914827  0.05554463 -0.27165670  0.174390057  0.1353550  0.49841483\n[5,] -0.04873398  0.35851818 -0.52147178  0.333977997  0.4360523 -0.14803611\n[6,]  0.29230200 -0.06443252  0.25094153  0.001473389  0.3398976 -0.06412252\n           [,997]      [,998]       [,999]\n[1,] -0.175006994  0.11071429  0.443939473\n[2,]  0.002351947  0.34671088  0.290867330\n[3,]  0.353896266  0.03243286 -0.052799467\n[4,]  0.086476435 -0.25693659 -0.487843813\n[5,] -0.111264372  0.54198129 -0.007976626\n[6,] -0.447218764 -0.49585636 -0.002403459\n\n\n\nto calculate the simulated p-value this process has to be repeat nsim number of times this gives us a matrix with n rows and nsim columns and each column is a simulation value"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#calculate-p-value",
    "href": "getting-away-with-for-loops/index.html#calculate-p-value",
    "title": "for loops in R",
    "section": "calculate p-value",
    "text": "calculate p-value\n\n# calculate the simulate p-values\nnumerator <- rowSums(reps <= obs)\n\nhead(numerator)\n\n[1] 969 300 977 983 736   5\n\n\n\ndivide by number of simulations\n\n\n\n(numerator + 1) / (nsim + 1)\n\n  [1] 0.970 0.301 0.978 0.984 0.737 0.006 0.070 0.346 0.507 1.000 0.884 0.102\n [13] 0.026 0.305 0.328 0.265 0.658 0.078 0.754 0.024 0.349 0.719 0.574 0.891\n [25] 0.491 0.797 0.959 0.117 0.018 0.553 0.356 0.211 0.247 0.159 0.861 0.973\n [37] 0.940 0.254 0.966 0.350 1.000 0.813 0.230 0.098 0.035 0.050 0.010 0.974\n [49] 0.894 0.357 0.650 0.277 1.000 0.110 0.431 0.692 0.815 0.403 0.001 0.026\n [61] 0.717 0.494 0.075 0.407 0.109 0.656 0.012 0.743 0.656 0.531 0.536 0.679\n [73] 0.144 0.442 0.850 0.957 0.600 0.414 0.077 0.008 0.109 0.987 0.871 0.351\n [85] 0.234 0.277 0.937 0.326 0.976 0.838 0.975 0.096 0.511 0.064 0.837 0.535\n [97] 0.323 0.989 0.650 0.944\n\n\n\nto calculate the p-value would compare the observed value to the simulate values. count up the number of times observed statistic was greater than the simulated, then plug and check for the simulated p-value this works just fine"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#section-10",
    "href": "getting-away-with-for-loops/index.html#section-10",
    "title": "for loops in R",
    "section": "",
    "text": "but Roger Bivand pointed out how inneficint these calculations are for a small p-value you need a hell of a lot of simulations and what i wrote scaled linearly so if you need 999 simulations instead of 99 that would take 10 times longer. woof!"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#the-outer-loop",
    "href": "getting-away-with-for-loops/index.html#the-outer-loop",
    "title": "for loops in R",
    "section": "the outer loop",
    "text": "the outer loop\n\n\nres <- matrix(nrow = n, ncol = nsim)\n\nfor (j in 1:nsim) {\n  res[,j] <- simulate_stat(n, k)\n}\n\n\n\nsimulate_stat() is another for loop\n\nas mentioned earlier, the apply family and purrr is only just loop hiding we can think about all the steps i took as a series of for loops\nthe first can be rewritten like this first we preallocate a vector like a good programmer then we iterate through our simulations with simulate_stat()\nbut wait…\nsimulate_stat uses sapply! well damn. that’s another for loop\nyou got that right. I’m saying I wrote a NESTED for loop\ncringe, right?"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#the-inner-loop",
    "href": "getting-away-with-for-loops/index.html#the-inner-loop",
    "title": "for loops in R",
    "section": "the inner loop",
    "text": "the inner loop\n\nres <- numeric(n)\n\nfor (i in 1:n) {\n  res[i] <- stat_calc(k)\n}\n\n\nthe inner loop can be wewritten like this pre allocate the results again then populate them with a for loop simple enough"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#both-loops",
    "href": "getting-away-with-for-loops/index.html#both-loops",
    "title": "for loops in R",
    "section": "both loops",
    "text": "both loops\n\n# instantiate results matrix \nres_mat <- matrix(nrow = n, ncol = nsim)\n\nfor (j in 1:nsim) {\n  \n  # allocate results vector\n  res <- numeric(n) \n  \n  # populate results vector \n  for (i in 1:n) {\n    res[i] <- stat_calc(k)\n  }\n  \n  # fill results matrix with stat vector\n  res_mat[,j] <- res\n}\n\n\nput together that replicate statement can be rewritten using this nested for loop."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#speeding-it-up",
    "href": "getting-away-with-for-loops/index.html#speeding-it-up",
    "title": "for loops in R",
    "section": "speeding it up",
    "text": "speeding it up\n\n\nroger kindly pointed out a way to rethink this. Instead of trying to work in a vectorized mindset where I do something to every single element all at once. do the simulations for a single location all at once\nhe referred to some code of mine he had refactored months ago. after giving it another look, it finally made sense."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#each-element",
    "href": "getting-away-with-for-loops/index.html#each-element",
    "title": "for loops in R",
    "section": "each element",
    "text": "each element\n\nsimulations <- matrix(rnorm(k * nsim), nrow = nsim)\n\nhead(simulations)\n\n          [,1]       [,2]       [,3]       [,4]       [,5]        [,6]\n[1,] -1.221597  0.2320816  0.2275564 -2.1450528  0.1934132 -0.28482011\n[2,]  1.655723 -1.0671147 -2.3726236 -0.4006982  1.1311245  0.72018389\n[3,]  1.399798  0.4984924  0.3264791 -0.5657876 -0.5750421  0.38090130\n[4,]  1.253485  0.4198027 -0.6578335 -1.4031335 -0.8674624 -0.69282910\n[5,]  0.198897  0.8536004  1.1794205 -1.1499824  1.3326462 -0.19110694\n[6,]  1.063115  0.6473917 -1.1441991  1.2701802  0.7616580  0.05611599\n            [,7]        [,8]       [,9]      [,10]\n[1,] -0.04623873  0.59418404  1.3863573 -1.0563296\n[2,]  1.02548129  0.21060537 -0.5980706 -0.4064396\n[3,] -0.70079070 -0.28154873 -0.5961901 -0.2459481\n[4,] -0.43256866  0.85752280 -0.6668649  0.5756308\n[5,]  0.65510143 -0.07038567  0.5816813  0.7787426\n[6,] -0.38615247  0.81369632 -0.4818380 -0.6493791\n\n\n\nfor each location we can create a matrix of random draws where each row is a simulation and the columns are the number of neighbors"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#each-element-1",
    "href": "getting-away-with-for-loops/index.html#each-element-1",
    "title": "for loops in R",
    "section": "each element",
    "text": "each element\n\nsimulations <- matrix(rnorm(k * nsim), nrow = nsim)\n\nstat_sim_i <- rowMeans(simulations)\n\nhead(stat_sim_i)\n\n[1] -0.03505480 -0.06722337  0.29473346 -0.41919084  0.12895046  0.08677108\n\n\n\nand the average of each row is the simulation statistic"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#each-element-2",
    "href": "getting-away-with-for-loops/index.html#each-element-2",
    "title": "for loops in R",
    "section": "each element",
    "text": "each element\n\nsimulations <- matrix(rnorm(k * nsim), nrow = nsim)\n\nstat_sim_i <- rowMeans(simulations)\n\n# print p-value\n(sum(stat_sim_i <= obs[6]) + 1) / (nsim + 1)\n\n[1] 0.007\n\n\n\nand taking the row means returns a hand vector that can be compared to the observed statistic and the p-value can be measured easily"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#the-loop",
    "href": "getting-away-with-for-loops/index.html#the-loop",
    "title": "for loops in R",
    "section": "the loop",
    "text": "the loop\n\np_vals <- numeric(n)\n\nfor (i in 1:n) {\n  simulations <- matrix(rnorm(k * nsim), nrow = nsim)\n  stat_sim_i <- rowMeans(simulations)\n  p_vals[i] <- (sum(stat_sim_i <= obs[i]) + 1) / (nsim + 1)\n}\n\n\nbefore every for loop is a preallocated object for each location we generate those random samples take the mean of each simulation then calculate the p-value and fill accordingly"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#how-does-it-compare",
    "href": "getting-away-with-for-loops/index.html#how-does-it-compare",
    "title": "for loops in R",
    "section": "how does it compare?",
    "text": "how does it compare?\n\nbench::mark(\n  apply = {\n    reps <- replicate(nsim, simulate_stat(n, k))\n    p_vals <- (rowSums(reps <= obs) + 1) / (nsim + 1)\n  },\n  \n  for_loop = {\n    p_vals <- numeric(n)\n\n    for (i in 1:n) {\n      simulations <- matrix(rnorm(k * nsim), nrow = nsim)\n      stat_sim_i <- rowMeans(simulations)\n      p_vals[i] <- (sum(stat_sim_i <= obs[i]) + 1) / (nsim + 1)\n    }\n  }, check = FALSE\n)\n\n# A tibble: 2 × 6\n  expression      min   median `itr/sec` mem_alloc `gc/sec`\n  <bch:expr> <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl>\n1 apply       311.3ms  313.5ms      3.19   248.6MB     33.5\n2 for_loop     27.5ms   29.3ms     34.1     16.7MB     26.5"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#the-point",
    "href": "getting-away-with-for-loops/index.html#the-point",
    "title": "for loops in R",
    "section": "the point",
    "text": "the point\n\nthere is no innate virtue in apply() or purrr\n\nno automatic vectorization of code\nyou are your worst enemy\n\n\nwhat we should take away is that there is nothing innately good or bad about using apply or purrr. we can’t magically make code vectorized. and we are not always going to write the best code or the most efficient code and thats totally fine."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#a-last-benchmark",
    "href": "getting-away-with-for-loops/index.html#a-last-benchmark",
    "title": "for loops in R",
    "section": "a last benchmark",
    "text": "a last benchmark\n\nnsim = 3999\nbench::mark(\n  purrr = purrr::map_dbl(obs, sim_stat, k, nsim),\n  lapply = unlist(lapply(obs, sim_stat, k, nsim)),\n  for_loop = {\n    p_vals <- numeric(n)\n    \n    for (i in 1:n) {\n      simulations <- matrix(rnorm(k * nsim), nrow = nsim)\n      stat_sim_i <- rowMeans(simulations)\n      p_vals[i] <- (sum(stat_sim_i <= obs[i]) + 1) / (nsim + 1)\n    }\n  },\n  check = FALSE\n)\n\n# A tibble: 3 × 6\n  expression      min   median `itr/sec` mem_alloc `gc/sec`\n  <bch:expr> <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl>\n1 purrr         104ms    107ms      7.72    66.1MB    21.2 \n2 lapply        102ms    103ms      9.68    65.9MB     9.68\n3 for_loop      105ms    106ms      9.43    65.9MB    11.3"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#the-take-aways",
    "href": "getting-away-with-for-loops/index.html#the-take-aways",
    "title": "for loops in R",
    "section": "the take-aways",
    "text": "the take-aways\n\nfor loops aren’t worse than apply or purrr\nyou just might be worse at writing code with a for loop\nwriting a for loop doesn’t make you a bad programmer\nfor loops can help you think differently\nif you care about speed and memory safety, just use rust"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "YouTube Video Content",
    "section": "",
    "text": "Here you can find slides or scripts or other miscellaneous rendered output from my YouTube videos."
  },
  {
    "objectID": "simple-features/slides.html#simple-feature-standard",
    "href": "simple-features/slides.html#simple-feature-standard",
    "title": "simple features for dummies",
    "section": "Simple Feature Standard",
    "text": "Simple Feature Standard\n\nhere is a point\n\n\n“This standard enumerates the requirements for defining and representing geographic features in geographic information systems, applications and transmittable data formats.”"
  },
  {
    "objectID": "twitter-geohash/slides.html#other-title-page",
    "href": "twitter-geohash/slides.html#other-title-page",
    "title": "“The Algorithm”",
    "section": "other title page",
    "text": "other title page\n\nbullet\nbullet 2\n\n\nquote\n\n:::{.aside} this is an aside ::"
  },
  {
    "objectID": "twitter-geohash/slides.html#the-algorithm",
    "href": "twitter-geohash/slides.html#the-algorithm",
    "title": "GeoHash",
    "section": "“The algorithm”",
    "text": "“The algorithm”"
  },
  {
    "objectID": "twitter-geohash/slides.html#java-geoobject",
    "href": "twitter-geohash/slides.html#java-geoobject",
    "title": "“The Algorithm”",
    "section": "Java GeoObject",
    "text": "Java GeoObject\n\npublic static GeoObject createForIngester(double latitude, double longitude) {\n    return new GeoObject(\n        latitude,\n        longitude,\n        // store with highest level of accuracy: POINT_LEVEL\n        GeoAddressAccuracy.POINT_LEVEL.getCode(),\n        ThriftGeoLocationSource.GEOTAG);\n  }"
  },
  {
    "objectID": "twitter-geohash/slides.html#geoobject",
    "href": "twitter-geohash/slides.html#geoobject",
    "title": "GeoHash",
    "section": "GeoObject",
    "text": "GeoObject\n\npublic static GeoObject createForIngester(double latitude, double longitude) {\n    return new GeoObject(\n        latitude,\n        longitude,\n        // store with highest level of accuracy: POINT_LEVEL\n        GeoAddressAccuracy.POINT_LEVEL.getCode(),\n        ThriftGeoLocationSource.GEOTAG);\n  }\n\n\nThey have a “GeoObject” that they interact with\nhttps://github.com/twitter/the-algorithm/blob/main/src/java/com/twitter/search/common/relevance/entities/GeoObject.java\nuses GeoAddressAccuracy is from google maps java api\nhttps://geo-google.sourceforge.net/apidocs/geo/google/datamodel/GeoAddressAccuracy.html\nit is an enum defining how accurate somehting is ranges from 0-9 http://galhano.com/blog/?p=1259 0 being unknown\n9 being a specific location"
  },
  {
    "objectID": "twitter-geohash/script.html",
    "href": "twitter-geohash/script.html",
    "title": "script",
    "section": "",
    "text": "what is a geohash?\nmost simply put, a geohash a one dimension representation of two dimensional data\nThe form of geohashes that we use today were invented in 2008 by a fella named Gustavo Niemeyer.\nforms of the algorithm have existed as far back as 1966 created at GM\n\nhttps://en.wikipedia.org/wiki/Geohash\n\n\nso Gustavo Niemeyer unknowingly rediscovered the same thing only almost half a century later\nthere are tons of videos out there that describe how you can use a geohash and why you might want to use them, but there are very few that will help you understand them.\nas always, my goal here is to have you walk away understanding not just “knowing”\n\nthere’s an important distinction there\nwhen you know something you can tell me what that is but when you understand you can tell me why it is"
  },
  {
    "objectID": "twitter-geohash/script.html#building-the-intuition",
    "href": "twitter-geohash/script.html#building-the-intuition",
    "title": "script",
    "section": "Building the intuition",
    "text": "Building the intuition\n\nI’m going to be brief on the applications of geohashes, there are other videos for that\nan alpha numeric string representation of a coordinate\nin other words, using only numbers and letters we can represent an x and y value\n\nthis has big implications for databases querying that we can get into later\n\n\nthe geohash is a type of spatial index\ndivide the earth into equal portions along in a square grid\neach square is then subdivided into 32 more squares adding a level of precision\nthen that square can be further subdivided into another grid and so on until we do it 12 times\n\n12 is our maximum zoom level.\n\nThere is a technical reason for this having to do with the total number of bits that can be held by a number\n\n\n\n\nthe text based index represents a single grid which has a few handy properties\nthe text string can be up to 12 characters long. The shorter the string the larger the bounding box\na single letter is the largest area representing a five thousand by five thousand bounding box\n\nnot too helpful, so adding more levels of precision can help us get closer and closer\n\n\nwhen we reach the 12th level of precision we’re within centimeters of our initial location\n\n\n\nIndex Precision\nBounding Box\n\n\n\n1\n≤ 5,000km X 5,000 Km\n\n\n2\n≤ 1,250km X 625km\n\n\n3\n≤ 156km X 156km\n\n\n4\n≤ 39.1km X 19.5km\n\n\n5\n≤ 4.89km X 4.89km\n\n\n6\n≤ 1.22km X 0.61km\n\n\n7\n≤ 153m X 153m\n\n\n8\n≤ 38.2m X 19.1m\n\n\n9\n≤ 4.77m X 4.77m\n\n\n10\n≤ 1.19m X 0.596m\n\n\n11\n≤ 149mm X 149mm\n\n\n12\n≤ 37.2mm X 18.6mm\n\n\n\n\nresolution: https://docs.quadrant.io/quadrant-geohash-algorithm\nso for all intents and purposes we can locate places pretty exactly by using a single string\nanother useful property is that points within the same grids share the same prefix\nsay, you’re a tourist in Boston and you’ve just gotten off the train at Park Street station to explore the Boston Common and you want to find a nice coffee within a reasonable distance\n\n\npark_street &lt;- geohashTools::gh_encode(42.35675660592967, -71.06224330327713, 12)\n\ngeorge_howell &lt;- geohashTools::gh_encode(42.35486966028336, -71.06172831916592, 12)\n\nPark Street is located very precisely at the geohash drt2yyy1cxwy. I just so happen to know that there is a great coffee shop quite close by near Downtown Crossing called George Howell which has a geohash of drt2yyqqvxyy.\nIf we were to query all coffee shop locations that shared the same first 6 characters of our geohash George Howell would definitely show up.\nBeing able to truncate and filter on a geohash is far more efficient computationally than doing some traditional geographic approach such as taking a location and drawing a distance buffer, extracting every point in that buffer, then calculating a distance matrix.\nThat’s the gist of the geohash. And that’s about just as much as you need to know to minimally use geohashes. And that’s where most videos will stop. But that’s not enough because we don’t actually understand how we make a geohash. We’re going to spend the rest of this time walking through the geohash algorithm step by step in such a way thay you will be able to implement it yourself afterwards."
  },
  {
    "objectID": "twitter-geohash/script.html#precision",
    "href": "twitter-geohash/script.html#precision",
    "title": "script",
    "section": "Precision",
    "text": "Precision\nWe can only have up to 12 levels of precision. We take two numbers x and y and make them into binary representations of themselves\nWhen we work with decimal numbers they are typical what are called 64 bit floats This means that the number is represented by 64 different 1’s and 0s.\nMedium post that helped me get to the last part https://yatmanwong.medium.com/geohash-implementation-explained-2ed9627a61ff Factual blog post http://web.archive.org/web/20220620005549/https://www.factual.com/blog/how-geohashes-work/"
  },
  {
    "objectID": "twitter-geohash/script.html#z-order-curves",
    "href": "twitter-geohash/script.html#z-order-curves",
    "title": "script",
    "section": "Z-order curves",
    "text": "Z-order curves\nAt the root, a geohash is an implementation of a Z-order curve. It’s not necessary to understand Z-order curves in all of of their intricacies to truly understand geohashes but its worth diving into a bit. Shoot, I don’t even fully get them.\nIn the field of mathematical analysis there is an entire subfield dedicated to what are called “space filling curves.” In essence, they are a suite of algorithms that map 2 or 3 dimensional data into a single dimension. The Z-order curve is one of these space filling curves that is used to map 2 dimensional data into one dimension. The Z-order curve is used a bunch in big data technologies like Apache Spark, Cassandra, and Parquet to speed up search.\nBut there is no way I can do justice to explaining them so I really recommend that you watch this 3blue1brown video on them.\nIn geography we are always dealing in at least 2 dimensions: longitude and latitude. Using a Z-order curve we can encode longitude and latitude as a single value and that’s exactly what geohash does. But how?\nNow pay attention here. This is the only important part about a z-order curve I want you to care about.\nSay we have two numbers x and y. x is equal to 23 and y is equal to 42. From x and y we can create a third value, z (hence the name).\nZ-coordinates\nI’m about to make a leap here. Stay with me. Both of these numbers can be represented in binary as a combination of 0’s and 1s. In binary, 23 is 00010111 and 42 is 00101010. Each number is represented by 8 different 0s or 1s so they are 8 bit numbers—integers, to be exact. To get our z-coordinate all we need to do is “interleave” them.\nInterleaving sounds fancy but it’s super simple. I like to think of interleaving as weaving two leavings together by alternating one and another. Our z-coordinate is the sequence of bits that results from interleaving x and y.\nTo do this, we take the first value of x followed by the first value of y. Then we append the second value of x followed by the second value of y. We do this until we’ve exhausted all bits in x and y.\nThe result is a sequence of 16 bits 0000011001101110. Instead of having 8 bits, we now have 16 bits. Or a 16 bit integer. When converted from binary we get the value of 1646. This is an important detail, when we interleave two numbers we always double the number of bits used.\n\nthat interleaving of bits is all that a geohash really is.\n\nSo do we just convert our x and y values to binary and then interleave them? Well, no. Of course it’s not that simple. There are two ah hahs! The first has to do with the limitations of modern computing.\nBack to bits.\nIn R, and python, and most other systems, numbers that contain values after the decimal place are known as “double precision floating points” which is a really long way of saying they are 64 bit numbers. Again, that means that our numbers are represented by 64 sequential 1s or 0s.\nWhen we interleave two floats we will end up with a 128 bit number. That’s a bit more than most languages and tools are able to handle. Though that’s going to change in the next few years I bet.\nSince we can only handle 64 bits, we have to truncate x and y to 32 bits so that when we interleave the two we end up with 64 bits.\nThe geohash algorithm implements a pretty creative way of representing numbers as binary. The binary representation is actually a way of specifying the location on the numberline.\nStart with an X value. X can fall anywhere in the interval [-180, 180). We break that interval into two in the middle that is left inclusive. If the value falls in the left interval then it gets the value of 0. If it falls in the right interval, then it gets the value of 1. We can do this up to 32 times–remember, 32 bits!\nFor the value 19 it falls into the right interval so the first bit is the value of 1. Now we set our initial interval to [0, 180). We again partition it in the middle into 2 intervals. Since 19 falls in the left interval it gets the value of 0. So on an so forth until we do this 32 times!\nWe do the same thing for latitude but the initial bounds are different. They are [-90, 90). Again, repeat this 32 times.\nWe can look at what this might look like on the plane.\nWe start with a point that is in the upper left quadrant. We partition on our longitude. Since it’s in the right interval it gets the value 1. Now we partition it again. It’s in the left, it gets the value of 0. Again we partition. It is in the right. It gets the value of 1. One last time we partiion. It falls into the right interval so it gets the value of 1.\nOnce we have completed our encoding on longitude we can begin encoding our latitude. The point falls in the right interval which, when viewed on the plane, is actually the top one. And again, its in the top. So far we have the bits 1 and 1. Then again. This time it is on the bottom. It get’s a 0. The last time it is at the top and gets a 1.\nWhen we interleave the results of our encoding we get the value of 1 1 0 1 1 0 1 1."
  },
  {
    "objectID": "geohash/slides.html#section-2",
    "href": "geohash/slides.html#section-2",
    "title": "geohash",
    "section": "",
    "text": "github.com/niemeyer"
  },
  {
    "objectID": "geohash/slides.html#h3",
    "href": "geohash/slides.html#h3",
    "title": "geohash",
    "section": "H3",
    "text": "H3"
  },
  {
    "objectID": "geohash/slides.html#section-4",
    "href": "geohash/slides.html#section-4",
    "title": "geohash",
    "section": "",
    "text": "github.com/niemeyer"
  },
  {
    "objectID": "geohash/slides.html#shared-characters",
    "href": "geohash/slides.html#shared-characters",
    "title": "geohash",
    "section": "Shared Characters",
    "text": "Shared Characters\n\nsx8dfsymrrcc (23.321884838, 42.69793408)\nsx8dfsymrrc9 (23.321884800, 42.69793400)\nsx8dfsymrr11 (23.321884000, 42.69793000)\nsx8dfsymr1qn (23.321880000, 42.69790000)"
  },
  {
    "objectID": "twitter-geohash/script.html#notes",
    "href": "twitter-geohash/script.html#notes",
    "title": "script",
    "section": "notes",
    "text": "notes\nMedium post that helped me get to the last part https://yatmanwong.medium.com/geohash-implementation-explained-2ed9627a61ff Factual blog post http://web.archive.org/web/20220620005549/https://www.factual.com/blog/how-geohashes-work/"
  },
  {
    "objectID": "writing-functions-shorts/functions-intermediate.html#topics-to-cover",
    "href": "writing-functions-shorts/functions-intermediate.html#topics-to-cover",
    "title": "functions-intermediate",
    "section": "",
    "text": "s3 methods\nside-effects"
  },
  {
    "objectID": "twitter-geohash/notes.html",
    "href": "twitter-geohash/notes.html",
    "title": "notes",
    "section": "",
    "text": "Twitter’s Algorithm: they know where you are (understanding geohashes)\n\nsofware: Apache Lucene\n\ngeospatial indexing https://lucene.apache.org/core/9_5_0/spatial-extras/index.html\n\nuses spatial4j https://github.com/locationtech/spatial4j\nhttps://github.com/twitter/the-algorithm/blob/ec83d01dcaebf369444d75ed04b3625a0a645eb9/src/java/com/twitter/search/earlybird/queryparser/EarlybirdLuceneQueryVisitor.java#L22\n\n\n\ntwitter finally released “The Algorithm”\nit at least appears to be some form of twitter that’s been used\nthe repo has garnered a ton of interested\nthe goal of the release was to add transparency into how twitter recommends tweets and how tweets find their way onto your timeline\ni’m not big into ML. I’m big into spatial. So I wanted to see how twitter is using geospatial data in their algorithms\nOverall, twitter just really really wants to know where you are and they go to some lengths to get a good idea of where that is.\nthey want your location for getting trending topics in an area, for finding people to follow based on your location, for searching, and even for determing what type of content you should be allowed to see\nbut underpinning it all, is the use of GeoHashes to record location data rather than explicit point coordinates\nso, i’m going to use this as an opportunity to learn a bit more about geohashes.\nThe form of geohashes that we use today were invented in 2008 by a fella named Gustavo Niemeyer. Though forms of the algorithm have existed as far back as 1966\n\nhttps://en.wikipedia.org/wiki/Geohash\n\ntwitter collects your location and then “scrubs” your location from your tweets\nbut this happens only after some time lag recorded in miliseconds. i wonder if this means that tweets shouldn’t show up in geolocated queries do if they haven’t been scrubbed in that brief time window\nthey keep track of the latest tweet id\n\nif the incoming tweet id is greater than the tracked one the location is “scrubbed”\n\nthere is a time lag that is computed between when a tweet is ingested and when it is scrubbed\n\nhttps://github.com/twitter/the-algorithm/blob/ec83d01dcaebf369444d75ed04b3625a0a645eb9/src/java/com/twitter/search/earlybird/common/userupdates/UserScrubGeoMap.java#L73\nfile: https://github.com/twitter/the-algorithm/blob/ec83d01dcaebf369444d75ed04b3625a0a645eb9/src/java/com/twitter/search/earlybird/common/userupdates/UserScrubGeoMap.java#L10\n\ntwitter will also extract your locaiton from your IP address\n\nthey fetch a geohash and then truncate it to 4 letters meaning its an approx 20x20 grid they’re looking at.\n\nhttps://docs.quadrant.io/quadrant-geohash-algorithm\n\nhttps://github.com/twitter/the-algorithm/blob/ec83d01dcaebf369444d75ed04b3625a0a645eb9/follow-recommendations-service/common/src/main/scala/com/twitter/follow_recommendations/common/clients/geoduck/ReverseGeocodeClient.scala#L4\nat minimum what they want is your country code\n\ntwitter really wants to know where you are\n\ni dont fully understand how this works\nit looks like they’re going to extract the location of your request\nhttps://github.com/twitter/the-algorithm/blob/ec83d01dcaebf369444d75ed04b3625a0a645eb9/follow-recommendations-service/common/src/main/scala/com/twitter/follow_recommendations/common/clients/geoduck/LocationServiceClient.scala\n\nusing POI type data:\n\nhttps://github.com/twitter/the-algorithm/blob/ec83d01dcaebf369444d75ed04b3625a0a645eb9/src/java/com/twitter/search/earlybird/queryparser/EarlybirdLuceneQueryVisitor.java#L162\n\nlocation appears to mainly be used for recommendations and querying\nfollower recommendations\ngeoduck (geolocating service)\nblack listed country codes\n\nhttps://github.com/twitter/the-algorithm/blob/ec83d01dcaebf369444d75ed04b3625a0a645eb9/visibilitylib/src/main/scala/com/twitter/visibility/builder/tweets/TweetMediaMetadataFeatures.scala#L11\n\nmedia is restricted or permitted based on location\n\nhttps://github.com/twitter/the-algorithm/blob/ec83d01dcaebf369444d75ed04b3625a0a645eb9/visibilitylib/src/main/scala/com/twitter/visibility/builder/tweets/TweetMediaMetadataFeatures.scala#L11"
  },
  {
    "objectID": "geohash/slides.html#section-9",
    "href": "geohash/slides.html#section-9",
    "title": "geohash",
    "section": "",
    "text": "res |&gt;\n  mutate(shared_chars = count_seq_chars_to_ref(geohash, \"drt2yyy1cxwy\")) |&gt; \n    select(name, geohash, shared_chars) |&gt; \n    arrange(-shared_chars)\n\n# A tibble: 60 × 3\n   name                           geohash      shared_chars\n   &lt;chr&gt;                          &lt;chr&gt;               &lt;int&gt;\n 1 Caffè Nero                     drt2yynp0vqs            6\n 2 Starbucks                      drt2yywg71qc            6\n 3 George Howell Coffee           drt2yyqt0qst            6\n 4 Caffè Nero                     drt2yyx9mj6t            6\n 5 Starbucks                      drt2yyrmzf78            6\n 6 Starbucks                      drt2yy8zuexj            6\n 7 Thinking Cup                   drt2yykfq0r5            6\n 8 Caffè Nero                     drt2yzpxth1y            5\n 9 Mod Espresso                   drt2yu4exnt2            5\n10 Jaho Coffee Roaster & Wine Bar drt2yvvsf94j            5\n# … with 50 more rows"
  },
  {
    "objectID": "geohash/slides.html#section-10",
    "href": "geohash/slides.html#section-10",
    "title": "geohash",
    "section": "",
    "text": "res |&gt;\n  mutate(shared_chars = count_seq_chars_to_ref(geohash, \"drt2yyy1cxwy\")) |&gt; \n  select(name, geohash, shared_chars) |&gt; \n  arrange(-shared_chars)\n\n\n\n\n# A tibble: 60 × 3\n   name                           geohash      shared_chars\n   &lt;chr&gt;                          &lt;chr&gt;               &lt;int&gt;\n 1 Caffè Nero                     drt2yyx9mj6t            6\n 2 Starbucks                      drt2yywg71qc            6\n 3 George Howell Coffee           drt2yyqt0qst            6\n 4 Caffè Nero                     drt2yynp0vqs            6\n 5 Starbucks                      drt2yyrmzf78            6\n 6 Starbucks                      drt2yy8zuexj            6\n 7 Mod Espresso                   drt2yu4exnt2            5\n 8 Caffè Nero                     drt2yzpxth1y            5\n 9 Jaho Coffee Roaster & Wine Bar drt2yvvsf94j            5\n10 APM Coffee                     drt2yvxe1j90            5\n# ℹ 50 more rows"
  },
  {
    "objectID": "geohash/slides.html#encoding-longitude",
    "href": "geohash/slides.html#encoding-longitude",
    "title": "geohash",
    "section": "Encoding longitude",
    "text": "Encoding longitude\n\nx = 19\ninterval: [-180, 180)\npartition: [-180, 0), [0, 180)\nLeft = 0\nRight = 1"
  },
  {
    "objectID": "geohash/slides.html#encoding-longitude-1",
    "href": "geohash/slides.html#encoding-longitude-1",
    "title": "geohash",
    "section": "Encoding longitude",
    "text": "Encoding longitude\n\nx = 19\nnew interval [0, 180)\npartition: [0, 90), [90, 180)\nBit = 0"
  },
  {
    "objectID": "geohash/slides.html#encoding-latitude",
    "href": "geohash/slides.html#encoding-latitude",
    "title": "geohash",
    "section": "Encoding latitude",
    "text": "Encoding latitude\n\ny = 47\ninterval: [-90, 90)\npartition: [-90, 0), [0, 90)\nBit = 1"
  },
  {
    "objectID": "geohash/slides.html#section-28",
    "href": "geohash/slides.html#section-28",
    "title": "geohash",
    "section": "",
    "text": "0, 1, 2, 3, 4, 5, 6, 7,\n8, 9, b, c, d, e, f, g,\nh, j, k, m, n, p, q, r,\ns, t, u, v, w, x, y, z,"
  },
  {
    "objectID": "twitter-geohash/script.html#converting-from-binary-to-geohash",
    "href": "twitter-geohash/script.html#converting-from-binary-to-geohash",
    "title": "script",
    "section": "Converting from binary to geohash",
    "text": "Converting from binary to geohash\nI told you that a geohash is just a z-coordinate. But now we have a binary z-coordinate and it looks nothing like the geohashes I showed you earlier. Well, there’s one last step that we have to take to go from our binary z-coordinate to a geohash.\nGeohashes are “base32” encoded. What does that mean?\nThe number system that we use and are familiar with is called base 10. That’s because we have 10 unique digits that we use to represent values 0-9.\nBinary is a base 2 number system because it uses the two digits 0 and 1 to represent values.\nThe n refers to how many character are in the alphabet being used to represent values.\nSo base 32 means that there are 32 digits that are used to represent values. These are a combination of letters and numbers. Typically, these are the letters A through Z and the numbers 2 through 7.\nThough the Geohash algorithm has it’s own base 32 alphabet called the “geohash alphabet” (wiki source). It contains the numbers 0 through 9 and the entire alphabet except a, i, l, and o because they look similar to numbers (except a)—they just needed 1 fewer character.\nTo utilze the alphabet we need to define a lookup table that has our characters by position."
  },
  {
    "objectID": "geohash/slides.html",
    "href": "geohash/slides.html",
    "title": "geohash",
    "section": "",
    "text": "library(geohashTools)\nsofia &lt;- gh_encode(42.69793408217603, 23.321884838596265, 12)\n\nknitr::opts_chunk$set(eval = FALSE)"
  },
  {
    "objectID": "geohash/slides.html#geometry-object",
    "href": "geohash/slides.html#geometry-object",
    "title": "geohash",
    "section": "Geometry Object",
    "text": "Geometry Object"
  },
  {
    "objectID": "geohash/slides.html#always-collects-your-location",
    "href": "geohash/slides.html#always-collects-your-location",
    "title": "geohash",
    "section": "Always collects your location",
    "text": "Always collects your location"
  },
  {
    "objectID": "geohash/slides.html#geo-blacklist",
    "href": "geohash/slides.html#geo-blacklist",
    "title": "geohash",
    "section": "Geo blacklist",
    "text": "Geo blacklist"
  },
  {
    "objectID": "geohash/slides.html#section-1",
    "href": "geohash/slides.html#section-1",
    "title": "geohash",
    "section": "",
    "text": "Index Precision\nBounding Box\n\n\n\n\n1\n≤ 5,000km X 5,000 Km\n\n\n2\n≤ 1,250km X 625km\n\n\n3\n≤ 156km X 156km\n\n\n4\n≤ 39.1km X 19.5km\n\n\n5\n≤ 4.89km X 4.89km\n\n\n6\n≤ 1.22km X 0.61km\n\n\n7\n≤ 153m X 153m\n\n\n8\n≤ 38.2m X 19.1m\n\n\n9\n≤ 4.77m X 4.77m\n\n\n10\n≤ 1.19m X 0.596m\n\n\n11\n≤ 149mm X 149mm\n\n\n12\n≤ 37.2mm X 18.6mm"
  },
  {
    "objectID": "geohash/slides.html#shared-characters-1",
    "href": "geohash/slides.html#shared-characters-1",
    "title": "geohash",
    "section": "Shared Characters",
    "text": "Shared Characters\n\nsx8dfsymrrcc (reference point)\nsx8dfsymrrc9 (0.13 meters away)\nsx8dfsymrr11 (0.62 meters away)\nsx8dfsymr1qn (5.19 meters away)\nsx8dfsy2j3dm (141.8 meters away)"
  },
  {
    "objectID": "geohash/slides.html#section-11",
    "href": "geohash/slides.html#section-11",
    "title": "geohash",
    "section": "",
    "text": "res |&gt; \n  mutate(\n      geohash = gh_encode(lat, long, 12),\n      shared_chars = count_seq_chars_to_ref(geohash, park_street)\n  ) |&gt; \n  filter(shared_chars &gt;= 6) |&gt;\n  select(name, geohash, shared_chars)\n\n\n\n\n# A tibble: 7 × 3\n  name                 geohash      shared_chars\n  &lt;chr&gt;                &lt;chr&gt;               &lt;int&gt;\n1 Caffè Nero           drt2yyx9mj6t            6\n2 George Howell Coffee drt2yyqwe8r7            6\n3 Caffè Nero           drt2yynp0vqs            6\n4 Thinking Cup         drt2yykfq0r5            6\n5 Starbucks            drt2yywg71qc            6\n6 Starbucks            drt2yyrmzf78            6\n7 Starbucks            drt2yy8zuexj            6"
  },
  {
    "objectID": "geohash/slides.html#section-5",
    "href": "geohash/slides.html#section-5",
    "title": "geohash",
    "section": "",
    "text": "github.com/niemeyer"
  },
  {
    "objectID": "geohash/slides.html#section-12",
    "href": "geohash/slides.html#section-12",
    "title": "geohash",
    "section": "",
    "text": "res |&gt;\n  mutate(shared_chars = count_seq_chars_to_ref(geohash, \"drt2yyy1cxwy\")) |&gt; \n  select(name, geohash, shared_chars) |&gt; \n  arrange(-shared_chars)\n\n\n\n\n# A tibble: 60 × 3\n   name                           geohash      shared_chars\n   &lt;chr&gt;                          &lt;chr&gt;               &lt;int&gt;\n 1 Starbucks                      drt2yywg71qc            6\n 2 Caffè Nero                     drt2yyx9mj6t            6\n 3 George Howell Coffee           drt2yyqt0qst            6\n 4 Caffè Nero                     drt2yynp0vqs            6\n 5 Starbucks                      drt2yyrmzf78            6\n 6 Starbucks                      drt2yy8zuexj            6\n 7 Caffè Nero                     drt2yzpxth1y            5\n 8 Mod Espresso                   drt2yu4exnt2            5\n 9 Jaho Coffee Roaster & Wine Bar drt2yvvsf94j            5\n10 APM Coffee                     drt2yvxe1j90            5\n# ℹ 50 more rows"
  },
  {
    "objectID": "geohash/slides.html#section-40",
    "href": "geohash/slides.html#section-40",
    "title": "geohash",
    "section": "",
    "text": "github.com/niemeyer"
  },
  {
    "objectID": "geohash/slides.html#section-14",
    "href": "geohash/slides.html#section-14",
    "title": "geohash",
    "section": "",
    "text": "github.com/niemeyer"
  },
  {
    "objectID": "geohash/slides.html#interleaving-1",
    "href": "geohash/slides.html#interleaving-1",
    "title": "geohash",
    "section": "Interleaving",
    "text": "Interleaving\n\nx: 0_0_0_1_0_1_1_1_\ny: _0_0_1_0_1_0_1_0\nz: ??"
  },
  {
    "objectID": "geohash/slides.html#interleaving-2",
    "href": "geohash/slides.html#interleaving-2",
    "title": "geohash",
    "section": "Interleaving",
    "text": "Interleaving\n\nx: 0_0_0_1_0_1_1_1_\ny: _0_0_1_0_1_0_1_0\nz: 0000011001101110"
  },
  {
    "objectID": "geohash/slides.html#section-56",
    "href": "geohash/slides.html#section-56",
    "title": "geohash",
    "section": "",
    "text": "1   0   0   1   1\n  0   1   1   0   0\n1 0 0 1 0 1 1 0 1 0"
  },
  {
    "objectID": "geohash/slides.html#encode-x-1",
    "href": "geohash/slides.html#encode-x-1",
    "title": "geohash",
    "section": "Encode X",
    "text": "Encode X\n\nfor (i in 1:32) {\n}"
  },
  {
    "objectID": "geohash/slides.html#encode-x-2",
    "href": "geohash/slides.html#encode-x-2",
    "title": "geohash",
    "section": "Encode X",
    "text": "Encode X\n\nfor (i in 1:32) {\n  if (x &gt;= xvals[2]) { # upper interval\n  }\n}"
  },
  {
    "objectID": "geohash/slides.html#encode-x-3",
    "href": "geohash/slides.html#encode-x-3",
    "title": "geohash",
    "section": "Encode X",
    "text": "Encode X\n\nfor (i in 1:32) {\n  if (x &gt;= xvals[2]) {\n    xbin[i] &lt;- 1L\n  }\n}"
  },
  {
    "objectID": "geohash/slides.html#encode-x-4",
    "href": "geohash/slides.html#encode-x-4",
    "title": "geohash",
    "section": "Encode X",
    "text": "Encode X\n\nfor (i in 1:32) {\n  if (x &gt;= xvals[2]) {\n    xbin[i] &lt;- 1L\n    xvals[1] &lt;- xvals[2] # new lower bound\n  }\n}"
  },
  {
    "objectID": "geohash/slides.html#encode-x-5",
    "href": "geohash/slides.html#encode-x-5",
    "title": "geohash",
    "section": "Encode X",
    "text": "Encode X\n\nfor (i in 1:32) {\n  if (x &gt;= xvals[2]) {\n    xbin[i] &lt;- 1L\n    xvals[1] &lt;- xvals[2] # new lower bound\n  } else {\n    xbin[i] &lt;- 0L\n    xvals[3] &lt;- xvals[2] # new upper bound\n  }\n}"
  },
  {
    "objectID": "geohash/slides.html#encode-x-6",
    "href": "geohash/slides.html#encode-x-6",
    "title": "geohash",
    "section": "Encode X",
    "text": "Encode X\n\nfor (i in 1:32) {\n  if (x &gt;= xvals[2]) {\n    xbin[i] &lt;- 1L\n    xvals[1] &lt;- xvals[2] # new lower bound\n  } else {\n    xbin[i] &lt;- 0L\n    xvals[3] &lt;- xvals[2] # new upper bound\n  }\n  xvals[2] &lt;- (xvals[1] + xvals[3]) / 2 # new mid point\n}"
  },
  {
    "objectID": "geohash/slides.html#encode-x-7",
    "href": "geohash/slides.html#encode-x-7",
    "title": "geohash",
    "section": "Encode X",
    "text": "Encode X\n\nfor (i in 1:32) {\n  if (x &gt;= xvals[2]) {\n    xbin[i] &lt;- 1L\n    xvals[1] &lt;- xvals[2] # new lower bound\n  } else {\n    xbin[i] &lt;- 0L\n    xvals[3] &lt;- xvals[2] # new upper bound\n  }\n  xvals[2] &lt;- (xvals[1] + xvals[3]) / 2 # new mid point\n}\n\nxbin\n\n [1] 1 0 0 0 1 1 0 1 1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 0 0 0 1 0 1 1 0 1"
  },
  {
    "objectID": "geohash/slides.html#encode-y",
    "href": "geohash/slides.html#encode-y",
    "title": "geohash",
    "section": "Encode Y",
    "text": "Encode Y\n\nfor (i in 1:32) {\n  if (y &gt;= yvals[2]) {\n    ybin[i] &lt;- 1L\n    yvals[1] &lt;- yvals[2]\n  } else {\n    ybin[i] &lt;- 0L\n    yvals[3] &lt;- yvals[2]\n  }\n  yvals[2] &lt;- (yvals[1] + yvals[3]) / 2\n}\n\nybin\n\n [1] 1 1 0 0 0 0 1 0 1 1 0 1 1 0 0 0 0 0 1 0 1 1 0 1 1 0 0 0 0 0 1 0"
  },
  {
    "objectID": "geohash/slides.html#bits-to-int-1",
    "href": "geohash/slides.html#bits-to-int-1",
    "title": "geohash",
    "section": "Bits to int",
    "text": "Bits to int\n\nfive_bits &lt;- bits[[1]]"
  },
  {
    "objectID": "geohash/slides.html#bits-to-int-2",
    "href": "geohash/slides.html#bits-to-int-2",
    "title": "geohash",
    "section": "Bits to int",
    "text": "Bits to int\n\nfive_bits &lt;- bits[[1]]\nposition &lt;- paste(five_bits, collapse = \"\")\nposition\n\n[1] \"11010\""
  },
  {
    "objectID": "geohash/slides.html#bits-to-int-3",
    "href": "geohash/slides.html#bits-to-int-3",
    "title": "geohash",
    "section": "Bits to int",
    "text": "Bits to int\n\nfive_bits &lt;- bits[[1]]\nposition &lt;- paste(five_bits, collapse = \"\")\nb32_pos &lt;- strtoi(position, base = 2)\nb32_pos\n\n[1] 26"
  },
  {
    "objectID": "geohash/slides.html#bits-to-int-4",
    "href": "geohash/slides.html#bits-to-int-4",
    "title": "geohash",
    "section": "Bits to int",
    "text": "Bits to int\n\nfive_bits &lt;- bits[[1]]\nposition &lt;- paste(five_bits, collapse = \"\")\nb32_pos &lt;- strtoi(position, base = 2)\n\nbit_lu[b32_pos + 1]\n\n[1] \"u\""
  },
  {
    "objectID": "geohash/slides.html#base-32-conversion",
    "href": "geohash/slides.html#base-32-conversion",
    "title": "geohash",
    "section": "Base 32 conversion",
    "text": "Base 32 conversion\n\nbase32_conversion &lt;- function(x) {\n  bit_lu &lt;- c('0', '1', '2', '3', '4', '5', '6', '7',\n              '8', '9', 'b', 'c', 'd', 'e', 'f', 'g',\n              'h', 'j', 'k', 'm', 'n', 'p', 'q', 'r',\n              's', 't', 'u', 'v', 'w', 'x', 'y', 'z')\n\n  # add 1 b/c R is 1 base indexed\n  position &lt;- strtoi(paste(x, collapse = \"\"), 2) + 1\n  bit_lu[position]\n}"
  },
  {
    "objectID": "geohash/slides.html#encode-all-1",
    "href": "geohash/slides.html#encode-all-1",
    "title": "geohash",
    "section": "Encode all",
    "text": "Encode all\n\nindexes &lt;- purrr::map_chr(bits, base32_conversion)\n\n\n\n\n [1] \"u\" \"2\" \"m\" \"e\" \"2\" \"k\" \"5\" \"6\" \"u\" \"5\" \"4\" \"b\""
  },
  {
    "objectID": "geohash/slides.html#encode-all-2",
    "href": "geohash/slides.html#encode-all-2",
    "title": "geohash",
    "section": "Encode all",
    "text": "Encode all\n\nindexes &lt;- purrr::map_chr(bits, base32_conversion)\ngeohash &lt;- paste(indexes, collapse = \"\")\n\n\n\n\n[1] \"u2me2k56u54b\""
  },
  {
    "objectID": "geohash/script.html",
    "href": "geohash/script.html",
    "title": "script",
    "section": "",
    "text": "When twitter finally released “The Algorithm” I, like many others programmers, poked around a the code base looking for things that were interesting. I’m not huge into machine learning but I am big into spatial data / GIS. So I wanted to know how Twitter is using location data and in what ways they’re using it. What I took away from my hours of trolling is that Twitter just really wants to know where you are. Twitter goes to extreme lengths to find where you are and record that information.\nThey use your location to know if you’re in a black listed country or if certain type of media should be restricted based to you, and they just want to recommend people to you who are near by. Among all of these different tasks one thing is common: the way that they store your location. They do so by using something called a Geohash."
  },
  {
    "objectID": "geohash/script.html#intro",
    "href": "geohash/script.html#intro",
    "title": "script",
    "section": "",
    "text": "When twitter finally released “The Algorithm” I, like many others programmers, poked around a the code base looking for things that were interesting. I’m not huge into machine learning but I am big into spatial data / GIS. So I wanted to know how Twitter is using location data and in what ways they’re using it. What I took away from my hours of trolling is that Twitter just really wants to know where you are. Twitter goes to extreme lengths to find where you are and record that information.\nThey use your location to know if you’re in a black listed country or if certain type of media should be restricted based to you, and they just want to recommend people to you who are near by. Among all of these different tasks one thing is common: the way that they store your location. They do so by using something called a Geohash."
  },
  {
    "objectID": "geohash/script.html#geohash-definition",
    "href": "geohash/script.html#geohash-definition",
    "title": "script",
    "section": "Geohash definition",
    "text": "Geohash definition\nBefore we define what a geohash is, let’s take a look at them. I’m sure we can intuit their usability just by exploration. Geohashes work by dividing the world into 32 equally sized squares. Each square is represented by a different character. Then each of these squares, are divided again into 32 rectangles each with a number or letter. So when we select another rectangle we now have two characters. And again, and again, adding a character each time. Notice how we can see the selected characters being recorded up at the top here. Each time we select another rectangle the number of characters grows and the size of the box shrinks. This happens up to 12 times.\n\n\nThat’s right, geohashes pretend the earth is flat. One point for the flat earthers. The earth is actually round and that’s why S2 is better.\nThe characters that we have recorded correspond to a rectangle somewhere on the earth. The number of characters refers to the precision of the geohash. Said a different way, the more characters we have in our geohash the more accurate the measurement.\n\n\nIndex Precision\nBounding Box\n\n\n\n1\n≤ 5,000km X 5,000 Km\n\n\n2\n≤ 1,250km X 625km\n\n\n3\n≤ 156km X 156km\n\n\n4\n≤ 39.1km X 19.5km\n\n\n5\n≤ 4.89km X 4.89km\n\n\n6\n≤ 1.22km X 0.61km\n\n\n7\n≤ 153m X 153m\n\n\n8\n≤ 38.2m X 19.1m\n\n\n9\n≤ 4.77m X 4.77m\n\n\n10\n≤ 1.19m X 0.596m\n\n\n11\n≤ 149mm X 149mm\n\n\n12\n≤ 37.2mm X 18.6mm\n\n\n\n\n\nresolution: https://docs.quadrant.io/quadrant-geohash-algorithm\nWhen we get down to 12 character we are working with a rectangle that is literally millimeters wide. That’s precise enough for just about every single use case I can think of. There is a technical reason why geohashes are limited to 12 characters that we will get into later.\nSpatial Indexing\nSay we have a longitude and latitude. This coordinate represents some place on earth. We can then encode that location into a string of numbers and letters up to 12 characters long. These twelve character characters? That is all that a geohash is. It is a way to represent a region on the earth using a single value.\nSpatial indexes are a collection of algorithms or tools that make it easier to represent locations on the earth without having to use coordinates. You might be familiar with a few of them such as uber’s H3 Hexagonal spatial index or Google’s S2 index for spherical geometry. If you’re an R user and you’ve used the package {sf} you’ve already used S2 whether you know it or not.\nGeohash properties\nGeohashes have a number of properties that make them rather handy to work with. The most important of which is that the closer to points are, they will have an increasing number of shared characters in their geohash. The number of shared letters from the beginning of the geohash to the end can give you a really good estimate of proximity!\nThis is super useful particularly for databases. Databases are good at querying strings. They are not so good at calculating pairwise distance matrix for every single location in your database–imagine how many values that would be! If you wanted to find locations within some distance of a point you it would be far more efficient to search based on the geohash. Based on the approximate distance you can truncate geohashes to say, 6 characters, to find locations within 3/4ths of a mile. Any locations that share the first 6 characters of a geohash will be, at most, 0.75 miles away (as the crow flies, that is)."
  },
  {
    "objectID": "geohash/script.html#boston-example",
    "href": "geohash/script.html#boston-example",
    "title": "script",
    "section": "Boston example",
    "text": "Boston example\nLet’s look at an example. You’re a tourist in Boston and you’ve just gotten off the train at Park Street station and you want a coffee. You don’t want a Dunkin’ or a coffee from the weird McDonalds across the street. You want to spend $6 dollars on a well made espresso. I just so happen to know that there is a phenomenal cafe called George Howell a stones throw away. Let’s look at some code that could do this search and ranking for us.\nFirst, lets take a look at the geohash 6 around Park Street. Anything that falls into this grid would be a reasonable location to return. Now, let’s look at some code.\nIf you don’t know R, that’s okay. The code is straight forward and I want you to take away the use case not the code.\nFirst, we store the location of Park Street station and then encode it as a geohash.\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(geohashTools)\nlibrary(populartimes)\n\n# store park street coordinates\npark_street_loc &lt;- c(42.35675660592967, -71.06224330327713)\n\n# encode the geohash\npark_street &lt;- gh_encode(park_street_loc[1], park_street_loc[2], 12)\npark_street\n\n[1] \"drt2yyy1cxwy\"\n\n\nNext, using the location we can query Google Maps looking for cafes using the Park Street coordinates.\n\nres &lt;- text_search(\n  location = park_street_loc,\n  query = \"espresso\",\n  type = \"cafe\"\n)\n\nres[c(\"name\", \"rating\", \"price_level\")]\n\n# A tibble: 60 × 3\n   name                 rating price_level\n   &lt;chr&gt;                 &lt;dbl&gt;       &lt;int&gt;\n 1 Espresso Love           4.4           1\n 2 Ogawa Coffee            4.6           2\n 3 Render Coffee           4.4           1\n 4 Kohi Coffee Company     4.7           1\n 5 Starbucks               3.9           2\n 6 Caffè Nero              4.2           2\n 7 George Howell Coffee    4.6           2\n 8 Caffè Nero              4.4           2\n 9 Starbucks               3.6           2\n10 Caffè Nero              4.1           2\n# ℹ 50 more rows\n\n\nNow we need to validate how close each of these places are to Park Street. We could of course do this by calculating the distance between each coordinate and Park Street. But that is overall computationally intensive. We can instead limit our result based on the number of shared characters in the geohash.\nWith the help of the extendr discord we have a function that can count the number of sequential characters. There’s a good blog post on this topic here.\nfn count_seq_chars_to_ref(x: Strings, y: &str) -&gt; Integers {\n  x.iter()\n        .map(|xi|\n            xi.chars().zip(y.chars())\n            .take_while(|(a, b)| a == b)\n            .count()\n        ).map(|x|(x as i32).into())\n        .collect()\n  }\nUsing this function we can count the number of shared characters for each location and remove any places that don’t have at least 6 shared characters.\nIn this code chunk we first create a column to store the geohash. Then we count the number of shared characters to the Park Street geohash, filter() to 6 or more shared characters, and then print the data nicely.\n\nres |&gt; \n  mutate(\n      geohash = gh_encode(lat, long, 12),\n      shared_chars = count_seq_chars_to_ref(geohash, park_street)\n  ) |&gt; \n  filter(shared_chars &gt;= 6) |&gt;\n  select(name, geohash, shared_chars)\n\n# A tibble: 6 × 3\n  name                 geohash      shared_chars\n  &lt;chr&gt;                &lt;chr&gt;               &lt;int&gt;\n1 Starbucks            drt2yywg71qc            6\n2 Caffè Nero           drt2yyx9mj6t            6\n3 George Howell Coffee drt2yyqt0qst            6\n4 Caffè Nero           drt2yynp0vqs            6\n5 Starbucks            drt2yyrmzf78            6\n6 Starbucks            drt2yy8zuexj            6\n\n\nOnce limited, the option is clear as day. The closest and best coffee shop is George Howell. I hope you appreciate through this simple example how power it storing a location as a string can be.\nThis is unfortunately about the most that you’ll take away from most videos on geohashes. But we’re just getting started. To me this is insufficient. Sure, you may now know how to use a geohash. My goal here is to have you walk away understanding how geohashes work. That’s an important distinction.\nSo if you’re ready, we’re going to go into a very deep dive. We’re going to spend the rest of this time walking through the geohash algorithm step by step in such a way thay you will be able to implement it yourself afterwards."
  },
  {
    "objectID": "geohash/script.html#history",
    "href": "geohash/script.html#history",
    "title": "script",
    "section": "History",
    "text": "History\nThe algorithm that we just used was reinvented in 2008 by a fella named Gustavo Niemeyer. I say reinvented because back in the 60s another fella name G.M. Morton from IBM wrote this paper “A Computer Oriented Geodetic Database and a New Technique in File Sequencing.”\n\n\n\n\nWhich looks quite a lot like a geohash with its recursive gridding.\n\n\n\n\nWhat is funny is that Gustavo Niemeyer claims to have not known about this prior work–which I do not doubt. It is not the first time in history that the same thing has been discovered by two separate people in tow separate points in time. Somewhat like how we now have Liebnitz and Newton notation for derivatives.\nUnfortunatey for GM Morton, it is Gustavo’s version that we all use.\n\nhttps://en.wikipedia.org/wiki/Geohash"
  },
  {
    "objectID": "geohash/script.html#z-order-curves",
    "href": "geohash/script.html#z-order-curves",
    "title": "script",
    "section": "Z-order curves",
    "text": "Z-order curves\nAt the root, a geohash is an implementation of a Z-order curve. It’s not necessary to understand Z-order curves in all of of their intricacies to truly understand geohashes but its worth diving into a bit. Shoot, I don’t even fully get them.\nIn the field of mathematical analysis there is an entire subfield dedicated to what are called “space filling curves.” In essence, they are a suite of algorithms that map 2 or 3 dimensional data into a single dimension. The Z-order curve is one of these space filling curves that is used to map 2 dimensional data into one dimension. The Z-order curve is used a bunch in big data technologies like Apache Spark, Cassandra, and Parquet to speed up search.\nBut there is no way I can do justice to explaining them so I really recommend that you watch this 3blue1brown video on them.\nIn geography we are always dealing in at least 2 dimensions: longitude and latitude. Using a Z-order curve we can encode longitude and latitude as a single value and that’s exactly what geohash does. But how?\nNow pay attention here. This is the only important part about a z-order curve I want you to care about. We are going to create a z-coordinate. A z-coordinate maps an x and a y dimension to a single z dimension–this z-coordinate is what a geohash is.\nSay we have two numbers x and y. x is equal to 23 and y is equal to 42. From x and y we can create a third value, z (hence the name).\nZ-coordinates\nI’m about to make a leap here. Stay with me. Both of these numbers can be represented in binary as a combination of 0’s and 1s. In binary, 23 is 00010111 and 42 is 00101010. Each number is represented by 8 different 0s or 1s so they are 8 bit numbers—integers, to be exact. To get our z-coordinate all we need to do is “interleave” them.\nInterleaving sounds fancy but it’s super simple. I like to think of interleaving as weaving two leavings together by alternating one and another. Our z-coordinate is the sequence of bits that results from interleaving x and y.\nTo do this, we take the first value of x followed by the first value of y. Then we append the second value of x followed by the second value of y. We do this until we’ve exhausted all bits in x and y.\nThe result is a sequence of 16 bits 0000011001101110. Instead of having 8 bits, we now have 16 bits. Or a 16 bit integer. This is an important detail, when we interleave two numbers we always double the number of bits used.\n\nthat interleaving of bits is all that a geohash really is.\n\nSo do we just convert our x and y values to binary and then interleave them? Well, no. Of course it’s not that simple. There are two ah hahs! The first has to do with the limitations of modern computing.\nBack to bits.\nIn R, and python, and most other systems, numbers that contain values after the decimal place are known as “double precision floating points” which is a really long way of saying they are 64 bit numbers. Again, that means that our numbers are represented by 64 sequential 1s or 0s.\nWhen we interleave two floats we will end up with a 128 bit number. That’s a bit more than most languages and tools are able to handle. Though that’s going to change in the next few years I bet.\nSince we can only handle 64 bits, we have to truncate x and y to 32 bits so that when we interleave the two we end up with 64 bits.\nThe geohash algorithm implements a pretty creative way of representing numbers as binary. The binary representation is actually a way of specifying the location on the number line.\nStart with an X value. X can fall anywhere in the interval [-180, 180). We break that interval into two in the middle that is left inclusive. If the value falls in the left interval then it gets the value of 0. If it falls in the right interval, then it gets the value of 1. We can do this up to 32 times–remember, 32 bits!\nFor the value 19 it falls into the right interval so the first bit is the value of 1. Now we set our initial interval to [0, 180). We again partition it in the middle into 2 intervals. Since 19 falls in the left interval it gets the value of 0. So on an so forth until we do this 32 times!\nWe do the same thing for latitude but the initial bounds are different. They are [-90, 90). Again, repeat this 32 times.\nWe can look at what this might look like on the plane.\nWe start with a point that is in the upper left quadrant. We partition on our longitude. Since it’s in the right interval it gets the value 1. Now we partition it again. It’s in the left, it gets the value of 0. Again we partition. It is in the right. It gets the value of 1. One last time we partiion. It falls into the right interval so it gets the value of 1.\nOnce we have completed our encoding on longitude we can begin encoding our latitude. The point falls in the right interval which, when viewed on the plane, is actually the top one. And again, its in the top. So far we have the bits 1 and 1. Then again. This time it is on the bottom. It get’s a 0. The last time it is at the top and gets a 1.\nWhen we interleave the results of our encoding we get the value of 1 1 0 1 1 0 1 1."
  },
  {
    "objectID": "geohash/script.html#converting-from-binary-to-geohash",
    "href": "geohash/script.html#converting-from-binary-to-geohash",
    "title": "script",
    "section": "Converting from binary to geohash",
    "text": "Converting from binary to geohash\nI told you that a geohash is just a z-coordinate. But now we have a binary z-coordinate and it looks nothing like the geohashes I showed you earlier. Well, there’s one last step that we have to take to go from our binary z-coordinate to a geohash.\nGeohashes are “base32” encoded. What does that mean?\nThe number system that we use and are familiar with is called base 10. That’s because we have 10 unique digits that we use to represent values 0-9.\nBinary is a base 2 number system because it uses the two digits 0 and 1 to represent values.\nThe n refers to how many character are in the alphabet being used to represent values.\nSo base 32 means that there are 32 digits that are used to represent values. These are a combination of letters and numbers. Typically, these are the letters A through Z and the numbers 2 through 7.\nThough the Geohash algorithm has it’s own base 32 alphabet called the “geohash alphabet” (wiki source). It contains the numbers 0 through 9 and the entire alphabet except a, i, l, and o because they look similar to numbers (except a)—they just needed 1 fewer character.\nTo utilze the alphabet we need to define a lookup table that has our characters by position."
  },
  {
    "objectID": "geohash/script.html#recap",
    "href": "geohash/script.html#recap",
    "title": "script",
    "section": "Recap",
    "text": "Recap\nA geohash is a one dimensional encoding from 2 dimensions. We create a Z coordinate from an x and y coordinate. To create the z coord we need to encode our x and y as binary. We do through a sequence of partitions along the number line. We split our range in half to create two intervals. If the value falls into the right interval we record a 1. If it is the left interval we record a 0. We then adjust our interval to be half of which one the point fell in and we repeat until we get 32 bits for both values.\nOnce you have encoded both x and y. We need to interleave them to create a new sequence of 64 total bits.\nAfter which we break the bits into groups of 5 bits. Once the bits have been broken up we translate them into integers.\nFrom there, we encode them into our base 32 alphabet by looking up based on position."
  },
  {
    "objectID": "geohash/script.html#coding-it",
    "href": "geohash/script.html#coding-it",
    "title": "script",
    "section": "Coding it",
    "text": "Coding it\nFor this example I was torn between using Rust or R for the example. If you have a preference one way or the other, please let me know in the comments.\nThe first thing that we need to do is define our x and y values or our coordinate.\nNext we need to specify the precision of our geohash. For our first example let’s look at the full 12 digits. So lets set precision equal to 12.\nThen let’s instantiate two vectors that we will us to search along the x and y axis to encode our values into binary. Each vector will have three elements to represent our two intervals. It will have a lower value, a mid point, and an upper bound.\nNext we need to pre-allocate the vectors which will store our the binary encoding or our x and y values. We encode only 32 bits for x and y because we’re limited to 64 bits in floating point numbers.\nNext, we need to begin to encode our x and y values. The simplest way to do this is through a for loop.\nSince we"
  },
  {
    "objectID": "geohash/script.html#notes",
    "href": "geohash/script.html#notes",
    "title": "script",
    "section": "notes",
    "text": "notes\nMedium post that helped me get to the last part https://yatmanwong.medium.com/geohash-implementation-explained-2ed9627a61ff Factual blog post http://web.archive.org/web/20220620005549/https://www.factual.com/blog/how-geohashes-work/"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "speeding-up-r/script.html",
    "href": "speeding-up-r/script.html",
    "title": "Untitled",
    "section": "",
    "text": "About a week ago I posted a video on using R and Rust together with the extendr library. Based on its reception on LinkedIn and Mastodon, people seem to like the prospect quite a bit. Though, who of you have actually tried it out yet? Do you have a Github repo you’ve been working on? Share it in the comments below.\nOn Wednesday, I had a message in my LinkedIn inbox from a new connection.\nAnswers to questions like this are always “maybe” 🤷.\nSo I asked for a reproducible example I can work with.\nWithin a couple of hours he shared a github gist that I was able to work with.\nTo get a sense of the problem, lets look at some of the sample data he provided.\n# remotes::install_github(\"josiahparry/pathattr\")\nlibrary(pathattr)\nhead(path10k)\n\n# A tibble: 6 × 4\n  path                  dates                                        leads value\n  &lt;chr&gt;                 &lt;chr&gt;                                        &lt;dbl&gt; &lt;dbl&gt;\n1 tiktok&gt;blog&gt;gs&gt;fb&gt;rtl 2023-04-17&gt;2023-02-25&gt;2023-01-24&gt;2023-03-12…     1 6794.\n2 yt&gt;blog&gt;gs&gt;fb&gt;gda     2023-01-18&gt;2023-01-27&gt;2023-02-19&gt;2023-01-01…     1 5981.\n3 fb&gt;gs&gt;yt              2023-04-21&gt;2023-02-20&gt;2023-03-23                 1 5801.\n4 gda&gt;yt&gt;tiktok&gt;blog    2023-04-24&gt;2023-03-01&gt;2023-05-03&gt;2023-04-29      1 4583.\n5 rtl                   2023-02-20                                       1 6735.\n6 gda&gt;yt&gt;rtl&gt;tiktok     2023-02-04&gt;2023-02-26&gt;2023-01-09&gt;2023-03-22      1 7238.\nAs I understand it, we are looking at path attribution which is a marketing problem. Users will interact with a company through a number of different platforms or mediums. Each time they interact with company content is referred to as a “touch.” The people that are touched are referred to as leads. These leads have a dollar value attached to them. Typically it is assigned based on the company that you work for. Folks from a fortune 500 company are most likely to have a higher potential value than someone working for a non-profit. Non-profits can’t spend all that much money.\npath10k[[\"path\"]][1:5]\n\n[1] \"tiktok&gt;blog&gt;gs&gt;fb&gt;rtl\" \"yt&gt;blog&gt;gs&gt;fb&gt;gda\"     \"fb&gt;gs&gt;yt\"             \n[4] \"gda&gt;yt&gt;tiktok&gt;blog\"    \"rtl\"\nTo my understanding each of these paths represent all of the media that a customer consumed before they were converted—meaning purchased a good.\nEach touch point is separated by a greater than sign &gt;. I think this is technically considered Markov Chain Attribution? If you know, put it in the comments.\nEach touch has some theoretical impact on you purchasing a good. The order in which you experience content might matter. How much would omitting one of these touches impact your results? That is called a removal effect which is captured in the object removal_effects_table.\nremoval_effects_table\n\n# A tibble: 7 × 2\n  channel_name removal_effects_conversion\n  &lt;chr&gt;                             &lt;dbl&gt;\n1 fb                                 0.2 \n2 tiktok                             0.1 \n3 gda                                0.3 \n4 yt                                 0.1 \n5 gs                                 0.6 \n6 rtl                                0.05\n7 blog                               0.09\nFor each path we want to know the effect of each channel on conversion and how much value we can assign to them. For each row of the data frame we want to return a data frame that looks like so.\nThis is the function that they wrote to return the desired frame. Let’s walk through it line by line.\nattribute_path &lt;- function(path_str, date_str, outcome, value, retbl) {\n  #break the path_str and date_str into vectors of touch points and dates\n  touches &lt;- stringr::str_split_1(path_str, \"&gt;\")\n  dates &lt;- stringr::str_split_1(date_str, \"&gt;\")\n  #remove dates and touches where touches is an empty\n  dates &lt;- dates[touches != '']\n  touches &lt;- touches[touches != '']\n\n  # create an output dataframe that shows the fraction of\n  # a lead due to each touch/channel_name by\n  # 1 getting the removal_effects_conversion \n  #   (renamed to re) value for each touch\n  # 2 normalizing re for reach touchpoint by dividing by the \n  #   sum(re) for all touchpoints in the path_str\n  # 3 multiplying outcome and value by the renormalized re\n  tidyr::tibble(channel_name = touches[touches!='']) |&gt;\n    dplyr::left_join(\n      retbl |&gt; dplyr::select(channel_name, removal_effects_conversion),\n      \"channel_name\"\n    ) |&gt; dplyr::rename(\n      re = removal_effects_conversion\n    ) |&gt; \n    dplyr::mutate(\n      conversion = outcome * re / sum(re, na.rm = TRUE),\n      value = value * re / sum(re, na.rm = TRUE),\n      date = dates\n    )\n}\nLine 3 and 4 is used to split the path and dates string on the &gt; greater than sign and create a vector from them.\nNext, lines 6 and 7 are used to remove any empty strings.\nThen from lines 16 through 27 the real magic happens using a fairly complex dplyr pipe."
  },
  {
    "objectID": "speeding-up-r/script.html#lookup-vectors",
    "href": "speeding-up-r/script.html#lookup-vectors",
    "title": "Untitled",
    "section": "Lookup Vectors",
    "text": "Lookup Vectors\nI’m not sure if you know this, but all vectors can have names. Most people who grew up on the tidyverse might not actually know this. I was fortunate to have struggled without it for a few years before it became its own metapackage.\nLet’s look at an example. Let’s create a vector containing the values 1 through 26 to represent the indexes of the alphabet.\n\nalpha_index &lt;- 1:26\nalpha_index\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[26] 26\n\n\nWhat if we want to access the index based on the letter in the alphabet? Well, we can give this integer vector names. We can use the built in letters object to assign the names like so:\n\nnames(alpha_index) &lt;- letters\nalpha_index\n\n a  b  c  d  e  f  g  h  i  j  k  l  m  n  o  p  q  r  s  t  u  v  w  x  y  z \n 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 \n\n\nNow when we print it out, we see that the alphabet is printed above the index.\nWhy this is so cool is because we can access the values based on the names rather than just position. I can create a character vector of letters of my name and extract the values.\n\nalpha_index[c(\"j\", \"o\", \"s\", \"i\", \"a\", \"h\")]\n\n j  o  s  i  a  h \n10 15 19  9  1  8 \n\n\nMaybe you already see where this is going. Instead of joining a whole entire table, we can create a look up vector instead. It’s far simpler, and most importantly, far faster. We can do this by using the setNames() function. The first argument is the vector the second is the names.\n\nlookup &lt;- setNames(\n    retbl[[\"removal_effects_conversion\"]], \n    retbl[[\"channel_name\"]]\n)\n\nlookup\n\n    fb tiktok    gda     yt     gs    rtl   blog \n  0.20   0.10   0.30   0.10   0.60   0.05   0.09 \n\n\nWith this we can simplify the code greatly already. We can lookup the return effects value by selecting from the lookup vector the values from our touches vector\n\nlookup[touches]\n\ntiktok   blog     gs     fb    rtl \n  0.10   0.09   0.60   0.20   0.05 \n\n\nLet’s bench mark this alone:\n\nbench::mark(\n    lookup_table = lookup[touches],\n    dplyr_join = {\n        tidyr::tibble(channel_name = touches) |&gt;\n            dplyr::left_join(\n              retbl,\n              \"channel_name\"\n            )\n    },\n    check = FALSE\n)\n\n# A tibble: 2 × 6\n  expression        min   median `itr/sec` mem_alloc `gc/sec`\n  &lt;bch:expr&gt;   &lt;bch:tm&gt; &lt;bch:tm&gt;     &lt;dbl&gt; &lt;bch:byt&gt;    &lt;dbl&gt;\n1 lookup_table    164ns    246ns  3750654.        0B      0  \n2 dplyr_join      576µs    628µs     1489.    2.99KB     34.9\n\n\nThis alone is a huge performance gain.\nIf you don’t need a data frame don’t use one."
  },
  {
    "objectID": "speeding-up-r/script.html#if-you-dont-need-it-dont-use-it",
    "href": "speeding-up-r/script.html#if-you-dont-need-it-dont-use-it",
    "title": "Untitled",
    "section": "If you don’t need it, don’t use it",
    "text": "If you don’t need it, don’t use it\nWe can rewrite the rest of the function using only vectors now that we figured it out!\n\nre &lt;- lookup[touches]\nre_tot &lt;- sum(re, na.rm = TRUE)\nconversion &lt;- outcome * re / re_tot\nval &lt;- value * re / re_tot\n\ntibble::tibble(\n    channel_name = touches,\n    re, \n    conversion,\n    value = val,\n    date = dates\n)\n\n# A tibble: 5 × 5\n  channel_name    re conversion value date      \n  &lt;chr&gt;        &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     \n1 tiktok        0.1      0.0962  653. 2023-04-17\n2 blog          0.09     0.0865  588. 2023-02-25\n3 gs            0.6      0.577  3920. 2023-01-24\n4 fb            0.2      0.192  1307. 2023-03-12\n5 rtl           0.05     0.0481  327. 2023-03-09"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-2",
    "href": "speeding-up-r/slides.html#section-2",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "# remotes::install_github(\"josiahparry/pathattr\")\nlibrary(pathattr)\nhead(path10k)\n\n# A tibble: 6 × 4\n  path                  dates                                      leads value\n  &lt;chr&gt;                 &lt;chr&gt;                                      &lt;dbl&gt; &lt;dbl&gt;\n1 tiktok&gt;blog&gt;gs&gt;fb&gt;rtl 2023-04-17&gt;2023-02-25&gt;2023-01-24&gt;2023-03-…     1 6794.\n2 yt&gt;blog&gt;gs&gt;fb&gt;gda     2023-01-18&gt;2023-01-27&gt;2023-02-19&gt;2023-01-…     1 5981.\n3 fb&gt;gs&gt;yt              2023-04-21&gt;2023-02-20&gt;2023-03-23               1 5801.\n4 gda&gt;yt&gt;tiktok&gt;blog    2023-04-24&gt;2023-03-01&gt;2023-05-03&gt;2023-04-…     1 4583.\n5 rtl                   2023-02-20                                     1 6735.\n6 gda&gt;yt&gt;rtl&gt;tiktok     2023-02-04&gt;2023-02-26&gt;2023-01-09&gt;2023-03-…     1 7238."
  },
  {
    "objectID": "speeding-up-r/slides.html#section-3",
    "href": "speeding-up-r/slides.html#section-3",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "path10k$path[1:5]\n\n[1] \"tiktok&gt;blog&gt;gs&gt;fb&gt;rtl\" \"yt&gt;blog&gt;gs&gt;fb&gt;gda\"     \"fb&gt;gs&gt;yt\"             \n[4] \"gda&gt;yt&gt;tiktok&gt;blog\"    \"rtl\""
  },
  {
    "objectID": "speeding-up-r/slides.html#section-4",
    "href": "speeding-up-r/slides.html#section-4",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "channel_name\nremoval_effects_conversion\n\n\n\n\nfb\n0.20\n\n\ntiktok\n0.10\n\n\ngda\n0.30\n\n\nyt\n0.10\n\n\ngs\n0.60\n\n\nrtl\n0.05\n\n\nblog\n0.09"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-5",
    "href": "speeding-up-r/slides.html#section-5",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "#&gt;    channel_name   re conversion     value       date\n#&gt; 1:       tiktok 0.10 0.09615385  653.2879 2023-04-17\n#&gt; 2:         blog 0.09 0.08653846  587.9591 2023-02-25\n#&gt; 3:           gs 0.60 0.57692308 3919.7273 2023-01-24\n#&gt; 4:           fb 0.20 0.19230769 1306.5758 2023-03-12\n#&gt; 5:          rtl 0.05 0.04807692  326.6439 2023-03-09"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-6",
    "href": "speeding-up-r/slides.html#section-6",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "attribute_path &lt;- function(path_str, date_str, outcome, value, retbl) {\n  touches &lt;- stringr::str_split_1(path_str, \"&gt;\")\n  dates &lt;- stringr::str_split_1(date_str, \"&gt;\")\n  dates &lt;- dates[touches != '']\n  touches &lt;- touches[touches != '']\n\n  tibble::tibble(channel_name = touches[touches!='']) |&gt;\n    dplyr::left_join(\n      retbl |&gt; dplyr::select(channel_name, removal_effects_conversion),\n      \"channel_name\"\n    ) |&gt; \n    dplyr::rename(re = removal_effects_conversion) |&gt; \n    dplyr::mutate(\n      conversion = outcome * re / sum(re, na.rm = TRUE),\n      value = value * re / sum(re, na.rm = TRUE),\n      date = dates\n    )\n}"
  },
  {
    "objectID": "speeding-up-r/script.html#rewrite-function",
    "href": "speeding-up-r/script.html#rewrite-function",
    "title": "Untitled",
    "section": "Rewrite function",
    "text": "Rewrite function\n\nattr_path2 &lt;- function(path_str, date_str, outcome, value, lookup) {\n  touches &lt;- stringr::str_split_1(path_str,\"&gt;\")\n  dates &lt;- stringr::str_split_1(date_str,\"&gt;\")\n    \n  dates &lt;- dates[touches != '']\n  touches &lt;- touches[touches != '']\n\n  re &lt;- unname(lookup[touches])\n  re_tot &lt;- sum(re, na.rm = TRUE)\n  conversion &lt;- outcome * re / re_tot\n  value &lt;- value * re / re_tot\n\n  tibble::tibble(\n    channel_name = touches,\n    re,\n    conversion,\n    value,\n    date = dates\n  )\n}"
  },
  {
    "objectID": "speeding-up-r/script.html#benchmark-it",
    "href": "speeding-up-r/script.html#benchmark-it",
    "title": "Untitled",
    "section": "Benchmark it",
    "text": "Benchmark it\n\nbench::mark(\n    original = attribute_path(path_str, date_str, outcome, value, retbl),\n    base_R = attr_path2(path_str, date_str, outcome, value, lookup)\n)\n\n# A tibble: 2 × 6\n  expression      min   median `itr/sec` mem_alloc `gc/sec`\n  &lt;bch:expr&gt; &lt;bch:tm&gt; &lt;bch:tm&gt;     &lt;dbl&gt; &lt;bch:byt&gt;    &lt;dbl&gt;\n1 original     2.44ms   2.96ms      258.    2.25MB     28.9\n2 base_R     396.72µs 449.63µs     1997.   59.78KB     41.9\n\n\nAlready we see a bunch of performance gains at a single iteration. However this intended to be applied to an entire data frame by using purrr.\n#"
  },
  {
    "objectID": "speeding-up-r/slides.html#lines-2---5",
    "href": "speeding-up-r/slides.html#lines-2---5",
    "title": "Rust goes brrrr",
    "section": "Lines 2 - 5",
    "text": "Lines 2 - 5\n\ntouches &lt;- stringr::str_split_1(path_str, \"&gt;\")\ndates &lt;- stringr::str_split_1(date_str, \"&gt;\")\ntouches &lt;- touches[touches != '']\ndates &lt;- dates[touches != '']\n\ntouches\n\n[1] \"tiktok\" \"blog\"   \"gs\"     \"fb\"     \"rtl\"   \n\ndates\n\n[1] \"2023-04-17\" \"2023-02-25\" \"2023-01-24\" \"2023-03-12\" \"2023-03-09\""
  },
  {
    "objectID": "speeding-up-r/slides.html#auto-animatetrue",
    "href": "speeding-up-r/slides.html#auto-animatetrue",
    "title": "Untitled",
    "section": "{auto-animate=“true”“}",
    "text": "{auto-animate=“true”“}\n\ndplyr::tibble(channel_name = touches)\n\n# A tibble: 5 × 1\n  channel_name\n  &lt;chr&gt;       \n1 tiktok      \n2 blog        \n3 gs          \n4 fb          \n5 rtl"
  },
  {
    "objectID": "speeding-up-r/slides.html#auto-animatetrue-1",
    "href": "speeding-up-r/slides.html#auto-animatetrue-1",
    "title": "Untitled",
    "section": "{auto-animate=“true”“}",
    "text": "{auto-animate=“true”“}\n\ndplyr::tibble(channel_name = touches) |&gt; \n  dplyr::left_join(\n    retbl, \"channel_name\"\n  )\n\n# A tibble: 5 × 2\n  channel_name removal_effects_conversion\n  &lt;chr&gt;                             &lt;dbl&gt;\n1 tiktok                             0.1 \n2 blog                               0.09\n3 gs                                 0.6 \n4 fb                                 0.2 \n5 rtl                                0.05"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-7",
    "href": "speeding-up-r/slides.html#section-7",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "dplyr::tibble(channel_name = touches)\n\n\n\n\n# A tibble: 5 × 1\n  channel_name\n  &lt;chr&gt;       \n1 tiktok      \n2 blog        \n3 gs          \n4 fb          \n5 rtl"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-8",
    "href": "speeding-up-r/slides.html#section-8",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "dplyr::tibble(channel_name = touches) |&gt; \n  dplyr::left_join(\n    retbl, \"channel_name\"\n  )\n\n\n\n\n# A tibble: 5 × 2\n  channel_name removal_effects_conversion\n  &lt;chr&gt;                             &lt;dbl&gt;\n1 tiktok                             0.1 \n2 blog                               0.09\n3 gs                                 0.6 \n4 fb                                 0.2 \n5 rtl                                0.05"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-12",
    "href": "speeding-up-r/slides.html#section-12",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "lookup &lt;- setNames(\n    retbl[[\"removal_effects_conversion\"]], \n    retbl[[\"channel_name\"]]\n)\n\nlookup\n\n    fb tiktok    gda     yt     gs    rtl   blog \n  0.20   0.10   0.30   0.10   0.60   0.05   0.09"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-13",
    "href": "speeding-up-r/slides.html#section-13",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "lookup &lt;- setNames(\n    retbl[[\"removal_effects_conversion\"]], \n    retbl[[\"channel_name\"]]\n)\n\nlookup[touches]\n\ntiktok   blog     gs     fb    rtl \n  0.10   0.09   0.60   0.20   0.05"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-14",
    "href": "speeding-up-r/slides.html#section-14",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "bench::mark(\n    lookup_table = lookup[touches],\n    dplyr_join = {\n        tidyr::tibble(channel_name = touches) |&gt;\n            dplyr::left_join(\n              retbl,\n              \"channel_name\"\n            )\n    },\n    check = FALSE\n)\n\n\n\n\n# A tibble: 2 × 6\n  expression        min   median `itr/sec` mem_alloc `gc/sec`\n  &lt;bch:expr&gt;   &lt;bch:tm&gt; &lt;bch:tm&gt;     &lt;dbl&gt; &lt;bch:byt&gt;    &lt;dbl&gt;\n1 lookup_table    164ns    246ns  3812619.        0B      0  \n2 dplyr_join      581µs    629µs     1516.     794KB     39.9"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-16",
    "href": "speeding-up-r/slides.html#section-16",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "re &lt;- lookup[touches]\n\n\n\ntiktok   blog     gs     fb    rtl \n  0.10   0.09   0.60   0.20   0.05"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-17",
    "href": "speeding-up-r/slides.html#section-17",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "re &lt;- lookup[touches]\nre_tot &lt;- sum(re, na.rm = TRUE)\n\n\n\n[1] 1.04"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-18",
    "href": "speeding-up-r/slides.html#section-18",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "re &lt;- lookup[touches]\nre_tot &lt;- sum(re, na.rm = TRUE)\nconversion &lt;- outcome * re / re_tot\n\n\n\n    tiktok       blog         gs         fb        rtl \n0.09615385 0.08653846 0.57692308 0.19230769 0.04807692"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-19",
    "href": "speeding-up-r/slides.html#section-19",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "re &lt;- lookup[touches]\nre_tot &lt;- sum(re, na.rm = TRUE)\nconversion &lt;- outcome * re / re_tot\nval &lt;- value * re / re_tot\n\n\n\n   tiktok      blog        gs        fb       rtl \n 653.2879  587.9591 3919.7273 1306.5758  326.6439"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-20",
    "href": "speeding-up-r/slides.html#section-20",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "re &lt;- lookup[touches]\nre_tot &lt;- sum(re, na.rm = TRUE)\nconversion &lt;- outcome * re / re_tot\nval &lt;- value * re / re_tot\n\ntibble::tibble(\n    channel_name = touches,\n    re, \n    conversion,\n    value = val,\n    date = dates\n)\n\n# A tibble: 5 × 5\n  channel_name    re conversion value date      \n  &lt;chr&gt;        &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     \n1 tiktok        0.1      0.0962  653. 2023-04-17\n2 blog          0.09     0.0865  588. 2023-02-25\n3 gs            0.6      0.577  3920. 2023-01-24\n4 fb            0.2      0.192  1307. 2023-03-12\n5 rtl           0.05     0.0481  327. 2023-03-09"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-22",
    "href": "speeding-up-r/slides.html#section-22",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "attr_path2 &lt;- function(path_str, date_str, outcome, value, lookup) {\n  touches &lt;- stringr::str_split_1(path_str,\"&gt;\")\n  dates &lt;- stringr::str_split_1(date_str,\"&gt;\")\n    \n  dates &lt;- dates[touches != '']\n  touches &lt;- touches[touches != '']\n\n  re &lt;- unname(lookup[touches])\n  re_tot &lt;- sum(re, na.rm = TRUE)\n  conversion &lt;- outcome * re / re_tot\n  value &lt;- value * re / re_tot\n\n  tibble::tibble(\n    channel_name = touches,\n    re,\n    conversion,\n    value,\n    date = dates\n  )\n}"
  },
  {
    "objectID": "speeding-up-r/slides.html#benchmark-it-4",
    "href": "speeding-up-r/slides.html#benchmark-it-4",
    "title": "Rust goes brrrr",
    "section": "Benchmark it",
    "text": "Benchmark it\n\nbm |&gt; \n    dplyr::select(1:5) |&gt; \n    dplyr::mutate(\n        times_faster = dplyr::coalesce(\n          as.double(dplyr::lag(median, 2) / median),\n          as.double(dplyr::lag(median, 1) / median)\n          )\n    )\n\n# A tibble: 3 × 6\n  expression      min   median `itr/sec` mem_alloc times_faster\n  &lt;bch:expr&gt; &lt;bch:tm&gt; &lt;bch:tm&gt;     &lt;dbl&gt; &lt;bch:byt&gt;        &lt;dbl&gt;\n1 original      1.68s    1.68s     0.595    11.3MB        NA   \n2 base_R     230.34ms 272.51ms     3.67    614.3KB         6.17\n3 rust         3.68ms   4.67ms   210.      878.1KB       360."
  },
  {
    "objectID": "speeding-up-r/slides.html#section-36",
    "href": "speeding-up-r/slides.html#section-36",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "path_data &lt;- path10k[1:1000,]\nstart &lt;- Sys.time() # start timing\n\nlibrary(data.table)\nlu &lt;- c(fb = 0.2, tiktok = 0.1, gda = 0.3, yt = 0.10, gs = 0.60, rtl = 0.05, blog = 0.09)\ntouches &lt;- strsplit(path_data$path, \"&gt;\", fixed = TRUE)\nlt &lt;- lengths(touches)\ngroups &lt;- rep.int(seq_along(touches), lt)\noutcome &lt;- rep.int(path_data$leads, lt)\nvalue &lt;- rep.int(path_data$value, lt) \ntouches &lt;- unlist(touches)\ndates &lt;- unlist(strsplit(path_data$dates, \"&gt;\", fixed = TRUE))\nnot_empty &lt;- touches != ''\ndates &lt;- dates[not_empty] \ntouches &lt;- touches[not_empty]\nre &lt;- lu[touches]\nDT &lt;- data.table(\n    channel_name = touches,\n    outcome = outcome,\n    date = dates,\n    re,\n    value,\n    groups\n)\nDT[, re_tot := sum(re, na.rm = TRUE), by = groups]\nDT[, `:=`(conversion = outcome * re / re_tot, value = value * re / re_tot)]\nend &lt;- Sys.time()"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-43",
    "href": "speeding-up-r/slides.html#section-43",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "touches &lt;- strsplit(path_data$path, \"&gt;\", fixed = TRUE)\n\n\n\n[[1]]\n[1] \"tiktok\" \"blog\"   \"gs\"     \"fb\"     \"rtl\"   \n\n[[2]]\n[1] \"yt\"   \"blog\" \"gs\"   \"fb\"   \"gda\" \n\n[[3]]\n[1] \"fb\" \"gs\" \"yt\"\n\n[[4]]\n[1] \"gda\"    \"yt\"     \"tiktok\" \"blog\"  \n\n[[5]]\n[1] \"rtl\"\n\n[[6]]\n[1] \"gda\"    \"yt\"     \"rtl\"    \"tiktok\"\n\n[[7]]\n[1] \"tiktok\" \"blog\"  \n\n[[8]]\n[1] \"gda\"    \"tiktok\" \"rtl\"    \"yt\"     \"gs\"    \n\n[[9]]\n[1] \"tiktok\" \"rtl\"    \"blog\"   \"gda\"    \"gs\"    \n\n[[10]]\n[1] \"gda\" \"fb\" \n\n[[11]]\n[1] \"gs\"   \"rtl\"  \"blog\"\n\n[[12]]\n[1] \"rtl\" \"yt\" \n\n[[13]]\n[1] \"tiktok\" \"gda\"   \n\n[[14]]\n[1] \"fb\"  \"rtl\"\n\n[[15]]\n[1] \"gda\"  \"yt\"   \"blog\"\n\n[[16]]\n[1] \"yt\"   \"blog\" \"gs\"   \"fb\"   \"gda\" \n\n[[17]]\n[1] \"yt\"   \"blog\"\n\n[[18]]\n[1] \"tiktok\" \"yt\"    \n\n[[19]]\n[1] \"gs\"  \"rtl\" \"fb\"  \"gda\"\n\n[[20]]\n[1] \"yt\"     \"blog\"   \"tiktok\" \"fb\"     \"rtl\"   \n\n[[21]]\n[1] \"rtl\"    \"tiktok\"\n\n[[22]]\n[1] \"gda\" \"yt\"  \"rtl\" \"fb\"  \"gs\" \n\n[[23]]\n[1] \"gs\"\n\n[[24]]\n[1] \"fb\"   \"gs\"   \"gda\"  \"blog\"\n\n[[25]]\n[1] \"tiktok\" \"gda\"    \"fb\"     \"rtl\"   \n\n[[26]]\n[1] \"gs\"     \"tiktok\" \"yt\"     \"blog\"   \"gda\"   \n\n[[27]]\n[1] \"gs\"     \"blog\"   \"rtl\"    \"tiktok\"\n\n[[28]]\n[1] \"gda\"  \"yt\"   \"blog\" \"rtl\"  \"fb\"  \n\n[[29]]\n[1] \"gda\"\n\n[[30]]\n[1] \"gs\"  \"rtl\"\n\n[[31]]\n[1] \"gs\" \"fb\"\n\n[[32]]\n[1] \"yt\" \"gs\"\n\n[[33]]\n[1] \"blog\"\n\n[[34]]\n[1] \"yt\"     \"gda\"    \"tiktok\"\n\n[[35]]\n[1] \"fb\"  \"gda\"\n\n[[36]]\n[1] \"yt\"     \"rtl\"    \"tiktok\" \"blog\"  \n\n[[37]]\n[1] \"rtl\"\n\n[[38]]\n[1] \"fb\" \"yt\"\n\n[[39]]\n[1] \"tiktok\" \"gs\"     \"blog\"  \n\n[[40]]\n[1] \"gda\"  \"blog\" \"rtl\" \n\n[[41]]\n[1] \"gda\"  \"gs\"   \"fb\"   \"yt\"   \"blog\"\n\n[[42]]\n[1] \"blog\"   \"yt\"     \"gda\"    \"tiktok\" \"fb\"    \n\n[[43]]\n[1] \"fb\"   \"blog\"\n\n[[44]]\n[1] \"gda\" \"fb\" \n\n[[45]]\n[1] \"yt\" \"gs\"\n\n[[46]]\n[1] \"gda\"    \"fb\"     \"gs\"     \"tiktok\" \"blog\"  \n\n[[47]]\n[1] \"rtl\"    \"gda\"    \"tiktok\" \"yt\"    \n\n[[48]]\n[1] \"fb\"  \"gda\" \"gs\" \n\n[[49]]\n[1] \"gs\"   \"gda\"  \"yt\"   \"blog\"\n\n[[50]]\n[1] \"yt\"     \"tiktok\"\n\n[[51]]\n[1] \"yt\"   \"blog\" \"fb\"   \"gs\"  \n\n[[52]]\n[1] \"gs\"   \"blog\" \"yt\"   \"fb\"   \"gda\" \n\n[[53]]\n[1] \"fb\"\n\n[[54]]\n[1] \"gs\"  \"gda\"\n\n[[55]]\n[1] \"tiktok\" \"yt\"    \n\n[[56]]\n[1] \"rtl\"    \"gda\"    \"tiktok\" \"fb\"    \n\n[[57]]\n[1] \"gs\"     \"yt\"     \"tiktok\" \"gda\"    \"rtl\"   \n\n[[58]]\n[1] \"gs\"   \"gda\"  \"blog\" \"rtl\"  \"yt\"  \n\n[[59]]\n[1] \"gs\"     \"gda\"    \"tiktok\" \"yt\"    \n\n[[60]]\n[1] \"gs\"\n\n[[61]]\n[1] \"tiktok\"\n\n[[62]]\n[1] \"gs\"  \"rtl\" \"fb\" \n\n[[63]]\n[1] \"gda\"\n\n[[64]]\n[1] \"gda\"\n\n[[65]]\n[1] \"yt\" \"fb\"\n\n[[66]]\n[1] \"gda\"    \"tiktok\"\n\n[[67]]\n[1] \"blog\" \"rtl\"  \"gda\" \n\n[[68]]\n[1] \"tiktok\" \"yt\"     \"fb\"     \"gda\"    \"gs\"    \n\n[[69]]\n[1] \"blog\" \"gda\"  \"fb\"   \"gs\"  \n\n[[70]]\n[1] \"rtl\"    \"tiktok\" \"yt\"     \"fb\"    \n\n[[71]]\n[1] \"blog\"\n\n[[72]]\n[1] \"gda\"  \"gs\"   \"yt\"   \"blog\"\n\n[[73]]\n[1] \"gs\"     \"tiktok\"\n\n[[74]]\n[1] \"rtl\"    \"tiktok\" \"gda\"    \"blog\"  \n\n[[75]]\n[1] \"tiktok\" \"gda\"    \"gs\"    \n\n[[76]]\n[1] \"blog\" \"yt\"  \n\n[[77]]\n[1] \"tiktok\" \"rtl\"    \"gs\"     \"blog\"  \n\n[[78]]\n[1] \"rtl\"    \"blog\"   \"tiktok\" \"gda\"   \n\n[[79]]\n[1] \"yt\"   \"rtl\"  \"gda\"  \"blog\" \"gs\"  \n\n[[80]]\n[1] \"rtl\"    \"yt\"     \"tiktok\" \"fb\"    \n\n[[81]]\n[1] \"tiktok\"\n\n[[82]]\n[1] \"tiktok\" \"gda\"    \"yt\"     \"gs\"    \n\n[[83]]\n[1] \"gs\"     \"blog\"   \"tiktok\" \"yt\"    \n\n[[84]]\n[1] \"tiktok\" \"gs\"     \"fb\"     \"gda\"    \"rtl\"   \n\n[[85]]\n[1] \"rtl\"    \"blog\"   \"yt\"     \"gs\"     \"tiktok\"\n\n[[86]]\n[1] \"gda\"  \"gs\"   \"blog\" \"fb\"  \n\n[[87]]\n[1] \"tiktok\" \"fb\"     \"yt\"     \"blog\"  \n\n[[88]]\n[1] \"fb\"  \"gda\" \"rtl\"\n\n[[89]]\n[1] \"yt\"     \"tiktok\"\n\n[[90]]\n[1] \"tiktok\" \"gs\"     \"rtl\"    \"yt\"    \n\n[[91]]\n[1] \"tiktok\" \"blog\"   \"gs\"     \"fb\"     \"rtl\"   \n\n[[92]]\n[1] \"gs\"\n\n[[93]]\n[1] \"gda\"  \"fb\"   \"yt\"   \"gs\"   \"blog\"\n\n[[94]]\n[1] \"yt\"\n\n[[95]]\n[1] \"gs\"     \"tiktok\" \"yt\"    \n\n[[96]]\n[1] \"fb\"     \"gs\"     \"gda\"    \"blog\"   \"tiktok\"\n\n[[97]]\n[1] \"yt\"   \"fb\"   \"rtl\"  \"blog\"\n\n[[98]]\n[1] \"tiktok\" \"yt\"    \n\n[[99]]\n[1] \"gda\"    \"tiktok\" \"fb\"     \"gs\"     \"yt\"    \n\n[[100]]\n[1] \"tiktok\" \"gs\"     \"gda\"   \n\n[[101]]\n[1] \"yt\" \"fb\"\n\n[[102]]\n[1] \"gda\"    \"gs\"     \"rtl\"    \"tiktok\" \"yt\"    \n\n[[103]]\n[1] \"rtl\"  \"gs\"   \"blog\"\n\n[[104]]\n[1] \"gs\"     \"rtl\"    \"gda\"    \"tiktok\"\n\n[[105]]\n[1] \"rtl\"    \"yt\"     \"tiktok\" \"gda\"   \n\n[[106]]\n[1] \"gda\" \"fb\" \n\n[[107]]\n[1] \"gs\"     \"tiktok\" \"yt\"     \"fb\"     \"gda\"   \n\n[[108]]\n[1] \"gda\" \"yt\"  \"gs\"  \"rtl\"\n\n[[109]]\n[1] \"rtl\" \"fb\" \n\n[[110]]\n[1] \"blog\"   \"fb\"     \"tiktok\" \"gs\"    \n\n[[111]]\n[1] \"blog\" \"fb\"  \n\n[[112]]\n[1] \"rtl\"    \"tiktok\" \"gs\"    \n\n[[113]]\n[1] \"gda\"  \"rtl\"  \"blog\"\n\n[[114]]\n[1] \"blog\"   \"tiktok\" \"yt\"    \n\n[[115]]\n[1] \"yt\"\n\n[[116]]\n[1] \"gda\"\n\n[[117]]\n[1] \"yt\"     \"rtl\"    \"tiktok\" \"blog\"   \"gs\"    \n\n[[118]]\n[1] \"rtl\" \"gda\" \"yt\"  \"gs\" \n\n[[119]]\n[1] \"gda\"  \"blog\" \"yt\"  \n\n[[120]]\n[1] \"rtl\" \"gda\"\n\n[[121]]\n[1] \"gs\"\n\n[[122]]\n[1] \"tiktok\" \"gda\"    \"gs\"    \n\n[[123]]\n[1] \"blog\" \"gs\"   \"rtl\" \n\n[[124]]\n[1] \"blog\"\n\n[[125]]\n[1] \"blog\" \"fb\"   \"gda\"  \"yt\"   \"gs\"  \n\n[[126]]\n[1] \"fb\"  \"gda\"\n\n[[127]]\n[1] \"fb\"\n\n[[128]]\n[1] \"fb\"     \"blog\"   \"tiktok\" \"rtl\"    \"gda\"   \n\n[[129]]\n[1] \"blog\"   \"tiktok\" \"fb\"    \n\n[[130]]\n[1] \"fb\"\n\n[[131]]\n[1] \"yt\"     \"blog\"   \"tiktok\" \"rtl\"    \"fb\"    \n\n[[132]]\n[1] \"fb\"     \"blog\"   \"tiktok\" \"gs\"    \n\n[[133]]\n[1] \"fb\"     \"yt\"     \"gda\"    \"tiktok\" \"rtl\"   \n\n[[134]]\n[1] \"fb\"\n\n[[135]]\n[1] \"fb\"\n\n[[136]]\n[1] \"blog\"   \"rtl\"    \"tiktok\" \"gs\"    \n\n[[137]]\n[1] \"rtl\" \"gda\" \"fb\" \n\n[[138]]\n[1] \"gda\"    \"yt\"     \"fb\"     \"tiktok\" \"blog\"  \n\n[[139]]\n[1] \"rtl\"  \"blog\"\n\n[[140]]\n[1] \"blog\"\n\n[[141]]\n[1] \"yt\"     \"gda\"    \"tiktok\"\n\n[[142]]\n[1] \"gda\"\n\n[[143]]\n[1] \"fb\"  \"rtl\"\n\n[[144]]\n[1] \"rtl\" \"gda\"\n\n[[145]]\n[1] \"gs\"   \"blog\" \"gda\"  \"fb\"  \n\n[[146]]\n[1] \"rtl\"    \"blog\"   \"gda\"    \"tiktok\"\n\n[[147]]\n[1] \"gs\" \"fb\"\n\n[[148]]\n[1] \"tiktok\" \"gs\"     \"fb\"    \n\n[[149]]\n[1] \"tiktok\" \"fb\"     \"gs\"     \"blog\"   \"rtl\"   \n\n[[150]]\n[1] \"rtl\"  \"gda\"  \"yt\"   \"gs\"   \"blog\"\n\n[[151]]\n[1] \"rtl\"  \"blog\"\n\n[[152]]\n[1] \"tiktok\" \"gs\"     \"gda\"   \n\n[[153]]\n[1] \"rtl\"    \"yt\"     \"blog\"   \"tiktok\" \"gs\"    \n\n[[154]]\n[1] \"rtl\" \"yt\" \n\n[[155]]\n[1] \"gs\"   \"yt\"   \"gda\"  \"blog\" \"fb\"  \n\n[[156]]\n[1] \"yt\"   \"rtl\"  \"blog\" \"gs\"  \n\n[[157]]\n[1] \"tiktok\" \"fb\"     \"yt\"     \"gs\"     \"rtl\"   \n\n[[158]]\n[1] \"gs\"   \"rtl\"  \"blog\"\n\n[[159]]\n[1] \"fb\"   \"rtl\"  \"blog\" \"gda\"  \"gs\"  \n\n[[160]]\n[1] \"tiktok\"\n\n[[161]]\n[1] \"yt\"     \"tiktok\"\n\n[[162]]\n[1] \"gs\"   \"gda\"  \"blog\"\n\n[[163]]\n[1] \"gda\"    \"yt\"     \"tiktok\"\n\n[[164]]\n[1] \"yt\"   \"blog\"\n\n[[165]]\n[1] \"yt\"   \"rtl\"  \"blog\" \"gs\"  \n\n[[166]]\n[1] \"yt\"   \"fb\"   \"gs\"   \"blog\" \"gda\" \n\n[[167]]\n[1] \"gs\"  \"fb\"  \"yt\"  \"rtl\" \"gda\"\n\n[[168]]\n[1] \"tiktok\" \"gda\"    \"gs\"     \"blog\"   \"fb\"    \n\n[[169]]\n[1] \"yt\"   \"blog\" \"gs\"   \"gda\" \n\n[[170]]\n[1] \"blog\"   \"tiktok\" \"gs\"    \n\n[[171]]\n[1] \"fb\"\n\n[[172]]\n[1] \"rtl\"  \"gs\"   \"blog\"\n\n[[173]]\n[1] \"blog\"   \"yt\"     \"fb\"     \"tiktok\"\n\n[[174]]\n[1] \"fb\"     \"gs\"     \"tiktok\" \"yt\"    \n\n[[175]]\n[1] \"tiktok\" \"blog\"   \"rtl\"    \"fb\"    \n\n[[176]]\n[1] \"gda\"  \"blog\" \"rtl\"  \"gs\"  \n\n[[177]]\n[1] \"blog\" \"yt\"  \n\n[[178]]\n[1] \"gda\"    \"tiktok\"\n\n[[179]]\n[1] \"gs\"   \"blog\" \"rtl\"  \"gda\" \n\n[[180]]\n[1] \"gs\"   \"blog\"\n\n[[181]]\n[1] \"gda\"    \"tiktok\"\n\n[[182]]\n[1] \"gda\"\n\n[[183]]\n[1] \"fb\" \"gs\"\n\n[[184]]\n[1] \"yt\"   \"rtl\"  \"gs\"   \"blog\"\n\n[[185]]\n[1] \"rtl\"\n\n[[186]]\n[1] \"rtl\"    \"fb\"     \"tiktok\" \"yt\"    \n\n[[187]]\n[1] \"blog\" \"yt\"   \"fb\"   \"gs\"   \"gda\" \n\n[[188]]\n[1] \"tiktok\"\n\n[[189]]\n[1] \"fb\"  \"gs\"  \"rtl\"\n\n[[190]]\n[1] \"gs\"  \"gda\" \"fb\" \n\n[[191]]\n[1] \"blog\"\n\n[[192]]\n[1] \"gs\"  \"rtl\" \"gda\"\n\n[[193]]\n[1] \"fb\"  \"rtl\" \"yt\" \n\n[[194]]\n[1] \"gda\"\n\n[[195]]\n[1] \"tiktok\"\n\n[[196]]\n[1] \"rtl\"\n\n[[197]]\n[1] \"rtl\"    \"yt\"     \"tiktok\"\n\n[[198]]\n[1] \"tiktok\"\n\n[[199]]\n[1] \"gs\"   \"blog\"\n\n[[200]]\n[1] \"blog\" \"gs\"   \"fb\"  \n\n[[201]]\n[1] \"fb\"     \"yt\"     \"tiktok\" \"gs\"    \n\n[[202]]\n[1] \"gs\"   \"yt\"   \"fb\"   \"blog\" \"gda\" \n\n[[203]]\n[1] \"yt\"   \"blog\" \"fb\"  \n\n[[204]]\n[1] \"rtl\"    \"gs\"     \"fb\"     \"tiktok\"\n\n[[205]]\n[1] \"rtl\"\n\n[[206]]\n[1] \"blog\"   \"fb\"     \"yt\"     \"tiktok\"\n\n[[207]]\n[1] \"rtl\"  \"yt\"   \"blog\" \"fb\"   \"gs\"  \n\n[[208]]\n[1] \"fb\"     \"blog\"   \"tiktok\" \"yt\"     \"gs\"    \n\n[[209]]\n[1] \"fb\"     \"tiktok\" \"gs\"     \"gda\"    \"rtl\"   \n\n[[210]]\n[1] \"rtl\"    \"tiktok\" \"blog\"   \"gda\"   \n\n[[211]]\n[1] \"fb\"\n\n[[212]]\n[1] \"rtl\"  \"fb\"   \"blog\"\n\n[[213]]\n[1] \"fb\"\n\n[[214]]\n[1] \"yt\"   \"fb\"   \"blog\"\n\n[[215]]\n[1] \"fb\"   \"gs\"   \"yt\"   \"blog\" \"rtl\" \n\n[[216]]\n[1] \"rtl\"    \"gda\"    \"gs\"     \"tiktok\" \"yt\"    \n\n[[217]]\n[1] \"fb\"     \"tiktok\" \"yt\"     \"gda\"    \"blog\"  \n\n[[218]]\n[1] \"fb\"     \"gda\"    \"tiktok\"\n\n[[219]]\n[1] \"gs\"   \"blog\" \"gda\" \n\n[[220]]\n[1] \"tiktok\" \"fb\"     \"gs\"     \"blog\"  \n\n[[221]]\n[1] \"blog\" \"gda\" \n\n[[222]]\n[1] \"gs\"     \"tiktok\" \"gda\"    \"yt\"    \n\n[[223]]\n[1] \"gs\"  \"gda\"\n\n[[224]]\n[1] \"blog\" \"fb\"  \n\n[[225]]\n[1] \"fb\"  \"yt\"  \"rtl\"\n\n[[226]]\n[1] \"yt\"     \"gda\"    \"tiktok\" \"rtl\"    \"gs\"    \n\n[[227]]\n[1] \"blog\" \"gs\"   \"gda\"  \"rtl\" \n\n[[228]]\n[1] \"gda\" \"rtl\" \"gs\" \n\n[[229]]\n[1] \"yt\"   \"blog\" \"fb\"   \"gda\"  \"rtl\" \n\n[[230]]\n[1] \"fb\" \"gs\" \"yt\"\n\n[[231]]\n[1] \"fb\"\n\n[[232]]\n[1] \"gs\"     \"fb\"     \"tiktok\" \"gda\"    \"rtl\"   \n\n[[233]]\n[1] \"gs\"   \"gda\"  \"blog\" \"fb\"  \n\n[[234]]\n[1] \"fb\"   \"gs\"   \"rtl\"  \"blog\"\n\n[[235]]\n[1] \"gda\" \"rtl\" \"fb\" \n\n[[236]]\n[1] \"tiktok\" \"gs\"     \"yt\"     \"rtl\"    \"fb\"    \n\n[[237]]\n[1] \"gs\"   \"yt\"   \"rtl\"  \"blog\"\n\n[[238]]\n[1] \"yt\"     \"tiktok\" \"fb\"    \n\n[[239]]\n[1] \"gs\" \"fb\" \"yt\"\n\n[[240]]\n[1] \"fb\" \"yt\"\n\n[[241]]\n[1] \"tiktok\" \"gs\"    \n\n[[242]]\n[1] \"blog\"\n\n[[243]]\n[1] \"yt\"   \"fb\"   \"rtl\"  \"blog\"\n\n[[244]]\n[1] \"rtl\"  \"blog\" \"gda\" \n\n[[245]]\n[1] \"fb\"  \"yt\"  \"gda\" \"gs\" \n\n[[246]]\n[1] \"rtl\" \"fb\" \n\n[[247]]\n[1] \"gs\"   \"fb\"   \"blog\"\n\n[[248]]\n[1] \"gda\" \"rtl\"\n\n[[249]]\n[1] \"rtl\"\n\n[[250]]\n[1] \"rtl\"    \"gda\"    \"gs\"     \"tiktok\"\n\n[[251]]\n[1] \"tiktok\" \"yt\"     \"fb\"     \"rtl\"    \"gda\"   \n\n[[252]]\n[1] \"blog\"\n\n[[253]]\n[1] \"gs\"   \"rtl\"  \"fb\"   \"blog\"\n\n[[254]]\n[1] \"gs\" \"fb\"\n\n[[255]]\n[1] \"tiktok\" \"blog\"   \"gda\"   \n\n[[256]]\n[1] \"fb\"   \"blog\" \"gda\"  \"gs\"  \n\n[[257]]\n[1] \"gs\"     \"gda\"    \"tiktok\" \"yt\"     \"blog\"  \n\n[[258]]\n[1] \"gda\"  \"rtl\"  \"blog\" \"yt\"  \n\n[[259]]\n[1] \"rtl\"  \"blog\"\n\n[[260]]\n[1] \"gda\"    \"yt\"     \"tiktok\"\n\n[[261]]\n[1] \"tiktok\" \"fb\"     \"rtl\"   \n\n[[262]]\n[1] \"blog\" \"rtl\"  \"gda\" \n\n[[263]]\n[1] \"blog\"\n\n[[264]]\n[1] \"gs\"\n\n[[265]]\n[1] \"gs\"   \"blog\"\n\n[[266]]\n[1] \"fb\"  \"rtl\"\n\n[[267]]\n[1] \"blog\"   \"tiktok\" \"yt\"    \n\n[[268]]\n[1] \"gs\"  \"gda\" \"yt\"  \"rtl\" \"fb\" \n\n[[269]]\n[1] \"tiktok\" \"gda\"    \"fb\"    \n\n[[270]]\n[1] \"rtl\"  \"blog\" \"fb\"  \n\n[[271]]\n[1] \"fb\"\n\n[[272]]\n[1] \"blog\"\n\n[[273]]\n[1] \"fb\"\n\n[[274]]\n[1] \"blog\" \"yt\"   \"gs\"   \"rtl\"  \"fb\"  \n\n[[275]]\n[1] \"blog\" \"gs\"   \"fb\"   \"gda\"  \"yt\"  \n\n[[276]]\n[1] \"gda\"\n\n[[277]]\n[1] \"gda\"\n\n[[278]]\n[1] \"fb\"     \"rtl\"    \"gs\"     \"blog\"   \"tiktok\"\n\n[[279]]\n[1] \"gs\"\n\n[[280]]\n[1] \"tiktok\" \"yt\"     \"blog\"  \n\n[[281]]\n[1] \"gs\"\n\n[[282]]\n[1] \"gs\"\n\n[[283]]\n[1] \"tiktok\" \"blog\"   \"gs\"     \"fb\"    \n\n[[284]]\n[1] \"gda\"  \"blog\" \"yt\"  \n\n[[285]]\n[1] \"gda\"    \"blog\"   \"yt\"     \"rtl\"    \"tiktok\"\n\n[[286]]\n[1] \"blog\" \"gda\"  \"yt\"   \"rtl\" \n\n[[287]]\n[1] \"tiktok\" \"fb\"     \"blog\"  \n\n[[288]]\n[1] \"yt\"     \"gs\"     \"tiktok\" \"gda\"   \n\n[[289]]\n[1] \"rtl\"    \"gs\"     \"fb\"     \"tiktok\"\n\n[[290]]\n[1] \"yt\"     \"gda\"    \"tiktok\" \"fb\"     \"rtl\"   \n\n[[291]]\n[1] \"gs\"   \"yt\"   \"blog\"\n\n[[292]]\n[1] \"tiktok\"\n\n[[293]]\n[1] \"yt\"   \"blog\"\n\n[[294]]\n[1] \"gda\" \"fb\" \n\n[[295]]\n[1] \"blog\"   \"tiktok\"\n\n[[296]]\n[1] \"gda\"  \"blog\"\n\n[[297]]\n[1] \"gs\"     \"fb\"     \"tiktok\" \"rtl\"    \"blog\"  \n\n[[298]]\n[1] \"yt\"   \"gs\"   \"blog\" \"gda\" \n\n[[299]]\n[1] \"blog\"   \"rtl\"    \"tiktok\"\n\n[[300]]\n[1] \"yt\"     \"rtl\"    \"gs\"     \"blog\"   \"tiktok\"\n\n[[301]]\n[1] \"yt\"   \"fb\"   \"blog\"\n\n[[302]]\n[1] \"blog\"   \"tiktok\" \"yt\"     \"gs\"    \n\n[[303]]\n[1] \"fb\"   \"gs\"   \"blog\"\n\n[[304]]\n[1] \"fb\"\n\n[[305]]\n[1] \"tiktok\" \"gs\"    \n\n[[306]]\n[1] \"fb\" \"yt\"\n\n[[307]]\n[1] \"gs\"\n\n[[308]]\n[1] \"gs\" \"fb\"\n\n[[309]]\n[1] \"tiktok\" \"yt\"    \n\n[[310]]\n[1] \"fb\"  \"rtl\" \"gs\" \n\n[[311]]\n[1] \"blog\" \"yt\"   \"fb\"   \"gs\"  \n\n[[312]]\n[1] \"rtl\"\n\n[[313]]\n[1] \"yt\" \"fb\"\n\n[[314]]\n[1] \"fb\"   \"blog\"\n\n[[315]]\n[1] \"fb\"     \"tiktok\" \"rtl\"    \"blog\"  \n\n[[316]]\n[1] \"gs\"     \"tiktok\" \"rtl\"    \"blog\"  \n\n[[317]]\n[1] \"yt\"  \"gda\" \"rtl\"\n\n[[318]]\n[1] \"yt\"     \"tiktok\" \"rtl\"    \"gda\"    \"blog\"  \n\n[[319]]\n[1] \"gda\" \"fb\" \n\n[[320]]\n[1] \"yt\"   \"blog\" \"gda\" \n\n[[321]]\n[1] \"yt\"\n\n[[322]]\n[1] \"rtl\" \"fb\"  \"gda\"\n\n[[323]]\n[1] \"rtl\" \"gda\" \"gs\" \n\n[[324]]\n[1] \"blog\"\n\n[[325]]\n[1] \"gda\"\n\n[[326]]\n[1] \"tiktok\" \"gda\"    \"fb\"     \"yt\"     \"gs\"    \n\n[[327]]\n[1] \"gs\"\n\n[[328]]\n[1] \"gda\"\n\n[[329]]\n[1] \"gs\"     \"rtl\"    \"tiktok\"\n\n[[330]]\n[1] \"gda\"    \"tiktok\"\n\n[[331]]\n[1] \"gda\"\n\n[[332]]\n[1] \"yt\" \"gs\"\n\n[[333]]\n[1] \"blog\"   \"tiktok\"\n\n[[334]]\n[1] \"gs\"   \"blog\"\n\n[[335]]\n[1] \"gda\"  \"blog\" \"fb\"  \n\n[[336]]\n[1] \"blog\" \"yt\"  \n\n[[337]]\n[1] \"rtl\" \"gs\"  \"yt\" \n\n[[338]]\n[1] \"yt\"  \"rtl\" \"gs\" \n\n[[339]]\n[1] \"gs\"     \"yt\"     \"blog\"   \"tiktok\" \"fb\"    \n\n[[340]]\n[1] \"rtl\" \"gs\" \n\n[[341]]\n[1] \"tiktok\" \"blog\"   \"gda\"    \"yt\"    \n\n[[342]]\n[1] \"rtl\"\n\n[[343]]\n[1] \"tiktok\" \"blog\"   \"fb\"     \"gda\"   \n\n[[344]]\n[1] \"gda\" \"rtl\" \"fb\" \n\n[[345]]\n[1] \"fb\"  \"gda\" \"gs\" \n\n[[346]]\n[1] \"fb\"     \"tiktok\"\n\n[[347]]\n[1] \"tiktok\" \"gs\"     \"fb\"     \"yt\"     \"blog\"  \n\n[[348]]\n[1] \"rtl\" \"yt\"  \"fb\" \n\n[[349]]\n[1] \"tiktok\" \"gs\"     \"rtl\"    \"fb\"     \"blog\"  \n\n[[350]]\n[1] \"gs\"  \"rtl\"\n\n[[351]]\n[1] \"fb\" \"yt\"\n\n[[352]]\n[1] \"yt\"     \"tiktok\" \"rtl\"   \n\n[[353]]\n[1] \"yt\"   \"fb\"   \"rtl\"  \"blog\"\n\n[[354]]\n[1] \"gda\" \"rtl\"\n\n[[355]]\n[1] \"gs\"     \"tiktok\" \"blog\"   \"yt\"     \"gda\"   \n\n[[356]]\n[1] \"fb\"     \"gs\"     \"tiktok\" \"blog\"  \n\n[[357]]\n[1] \"tiktok\"\n\n[[358]]\n[1] \"tiktok\"\n\n[[359]]\n[1] \"gda\"    \"gs\"     \"rtl\"    \"tiktok\" \"yt\"    \n\n[[360]]\n[1] \"fb\"   \"yt\"   \"blog\" \"gs\"  \n\n[[361]]\n[1] \"tiktok\" \"yt\"    \n\n[[362]]\n[1] \"gda\"    \"blog\"   \"yt\"     \"tiktok\" \"fb\"    \n\n[[363]]\n[1] \"fb\"     \"tiktok\"\n\n[[364]]\n[1] \"fb\"  \"gda\"\n\n[[365]]\n[1] \"rtl\"\n\n[[366]]\n[1] \"blog\" \"gda\" \n\n[[367]]\n[1] \"yt\"     \"tiktok\" \"blog\"   \"gda\"    \"fb\"    \n\n[[368]]\n[1] \"tiktok\"\n\n[[369]]\n[1] \"gs\"\n\n[[370]]\n[1] \"gs\"   \"fb\"   \"yt\"   \"blog\"\n\n[[371]]\n[1] \"fb\"     \"tiktok\" \"rtl\"    \"gda\"   \n\n[[372]]\n[1] \"rtl\" \"yt\"  \"fb\"  \"gs\" \n\n[[373]]\n[1] \"gs\"  \"gda\" \"fb\"  \"rtl\" \"yt\" \n\n[[374]]\n[1] \"tiktok\"\n\n[[375]]\n[1] \"rtl\"\n\n[[376]]\n[1] \"tiktok\" \"blog\"  \n\n[[377]]\n[1] \"rtl\"    \"yt\"     \"tiktok\" \"gda\"   \n\n[[378]]\n[1] \"yt\"   \"blog\"\n\n[[379]]\n[1] \"gda\"  \"yt\"   \"blog\" \"rtl\" \n\n[[380]]\n[1] \"gda\"\n\n[[381]]\n[1] \"gs\"  \"gda\" \"fb\"  \"yt\"  \"rtl\"\n\n[[382]]\n[1] \"tiktok\" \"rtl\"    \"yt\"     \"gs\"    \n\n[[383]]\n[1] \"gs\"  \"gda\" \"yt\" \n\n[[384]]\n[1] \"fb\"  \"yt\"  \"rtl\"\n\n[[385]]\n[1] \"gs\"  \"rtl\" \"yt\"  \"gda\"\n\n[[386]]\n[1] \"rtl\"    \"gs\"     \"tiktok\" \"blog\"   \"gda\"   \n\n[[387]]\n[1] \"fb\"     \"rtl\"    \"tiktok\" \"gs\"    \n\n[[388]]\n[1] \"tiktok\"\n\n[[389]]\n[1] \"yt\"     \"gs\"     \"gda\"    \"tiktok\"\n\n[[390]]\n[1] \"yt\"     \"fb\"     \"tiktok\"\n\n[[391]]\n[1] \"yt\"     \"gda\"    \"rtl\"    \"blog\"   \"tiktok\"\n\n[[392]]\n[1] \"tiktok\" \"gs\"    \n\n[[393]]\n[1] \"gs\"   \"rtl\"  \"blog\"\n\n[[394]]\n[1] \"fb\"     \"tiktok\" \"blog\"   \"rtl\"   \n\n[[395]]\n[1] \"fb\"\n\n[[396]]\n[1] \"fb\"\n\n[[397]]\n[1] \"fb\"\n\n[[398]]\n[1] \"gda\"  \"gs\"   \"blog\"\n\n[[399]]\n[1] \"fb\"\n\n[[400]]\n[1] \"rtl\"  \"blog\" \"gda\" \n\n[[401]]\n[1] \"tiktok\" \"rtl\"   \n\n[[402]]\n[1] \"rtl\"\n\n[[403]]\n[1] \"rtl\"\n\n[[404]]\n[1] \"gs\"  \"yt\"  \"fb\"  \"rtl\" \"gda\"\n\n[[405]]\n[1] \"fb\" \"gs\"\n\n[[406]]\n[1] \"yt\"   \"fb\"   \"gs\"   \"blog\" \"gda\" \n\n[[407]]\n[1] \"blog\"   \"yt\"     \"rtl\"    \"tiktok\"\n\n[[408]]\n[1] \"yt\"\n\n[[409]]\n[1] \"gda\"\n\n[[410]]\n[1] \"gs\"  \"yt\"  \"gda\"\n\n[[411]]\n[1] \"yt\" \"fb\"\n\n[[412]]\n[1] \"rtl\" \"gs\" \n\n[[413]]\n[1] \"gda\" \"gs\" \n\n[[414]]\n[1] \"gs\"     \"tiktok\"\n\n[[415]]\n[1] \"gda\" \"rtl\" \"gs\"  \"fb\" \n\n[[416]]\n[1] \"gs\"   \"blog\" \"fb\"  \n\n[[417]]\n[1] \"yt\"\n\n[[418]]\n[1] \"gs\"\n\n[[419]]\n[1] \"yt\"   \"rtl\"  \"blog\" \"gs\"   \"gda\" \n\n[[420]]\n[1] \"blog\"   \"tiktok\" \"yt\"     \"gda\"   \n\n[[421]]\n[1] \"gda\"  \"blog\"\n\n[[422]]\n[1] \"gs\"   \"gda\"  \"blog\" \"yt\"  \n\n[[423]]\n[1] \"yt\"  \"gda\" \"fb\" \n\n[[424]]\n[1] \"gs\"     \"blog\"   \"tiktok\"\n\n[[425]]\n[1] \"tiktok\"\n\n[[426]]\n[1] \"gs\"  \"rtl\"\n\n[[427]]\n[1] \"tiktok\" \"yt\"     \"fb\"     \"gs\"     \"gda\"   \n\n[[428]]\n[1] \"gs\"\n\n[[429]]\n[1] \"gs\"     \"tiktok\" \"fb\"     \"rtl\"    \"gda\"   \n\n[[430]]\n[1] \"blog\" \"rtl\"  \"yt\"  \n\n[[431]]\n[1] \"gs\"  \"yt\"  \"gda\"\n\n[[432]]\n[1] \"rtl\"    \"tiktok\" \"fb\"     \"yt\"    \n\n[[433]]\n[1] \"gda\"  \"blog\"\n\n[[434]]\n[1] \"rtl\" \"gda\" \"gs\"  \"yt\"  \"fb\" \n\n[[435]]\n[1] \"rtl\"    \"yt\"     \"tiktok\" \"fb\"    \n\n[[436]]\n[1] \"fb\"   \"blog\" \"yt\"   \"rtl\"  \"gs\"  \n\n[[437]]\n[1] \"yt\"\n\n[[438]]\n[1] \"tiktok\"\n\n[[439]]\n[1] \"tiktok\" \"yt\"     \"blog\"   \"gs\"     \"fb\"    \n\n[[440]]\n[1] \"yt\"\n\n[[441]]\n[1] \"gda\" \"yt\" \n\n[[442]]\n[1] \"gs\"   \"fb\"   \"blog\" \"yt\"  \n\n[[443]]\n[1] \"yt\"     \"tiktok\" \"gda\"    \"rtl\"    \"gs\"    \n\n[[444]]\n[1] \"blog\" \"rtl\" \n\n[[445]]\n[1] \"fb\"     \"tiktok\" \"blog\"   \"gs\"    \n\n[[446]]\n[1] \"tiktok\" \"yt\"     \"rtl\"    \"gs\"    \n\n[[447]]\n[1] \"gs\"\n\n[[448]]\n[1] \"fb\"     \"gs\"     \"rtl\"    \"tiktok\"\n\n[[449]]\n[1] \"gda\"    \"blog\"   \"yt\"     \"fb\"     \"tiktok\"\n\n[[450]]\n[1] \"fb\" \"yt\"\n\n[[451]]\n[1] \"yt\"   \"gda\"  \"blog\" \"fb\"  \n\n[[452]]\n[1] \"tiktok\"\n\n[[453]]\n[1] \"blog\"   \"tiktok\" \"gs\"     \"rtl\"    \"gda\"   \n\n[[454]]\n[1] \"fb\"\n\n[[455]]\n[1] \"rtl\"\n\n[[456]]\n[1] \"yt\"   \"gs\"   \"blog\" \"rtl\"  \"gda\" \n\n[[457]]\n[1] \"gda\"    \"gs\"     \"yt\"     \"tiktok\"\n\n[[458]]\n[1] \"yt\"\n\n[[459]]\n[1] \"fb\"   \"rtl\"  \"gs\"   \"blog\"\n\n[[460]]\n[1] \"rtl\"\n\n[[461]]\n[1] \"blog\"\n\n[[462]]\n[1] \"rtl\" \"gs\"  \"gda\"\n\n[[463]]\n[1] \"yt\"     \"tiktok\" \"blog\"   \"gda\"    \"rtl\"   \n\n[[464]]\n[1] \"fb\"     \"gs\"     \"yt\"     \"rtl\"    \"tiktok\"\n\n[[465]]\n[1] \"blog\"\n\n[[466]]\n[1] \"yt\"  \"rtl\"\n\n[[467]]\n[1] \"gs\"\n\n[[468]]\n[1] \"tiktok\" \"blog\"   \"yt\"    \n\n[[469]]\n[1] \"rtl\"  \"gs\"   \"blog\" \"yt\"  \n\n[[470]]\n[1] \"gs\"     \"gda\"    \"tiktok\" \"rtl\"    \"fb\"    \n\n[[471]]\n[1] \"fb\"   \"blog\" \"gda\"  \"yt\"  \n\n[[472]]\n[1] \"gs\"\n\n[[473]]\n[1] \"rtl\"\n\n[[474]]\n[1] \"tiktok\" \"blog\"   \"gs\"     \"rtl\"    \"gda\"   \n\n[[475]]\n[1] \"yt\"\n\n[[476]]\n[1] \"gda\"    \"tiktok\"\n\n[[477]]\n[1] \"gda\"    \"rtl\"    \"tiktok\" \"yt\"     \"blog\"  \n\n[[478]]\n[1] \"gda\"    \"blog\"   \"tiktok\" \"yt\"     \"rtl\"   \n\n[[479]]\n[1] \"fb\" \"gs\"\n\n[[480]]\n[1] \"gs\"  \"rtl\" \"fb\"  \"gda\" \"yt\" \n\n[[481]]\n[1] \"gda\"    \"gs\"     \"tiktok\"\n\n[[482]]\n[1] \"gda\"    \"tiktok\"\n\n[[483]]\n[1] \"gs\"  \"gda\" \"rtl\"\n\n[[484]]\n[1] \"yt\"  \"rtl\" \"gda\"\n\n[[485]]\n[1] \"gs\"     \"fb\"     \"yt\"     \"gda\"    \"tiktok\"\n\n[[486]]\n[1] \"yt\"\n\n[[487]]\n[1] \"tiktok\" \"rtl\"   \n\n[[488]]\n[1] \"rtl\"    \"gs\"     \"tiktok\" \"gda\"   \n\n[[489]]\n[1] \"gs\" \"yt\"\n\n[[490]]\n[1] \"tiktok\" \"fb\"     \"rtl\"    \"gda\"   \n\n[[491]]\n[1] \"blog\"   \"gs\"     \"tiktok\" \"gda\"    \"yt\"    \n\n[[492]]\n[1] \"fb\"  \"yt\"  \"rtl\" \"gda\"\n\n[[493]]\n[1] \"rtl\"    \"gda\"    \"yt\"     \"tiktok\" \"blog\"  \n\n[[494]]\n[1] \"blog\"   \"yt\"     \"fb\"     \"gda\"    \"tiktok\"\n\n[[495]]\n[1] \"rtl\"    \"tiktok\"\n\n[[496]]\n[1] \"gda\"  \"fb\"   \"blog\" \"rtl\"  \"gs\"  \n\n[[497]]\n[1] \"fb\"     \"gda\"    \"tiktok\"\n\n[[498]]\n[1] \"rtl\"  \"blog\" \"gs\"  \n\n[[499]]\n[1] \"blog\"   \"tiktok\"\n\n[[500]]\n[1] \"fb\"\n\n[[501]]\n[1] \"gs\" \"fb\"\n\n[[502]]\n[1] \"fb\"     \"blog\"   \"tiktok\"\n\n[[503]]\n[1] \"gs\"     \"tiktok\" \"fb\"     \"blog\"   \"gda\"   \n\n[[504]]\n[1] \"yt\"   \"rtl\"  \"gs\"   \"blog\"\n\n[[505]]\n[1] \"fb\"     \"gda\"    \"yt\"     \"tiktok\" \"rtl\"   \n\n[[506]]\n[1] \"gs\"     \"blog\"   \"tiktok\" \"gda\"    \"rtl\"   \n\n[[507]]\n[1] \"gda\" \"yt\"  \"gs\"  \"fb\" \n\n[[508]]\n[1] \"yt\"     \"fb\"     \"gda\"    \"tiktok\" \"blog\"  \n\n[[509]]\n[1] \"yt\"     \"tiktok\" \"gs\"     \"gda\"    \"blog\"  \n\n[[510]]\n[1] \"blog\"   \"fb\"     \"tiktok\" \"gs\"     \"gda\"   \n\n[[511]]\n[1] \"blog\" \"fb\"  \n\n[[512]]\n[1] \"gs\"     \"rtl\"    \"fb\"     \"tiktok\"\n\n[[513]]\n[1] \"rtl\"\n\n[[514]]\n[1] \"gs\"     \"yt\"     \"gda\"    \"fb\"     \"tiktok\"\n\n[[515]]\n[1] \"tiktok\" \"fb\"     \"gda\"    \"yt\"    \n\n[[516]]\n[1] \"yt\"     \"fb\"     \"rtl\"    \"tiktok\" \"gda\"   \n\n[[517]]\n[1] \"fb\"   \"blog\" \"yt\"   \"gda\" \n\n[[518]]\n[1] \"tiktok\" \"gda\"    \"fb\"     \"blog\"   \"yt\"    \n\n[[519]]\n[1] \"rtl\"    \"fb\"     \"tiktok\" \"gs\"    \n\n[[520]]\n[1] \"gs\"  \"rtl\"\n\n[[521]]\n[1] \"blog\"\n\n[[522]]\n[1] \"yt\"     \"tiktok\" \"fb\"     \"gda\"   \n\n[[523]]\n[1] \"gs\"   \"blog\"\n\n[[524]]\n[1] \"fb\"     \"tiktok\" \"gs\"    \n\n[[525]]\n[1] \"tiktok\" \"yt\"    \n\n[[526]]\n[1] \"gda\"    \"rtl\"    \"tiktok\" \"yt\"     \"fb\"    \n\n[[527]]\n[1] \"tiktok\" \"fb\"     \"gs\"     \"yt\"     \"blog\"  \n\n[[528]]\n[1] \"rtl\"    \"yt\"     \"gda\"    \"tiktok\"\n\n[[529]]\n[1] \"rtl\"  \"yt\"   \"blog\" \"gda\"  \"fb\"  \n\n[[530]]\n[1] \"blog\"   \"rtl\"    \"yt\"     \"fb\"     \"tiktok\"\n\n[[531]]\n[1] \"yt\"   \"rtl\"  \"blog\"\n\n[[532]]\n[1] \"yt\"  \"gs\"  \"rtl\"\n\n[[533]]\n[1] \"fb\"\n\n[[534]]\n[1] \"tiktok\" \"fb\"     \"gs\"     \"rtl\"   \n\n[[535]]\n[1] \"blog\" \"gda\"  \"gs\"  \n\n[[536]]\n[1] \"gs\" \"yt\" \"fb\"\n\n[[537]]\n[1] \"rtl\" \"gs\"  \"fb\"  \"gda\" \"yt\" \n\n[[538]]\n[1] \"blog\" \"rtl\"  \"gda\"  \"fb\"  \n\n[[539]]\n[1] \"rtl\" \"gda\" \"fb\" \n\n[[540]]\n[1] \"gs\"     \"tiktok\" \"gda\"    \"rtl\"   \n\n[[541]]\n[1] \"tiktok\" \"gda\"    \"yt\"     \"fb\"     \"rtl\"   \n\n[[542]]\n[1] \"gs\" \"yt\"\n\n[[543]]\n[1] \"fb\"  \"rtl\" \"gs\" \n\n[[544]]\n[1] \"gs\"\n\n[[545]]\n[1] \"tiktok\" \"gs\"     \"yt\"     \"fb\"    \n\n[[546]]\n[1] \"rtl\"  \"blog\"\n\n[[547]]\n[1] \"gda\"\n\n[[548]]\n[1] \"rtl\" \"gda\" \"yt\" \n\n[[549]]\n[1] \"fb\"     \"tiktok\" \"blog\"  \n\n[[550]]\n[1] \"blog\" \"gs\"  \n\n[[551]]\n[1] \"yt\"  \"rtl\"\n\n[[552]]\n[1] \"tiktok\"\n\n[[553]]\n[1] \"blog\" \"gs\"   \"yt\"   \"gda\" \n\n[[554]]\n[1] \"gs\"\n\n[[555]]\n[1] \"rtl\" \"gda\"\n\n[[556]]\n[1] \"gs\"   \"blog\" \"yt\"   \"rtl\" \n\n[[557]]\n[1] \"gs\"     \"tiktok\" \"yt\"     \"gda\"   \n\n[[558]]\n[1] \"tiktok\" \"blog\"   \"gs\"     \"fb\"     \"yt\"    \n\n[[559]]\n[1] \"yt\"     \"gda\"    \"rtl\"    \"blog\"   \"tiktok\"\n\n[[560]]\n[1] \"rtl\"  \"fb\"   \"blog\" \"yt\"  \n\n[[561]]\n[1] \"fb\"     \"rtl\"    \"gs\"     \"tiktok\" \"blog\"  \n\n[[562]]\n[1] \"fb\"   \"gs\"   \"rtl\"  \"blog\" \"gda\" \n\n[[563]]\n[1] \"fb\"     \"gda\"    \"tiktok\"\n\n[[564]]\n[1] \"fb\"     \"tiktok\" \"gda\"   \n\n[[565]]\n[1] \"blog\"   \"tiktok\"\n\n[[566]]\n[1] \"gda\" \"gs\"  \"fb\" \n\n[[567]]\n[1] \"gda\"\n\n[[568]]\n[1] \"gda\" \"gs\"  \"fb\" \n\n[[569]]\n[1] \"rtl\" \"gda\" \"yt\"  \"gs\" \n\n[[570]]\n[1] \"yt\"  \"rtl\"\n\n[[571]]\n[1] \"yt\"     \"gda\"    \"tiktok\"\n\n[[572]]\n[1] \"rtl\" \"gs\"  \"yt\" \n\n[[573]]\n[1] \"blog\" \"gda\" \n\n[[574]]\n[1] \"rtl\"    \"gda\"    \"tiktok\" \"fb\"    \n\n[[575]]\n[1] \"gda\"  \"fb\"   \"blog\"\n\n[[576]]\n[1] \"gs\"\n\n[[577]]\n[1] \"gda\"\n\n[[578]]\n[1] \"gs\"   \"blog\" \"rtl\" \n\n[[579]]\n[1] \"gs\"  \"fb\"  \"gda\" \"rtl\"\n\n[[580]]\n[1] \"tiktok\" \"gs\"     \"gda\"    \"rtl\"   \n\n[[581]]\n[1] \"fb\"   \"blog\" \"yt\"  \n\n[[582]]\n[1] \"yt\"  \"rtl\"\n\n[[583]]\n[1] \"yt\"  \"rtl\"\n\n[[584]]\n[1] \"blog\"   \"tiktok\"\n\n[[585]]\n[1] \"fb\" \"yt\"\n\n[[586]]\n[1] \"gs\"\n\n[[587]]\n[1] \"gda\"    \"tiktok\" \"fb\"     \"yt\"    \n\n[[588]]\n[1] \"rtl\"    \"tiktok\" \"gs\"    \n\n[[589]]\n[1] \"rtl\" \"gs\"  \"fb\"  \"gda\"\n\n[[590]]\n[1] \"fb\"  \"gda\" \"gs\" \n\n[[591]]\n[1] \"yt\"\n\n[[592]]\n[1] \"tiktok\" \"yt\"    \n\n[[593]]\n[1] \"gda\"    \"tiktok\" \"blog\"  \n\n[[594]]\n[1] \"blog\"   \"rtl\"    \"tiktok\" \"fb\"     \"gda\"   \n\n[[595]]\n[1] \"yt\"     \"blog\"   \"gs\"     \"gda\"    \"tiktok\"\n\n[[596]]\n[1] \"gs\"  \"rtl\" \"fb\" \n\n[[597]]\n[1] \"blog\" \"gda\"  \"rtl\"  \"fb\"  \n\n[[598]]\n[1] \"gs\"\n\n[[599]]\n[1] \"yt\"     \"rtl\"    \"tiktok\" \"gs\"     \"gda\"   \n\n[[600]]\n[1] \"gs\"  \"gda\" \"rtl\"\n\n[[601]]\n[1] \"rtl\"    \"gda\"    \"tiktok\"\n\n[[602]]\n[1] \"fb\"     \"rtl\"    \"gs\"     \"blog\"   \"tiktok\"\n\n[[603]]\n[1] \"rtl\"\n\n[[604]]\n[1] \"blog\"\n\n[[605]]\n[1] \"fb\"\n\n[[606]]\n[1] \"tiktok\" \"yt\"    \n\n[[607]]\n[1] \"blog\" \"fb\"  \n\n[[608]]\n[1] \"rtl\"    \"tiktok\" \"blog\"  \n\n[[609]]\n[1] \"gs\"   \"blog\"\n\n[[610]]\n[1] \"fb\"   \"blog\"\n\n[[611]]\n[1] \"gs\"   \"fb\"   \"rtl\"  \"blog\" \"yt\"  \n\n[[612]]\n[1] \"rtl\"    \"blog\"   \"tiktok\"\n\n[[613]]\n[1] \"gs\"     \"tiktok\" \"blog\"   \"fb\"     \"rtl\"   \n\n[[614]]\n[1] \"gda\"\n\n[[615]]\n[1] \"yt\"  \"rtl\" \"fb\" \n\n[[616]]\n[1] \"yt\"  \"gda\"\n\n[[617]]\n[1] \"blog\"\n\n[[618]]\n[1] \"gda\"\n\n[[619]]\n[1] \"gs\"\n\n[[620]]\n[1] \"gs\"  \"gda\" \"yt\"  \"fb\" \n\n[[621]]\n[1] \"gs\"  \"gda\"\n\n[[622]]\n[1] \"fb\"     \"rtl\"    \"tiktok\"\n\n[[623]]\n[1] \"gda\"\n\n[[624]]\n[1] \"yt\"\n\n[[625]]\n[1] \"gda\"\n\n[[626]]\n[1] \"blog\" \"yt\"   \"gs\"   \"fb\"  \n\n[[627]]\n[1] \"tiktok\" \"gda\"    \"fb\"     \"rtl\"    \"gs\"    \n\n[[628]]\n[1] \"gda\"  \"blog\" \"yt\"   \"fb\"   \"gs\"  \n\n[[629]]\n[1] \"rtl\"  \"blog\" \"yt\"  \n\n[[630]]\n[1] \"blog\" \"fb\"   \"rtl\" \n\n[[631]]\n[1] \"gs\"     \"tiktok\" \"blog\"  \n\n[[632]]\n[1] \"yt\"     \"tiktok\"\n\n[[633]]\n[1] \"yt\"     \"gda\"    \"tiktok\" \"blog\"  \n\n[[634]]\n[1] \"yt\"     \"tiktok\" \"fb\"     \"gs\"     \"gda\"   \n\n[[635]]\n[1] \"rtl\"  \"blog\" \"fb\"  \n\n[[636]]\n[1] \"fb\"  \"gda\"\n\n[[637]]\n[1] \"tiktok\" \"yt\"     \"rtl\"   \n\n[[638]]\n[1] \"gs\"   \"blog\" \"gda\"  \"fb\"  \n\n[[639]]\n[1] \"gda\"  \"blog\" \"rtl\" \n\n[[640]]\n[1] \"fb\" \"yt\"\n\n[[641]]\n[1] \"blog\" \"fb\"  \n\n[[642]]\n[1] \"gs\"\n\n[[643]]\n[1] \"fb\" \"yt\"\n\n[[644]]\n[1] \"tiktok\"\n\n[[645]]\n[1] \"gs\"\n\n[[646]]\n[1] \"gs\"     \"tiktok\" \"gda\"    \"fb\"     \"yt\"    \n\n[[647]]\n[1] \"gda\"    \"tiktok\" \"gs\"     \"rtl\"   \n\n[[648]]\n[1] \"fb\"     \"yt\"     \"tiktok\" \"blog\"  \n\n[[649]]\n[1] \"fb\"   \"blog\"\n\n[[650]]\n[1] \"gda\"\n\n[[651]]\n[1] \"gs\"  \"gda\"\n\n[[652]]\n[1] \"rtl\" \"gs\" \n\n[[653]]\n[1] \"fb\"     \"tiktok\" \"blog\"   \"gda\"   \n\n[[654]]\n[1] \"yt\" \"fb\"\n\n[[655]]\n[1] \"gda\" \"yt\"  \"gs\" \n\n[[656]]\n[1] \"fb\"   \"yt\"   \"blog\" \"rtl\" \n\n[[657]]\n[1] \"rtl\" \"fb\" \n\n[[658]]\n[1] \"gda\"\n\n[[659]]\n[1] \"tiktok\" \"rtl\"   \n\n[[660]]\n[1] \"blog\"\n\n[[661]]\n[1] \"blog\" \"fb\"  \n\n[[662]]\n[1] \"blog\"   \"rtl\"    \"gda\"    \"tiktok\"\n\n[[663]]\n[1] \"gs\"     \"tiktok\" \"blog\"  \n\n[[664]]\n[1] \"tiktok\" \"fb\"     \"gs\"     \"yt\"     \"rtl\"   \n\n[[665]]\n[1] \"fb\"     \"gs\"     \"tiktok\"\n\n[[666]]\n[1] \"tiktok\" \"fb\"     \"rtl\"    \"yt\"    \n\n[[667]]\n[1] \"gda\"\n\n[[668]]\n[1] \"gda\"    \"tiktok\"\n\n[[669]]\n[1] \"tiktok\" \"fb\"     \"blog\"   \"gs\"     \"gda\"   \n\n[[670]]\n[1] \"gda\"  \"blog\"\n\n[[671]]\n[1] \"yt\"   \"rtl\"  \"blog\"\n\n[[672]]\n[1] \"gda\"\n\n[[673]]\n[1] \"rtl\"\n\n[[674]]\n[1] \"yt\"   \"gda\"  \"fb\"   \"blog\"\n\n[[675]]\n[1] \"rtl\"\n\n[[676]]\n[1] \"blog\"\n\n[[677]]\n[1] \"fb\"   \"blog\" \"rtl\"  \"yt\"   \"gs\"  \n\n[[678]]\n[1] \"rtl\"\n\n[[679]]\n[1] \"yt\"     \"rtl\"    \"tiktok\"\n\n[[680]]\n[1] \"gs\"     \"rtl\"    \"yt\"     \"blog\"   \"tiktok\"\n\n[[681]]\n[1] \"yt\"     \"gs\"     \"tiktok\" \"rtl\"    \"fb\"    \n\n[[682]]\n[1] \"gda\"    \"yt\"     \"gs\"     \"tiktok\" \"blog\"  \n\n[[683]]\n[1] \"blog\" \"gda\"  \"yt\"   \"rtl\" \n\n[[684]]\n[1] \"gda\" \"rtl\" \"yt\"  \"fb\" \n\n[[685]]\n[1] \"gda\"    \"tiktok\" \"rtl\"    \"yt\"    \n\n[[686]]\n[1] \"rtl\" \"gs\"  \"fb\"  \"yt\" \n\n[[687]]\n[1] \"fb\"   \"blog\"\n\n[[688]]\n[1] \"rtl\"\n\n[[689]]\n[1] \"fb\"     \"tiktok\" \"blog\"  \n\n[[690]]\n[1] \"gda\"    \"gs\"     \"fb\"     \"tiktok\" \"blog\"  \n\n[[691]]\n[1] \"rtl\"    \"tiktok\" \"blog\"   \"gda\"   \n\n[[692]]\n[1] \"blog\"\n\n[[693]]\n[1] \"fb\"\n\n[[694]]\n[1] \"blog\"   \"rtl\"    \"gs\"     \"tiktok\" \"gda\"   \n\n[[695]]\n[1] \"gda\" \"yt\"  \"gs\"  \"fb\" \n\n[[696]]\n[1] \"rtl\"    \"yt\"     \"tiktok\" \"fb\"    \n\n[[697]]\n[1] \"blog\" \"yt\"   \"gs\"  \n\n[[698]]\n[1] \"rtl\"    \"blog\"   \"gda\"    \"tiktok\"\n\n[[699]]\n[1] \"rtl\"  \"gs\"   \"blog\"\n\n[[700]]\n[1] \"yt\"\n\n[[701]]\n[1] \"fb\"\n\n[[702]]\n[1] \"tiktok\" \"blog\"   \"gda\"    \"gs\"    \n\n[[703]]\n[1] \"gda\"    \"fb\"     \"tiktok\" \"blog\"   \"gs\"    \n\n[[704]]\n[1] \"blog\"\n\n[[705]]\n[1] \"rtl\"\n\n[[706]]\n[1] \"tiktok\" \"yt\"     \"fb\"     \"rtl\"   \n\n[[707]]\n[1] \"yt\"   \"gs\"   \"gda\"  \"blog\" \"rtl\" \n\n[[708]]\n[1] \"rtl\"\n\n[[709]]\n[1] \"fb\"\n\n[[710]]\n[1] \"fb\" \"yt\"\n\n[[711]]\n[1] \"rtl\"    \"gda\"    \"blog\"   \"tiktok\"\n\n[[712]]\n[1] \"gs\" \"fb\"\n\n[[713]]\n[1] \"blog\" \"gs\"   \"fb\"  \n\n[[714]]\n[1] \"gs\"  \"fb\"  \"rtl\"\n\n[[715]]\n[1] \"blog\"\n\n[[716]]\n[1] \"gs\"\n\n[[717]]\n[1] \"yt\"     \"gs\"     \"blog\"   \"tiktok\" \"rtl\"   \n\n[[718]]\n[1] \"tiktok\" \"gs\"     \"blog\"  \n\n[[719]]\n[1] \"tiktok\" \"yt\"    \n\n[[720]]\n[1] \"yt\"     \"fb\"     \"rtl\"    \"tiktok\"\n\n[[721]]\n[1] \"rtl\"\n\n[[722]]\n[1] \"gda\"  \"blog\" \"yt\"   \"fb\"  \n\n[[723]]\n[1] \"gda\"\n\n[[724]]\n[1] \"rtl\"\n\n[[725]]\n[1] \"tiktok\" \"blog\"   \"gda\"    \"gs\"     \"yt\"    \n\n[[726]]\n[1] \"blog\" \"yt\"  \n\n[[727]]\n[1] \"tiktok\" \"yt\"     \"gs\"    \n\n[[728]]\n[1] \"tiktok\" \"rtl\"    \"gda\"    \"yt\"    \n\n[[729]]\n[1] \"gs\"\n\n[[730]]\n[1] \"yt\"     \"rtl\"    \"blog\"   \"tiktok\"\n\n[[731]]\n[1] \"fb\"     \"blog\"   \"gs\"     \"yt\"     \"tiktok\"\n\n[[732]]\n[1] \"gs\"     \"tiktok\" \"blog\"  \n\n[[733]]\n[1] \"tiktok\" \"blog\"   \"rtl\"    \"yt\"     \"gda\"   \n\n[[734]]\n[1] \"tiktok\" \"fb\"     \"gs\"     \"gda\"    \"blog\"  \n\n[[735]]\n[1] \"gda\"    \"tiktok\" \"yt\"    \n\n[[736]]\n[1] \"gs\" \"yt\"\n\n[[737]]\n[1] \"gda\"    \"yt\"     \"blog\"   \"tiktok\" \"fb\"    \n\n[[738]]\n[1] \"yt\"     \"blog\"   \"rtl\"    \"tiktok\" \"gs\"    \n\n[[739]]\n[1] \"fb\" \"yt\"\n\n[[740]]\n[1] \"fb\"  \"gda\" \"gs\"  \"yt\" \n\n[[741]]\n[1] \"gda\"  \"yt\"   \"blog\"\n\n[[742]]\n[1] \"fb\" \"gs\"\n\n[[743]]\n[1] \"fb\"  \"gs\"  \"yt\"  \"rtl\"\n\n[[744]]\n[1] \"blog\"   \"tiktok\" \"rtl\"    \"gs\"     \"yt\"    \n\n[[745]]\n[1] \"rtl\"  \"gda\"  \"gs\"   \"fb\"   \"blog\"\n\n[[746]]\n[1] \"rtl\"    \"tiktok\"\n\n[[747]]\n[1] \"tiktok\" \"fb\"     \"blog\"   \"rtl\"   \n\n[[748]]\n[1] \"rtl\"  \"yt\"   \"fb\"   \"blog\" \"gs\"  \n\n[[749]]\n[1] \"gda\"\n\n[[750]]\n[1] \"gs\"     \"gda\"    \"tiktok\" \"yt\"     \"rtl\"   \n\n[[751]]\n[1] \"yt\"     \"blog\"   \"fb\"     \"rtl\"    \"tiktok\"\n\n[[752]]\n[1] \"gda\"  \"blog\"\n\n[[753]]\n[1] \"yt\"  \"fb\"  \"gs\"  \"gda\"\n\n[[754]]\n[1] \"fb\"   \"yt\"   \"blog\"\n\n[[755]]\n[1] \"blog\"   \"tiktok\" \"fb\"    \n\n[[756]]\n[1] \"gda\"    \"fb\"     \"gs\"     \"tiktok\"\n\n[[757]]\n[1] \"tiktok\"\n\n[[758]]\n[1] \"fb\"   \"blog\"\n\n[[759]]\n[1] \"yt\"  \"gda\" \"rtl\"\n\n[[760]]\n[1] \"tiktok\" \"fb\"     \"yt\"     \"blog\"  \n\n[[761]]\n[1] \"rtl\" \"gs\" \n\n[[762]]\n[1] \"rtl\"    \"blog\"   \"yt\"     \"fb\"     \"tiktok\"\n\n[[763]]\n[1] \"gs\"     \"gda\"    \"yt\"     \"fb\"     \"tiktok\"\n\n[[764]]\n[1] \"rtl\"    \"tiktok\" \"fb\"     \"blog\"   \"gs\"    \n\n[[765]]\n[1] \"rtl\"  \"blog\" \"gs\"   \"gda\"  \"fb\"  \n\n[[766]]\n[1] \"gda\"    \"gs\"     \"rtl\"    \"tiktok\"\n\n[[767]]\n[1] \"fb\" \"yt\" \"gs\"\n\n[[768]]\n[1] \"yt\"  \"gda\" \"fb\"  \"rtl\"\n\n[[769]]\n[1] \"tiktok\"\n\n[[770]]\n[1] \"gs\" \"yt\"\n\n[[771]]\n[1] \"gda\"\n\n[[772]]\n[1] \"gda\"  \"gs\"   \"yt\"   \"fb\"   \"blog\"\n\n[[773]]\n[1] \"tiktok\"\n\n[[774]]\n[1] \"gs\"     \"tiktok\" \"blog\"  \n\n[[775]]\n[1] \"fb\"\n\n[[776]]\n[1] \"fb\"   \"rtl\"  \"gda\"  \"blog\" \"yt\"  \n\n[[777]]\n[1] \"gda\" \"gs\"  \"fb\"  \"rtl\" \"yt\" \n\n[[778]]\n[1] \"rtl\"    \"gda\"    \"yt\"     \"blog\"   \"tiktok\"\n\n[[779]]\n[1] \"tiktok\" \"fb\"     \"gs\"     \"gda\"   \n\n[[780]]\n[1] \"tiktok\" \"yt\"     \"blog\"   \"gda\"   \n\n[[781]]\n[1] \"yt\"     \"tiktok\" \"rtl\"    \"blog\"   \"gda\"   \n\n[[782]]\n[1] \"gs\"   \"yt\"   \"blog\" \"fb\"   \"gda\" \n\n[[783]]\n[1] \"yt\"   \"blog\" \"gs\"   \"fb\"   \"rtl\" \n\n[[784]]\n[1] \"gda\"    \"tiktok\"\n\n[[785]]\n[1] \"tiktok\" \"gda\"    \"fb\"    \n\n[[786]]\n[1] \"gs\"  \"rtl\" \"yt\"  \"fb\" \n\n[[787]]\n[1] \"tiktok\" \"rtl\"   \n\n[[788]]\n[1] \"blog\" \"fb\"   \"yt\"   \"rtl\" \n\n[[789]]\n[1] \"fb\"     \"tiktok\" \"yt\"    \n\n[[790]]\n[1] \"gda\" \"yt\" \n\n[[791]]\n[1] \"fb\" \"yt\"\n\n[[792]]\n[1] \"yt\"  \"gda\"\n\n[[793]]\n[1] \"tiktok\" \"gda\"   \n\n[[794]]\n[1] \"gda\"\n\n[[795]]\n[1] \"rtl\" \"gs\" \n\n[[796]]\n[1] \"blog\"   \"tiktok\" \"fb\"     \"gs\"    \n\n[[797]]\n[1] \"yt\"     \"tiktok\" \"fb\"     \"gda\"    \"rtl\"   \n\n[[798]]\n[1] \"gs\"\n\n[[799]]\n[1] \"rtl\"  \"blog\" \"fb\"   \"gs\"   \"yt\"  \n\n[[800]]\n[1] \"yt\"\n\n[[801]]\n[1] \"gs\"     \"tiktok\"\n\n[[802]]\n[1] \"tiktok\" \"blog\"   \"fb\"     \"yt\"     \"rtl\"   \n\n[[803]]\n[1] \"gda\"  \"fb\"   \"blog\" \"yt\"  \n\n[[804]]\n[1] \"yt\"     \"tiktok\"\n\n[[805]]\n[1] \"gda\"    \"yt\"     \"tiktok\" \"gs\"    \n\n[[806]]\n[1] \"rtl\"    \"gs\"     \"yt\"     \"tiktok\" \"blog\"  \n\n[[807]]\n[1] \"rtl\" \"gda\" \"yt\"  \"gs\" \n\n[[808]]\n[1] \"fb\"  \"gda\"\n\n[[809]]\n[1] \"gda\"    \"fb\"     \"rtl\"    \"yt\"     \"tiktok\"\n\n[[810]]\n[1] \"gs\"  \"fb\"  \"gda\" \"rtl\"\n\n[[811]]\n[1] \"tiktok\" \"rtl\"    \"blog\"  \n\n[[812]]\n[1] \"tiktok\" \"gs\"     \"yt\"    \n\n[[813]]\n[1] \"gda\"\n\n[[814]]\n[1] \"yt\"\n\n[[815]]\n[1] \"tiktok\" \"yt\"     \"gs\"    \n\n[[816]]\n[1] \"tiktok\" \"gs\"     \"yt\"     \"rtl\"   \n\n[[817]]\n[1] \"rtl\"  \"gs\"   \"blog\" \"fb\"  \n\n[[818]]\n[1] \"gda\"    \"tiktok\" \"fb\"     \"yt\"     \"rtl\"   \n\n[[819]]\n[1] \"fb\"  \"gda\"\n\n[[820]]\n[1] \"rtl\" \"gda\"\n\n[[821]]\n[1] \"fb\"     \"tiktok\" \"gda\"   \n\n[[822]]\n[1] \"gs\"\n\n[[823]]\n[1] \"tiktok\" \"gda\"    \"fb\"     \"blog\"   \"gs\"    \n\n[[824]]\n[1] \"blog\" \"fb\"   \"rtl\" \n\n[[825]]\n[1] \"gda\" \"rtl\"\n\n[[826]]\n[1] \"gs\"     \"yt\"     \"tiktok\"\n\n[[827]]\n[1] \"rtl\"  \"blog\"\n\n[[828]]\n[1] \"tiktok\" \"fb\"     \"gda\"   \n\n[[829]]\n[1] \"blog\" \"gda\" \n\n[[830]]\n[1] \"gs\"   \"yt\"   \"blog\" \"gda\" \n\n[[831]]\n[1] \"rtl\"    \"gs\"     \"blog\"   \"tiktok\"\n\n[[832]]\n[1] \"rtl\" \"gda\" \"gs\"  \"yt\" \n\n[[833]]\n[1] \"fb\"     \"tiktok\" \"rtl\"   \n\n[[834]]\n[1] \"gda\" \"rtl\" \"gs\"  \"yt\" \n\n[[835]]\n[1] \"fb\"  \"gda\"\n\n[[836]]\n[1] \"rtl\"  \"gda\"  \"blog\" \"gs\"  \n\n[[837]]\n[1] \"fb\"     \"gs\"     \"tiktok\"\n\n[[838]]\n[1] \"yt\"     \"tiktok\" \"rtl\"    \"blog\"   \"fb\"    \n\n[[839]]\n[1] \"gs\" \"fb\"\n\n[[840]]\n[1] \"tiktok\"\n\n[[841]]\n[1] \"yt\"     \"rtl\"    \"tiktok\"\n\n[[842]]\n[1] \"fb\"     \"rtl\"    \"yt\"     \"gs\"     \"tiktok\"\n\n[[843]]\n[1] \"gda\"\n\n[[844]]\n[1] \"blog\" \"yt\"   \"rtl\"  \"gs\"   \"gda\" \n\n[[845]]\n[1] \"blog\"   \"rtl\"    \"yt\"     \"tiktok\" \"fb\"    \n\n[[846]]\n[1] \"fb\"   \"blog\" \"rtl\"  \"gda\" \n\n[[847]]\n[1] \"yt\"     \"gda\"    \"tiktok\"\n\n[[848]]\n[1] \"tiktok\" \"yt\"     \"gda\"    \"gs\"     \"blog\"  \n\n[[849]]\n[1] \"blog\"   \"fb\"     \"yt\"     \"gda\"    \"tiktok\"\n\n[[850]]\n[1] \"rtl\" \"gda\" \"gs\"  \"fb\"  \"yt\" \n\n[[851]]\n[1] \"rtl\"    \"gda\"    \"yt\"     \"tiktok\" \"fb\"    \n\n[[852]]\n[1] \"tiktok\" \"rtl\"    \"blog\"  \n\n[[853]]\n[1] \"yt\"  \"rtl\"\n\n[[854]]\n[1] \"tiktok\" \"rtl\"    \"fb\"     \"gda\"    \"blog\"  \n\n[[855]]\n[1] \"gda\"    \"tiktok\" \"fb\"     \"gs\"     \"blog\"  \n\n[[856]]\n[1] \"tiktok\"\n\n[[857]]\n[1] \"tiktok\" \"gda\"   \n\n[[858]]\n[1] \"blog\"\n\n[[859]]\n[1] \"tiktok\" \"yt\"    \n\n[[860]]\n[1] \"gda\"    \"tiktok\" \"rtl\"   \n\n[[861]]\n[1] \"tiktok\" \"fb\"     \"gs\"     \"gda\"    \"yt\"    \n\n[[862]]\n[1] \"gs\"   \"blog\" \"yt\"   \"fb\"  \n\n[[863]]\n[1] \"rtl\"    \"tiktok\" \"yt\"     \"fb\"    \n\n[[864]]\n[1] \"blog\"   \"yt\"     \"tiktok\" \"gs\"    \n\n[[865]]\n[1] \"yt\" \"gs\"\n\n[[866]]\n[1] \"gda\"    \"tiktok\" \"yt\"     \"rtl\"    \"gs\"    \n\n[[867]]\n[1] \"fb\"     \"tiktok\"\n\n[[868]]\n[1] \"yt\"\n\n[[869]]\n[1] \"rtl\"    \"tiktok\"\n\n[[870]]\n[1] \"gda\"  \"blog\" \"yt\"   \"gs\"   \"rtl\" \n\n[[871]]\n[1] \"tiktok\" \"gda\"    \"rtl\"   \n\n[[872]]\n[1] \"gs\"     \"tiktok\" \"rtl\"    \"blog\"   \"fb\"    \n\n[[873]]\n[1] \"gs\"  \"fb\"  \"gda\" \"rtl\"\n\n[[874]]\n[1] \"yt\"     \"fb\"     \"blog\"   \"rtl\"    \"tiktok\"\n\n[[875]]\n[1] \"gs\"   \"gda\"  \"yt\"   \"blog\"\n\n[[876]]\n[1] \"tiktok\" \"blog\"   \"gda\"    \"fb\"     \"yt\"    \n\n[[877]]\n[1] \"tiktok\" \"fb\"    \n\n[[878]]\n[1] \"rtl\"    \"blog\"   \"tiktok\" \"fb\"     \"gda\"   \n\n[[879]]\n[1] \"gs\"\n\n[[880]]\n[1] \"tiktok\"\n\n[[881]]\n[1] \"gda\" \"gs\" \n\n[[882]]\n[1] \"gs\"   \"blog\" \"gda\"  \"fb\"  \n\n[[883]]\n[1] \"gs\"     \"tiktok\" \"yt\"     \"blog\"   \"rtl\"   \n\n[[884]]\n[1] \"yt\"\n\n[[885]]\n[1] \"blog\" \"gs\"   \"gda\" \n\n[[886]]\n[1] \"tiktok\" \"gda\"    \"gs\"     \"fb\"    \n\n[[887]]\n[1] \"rtl\" \"yt\"  \"gda\"\n\n[[888]]\n[1] \"rtl\"  \"gs\"   \"blog\"\n\n[[889]]\n[1] \"fb\"\n\n[[890]]\n[1] \"rtl\"\n\n[[891]]\n[1] \"yt\"  \"rtl\" \"gs\" \n\n[[892]]\n[1] \"tiktok\" \"gda\"   \n\n[[893]]\n[1] \"yt\"     \"blog\"   \"tiktok\" \"gs\"     \"rtl\"   \n\n[[894]]\n[1] \"blog\"   \"tiktok\" \"gs\"     \"gda\"    \"yt\"    \n\n[[895]]\n[1] \"yt\"\n\n[[896]]\n[1] \"yt\"  \"gda\"\n\n[[897]]\n[1] \"fb\"     \"tiktok\" \"rtl\"   \n\n[[898]]\n[1] \"tiktok\" \"gda\"    \"yt\"    \n\n[[899]]\n[1] \"gs\"\n\n[[900]]\n[1] \"rtl\" \"gda\"\n\n[[901]]\n[1] \"gda\"\n\n[[902]]\n[1] \"rtl\"    \"gda\"    \"tiktok\" \"yt\"    \n\n[[903]]\n[1] \"tiktok\" \"gs\"     \"fb\"     \"blog\"   \"gda\"   \n\n[[904]]\n[1] \"blog\"   \"yt\"     \"tiktok\" \"fb\"     \"gda\"   \n\n[[905]]\n[1] \"rtl\"\n\n[[906]]\n[1] \"gs\"\n\n[[907]]\n[1] \"blog\" \"rtl\"  \"fb\"  \n\n[[908]]\n[1] \"gda\"\n\n[[909]]\n[1] \"fb\"   \"rtl\"  \"gs\"   \"blog\" \"yt\"  \n\n[[910]]\n[1] \"blog\"   \"fb\"     \"tiktok\" \"gda\"    \"gs\"    \n\n[[911]]\n[1] \"gda\"    \"blog\"   \"tiktok\" \"fb\"     \"yt\"    \n\n[[912]]\n[1] \"gs\"   \"blog\" \"fb\"  \n\n[[913]]\n[1] \"tiktok\" \"gs\"     \"blog\"  \n\n[[914]]\n[1] \"gda\" \"yt\" \n\n[[915]]\n[1] \"gda\"  \"fb\"   \"blog\"\n\n[[916]]\n[1] \"rtl\" \"yt\" \n\n[[917]]\n[1] \"gda\"\n\n[[918]]\n[1] \"tiktok\" \"gda\"    \"yt\"     \"blog\"   \"fb\"    \n\n[[919]]\n[1] \"rtl\"\n\n[[920]]\n[1] \"blog\" \"gs\"   \"yt\"   \"fb\"   \"rtl\" \n\n[[921]]\n[1] \"gda\"    \"fb\"     \"tiktok\"\n\n[[922]]\n[1] \"fb\"     \"blog\"   \"gda\"    \"yt\"     \"tiktok\"\n\n[[923]]\n[1] \"fb\"\n\n[[924]]\n[1] \"rtl\" \"fb\" \n\n[[925]]\n[1] \"gs\"\n\n[[926]]\n[1] \"rtl\" \"fb\" \n\n[[927]]\n[1] \"tiktok\" \"yt\"     \"fb\"     \"gs\"     \"gda\"   \n\n[[928]]\n[1] \"gs\"     \"fb\"     \"rtl\"    \"gda\"    \"tiktok\"\n\n[[929]]\n[1] \"tiktok\" \"yt\"     \"rtl\"   \n\n[[930]]\n[1] \"rtl\"    \"yt\"     \"gda\"    \"gs\"     \"tiktok\"\n\n[[931]]\n[1] \"fb\"\n\n[[932]]\n[1] \"yt\"     \"gda\"    \"rtl\"    \"gs\"     \"tiktok\"\n\n[[933]]\n[1] \"rtl\"\n\n[[934]]\n[1] \"rtl\"    \"yt\"     \"tiktok\"\n\n[[935]]\n[1] \"rtl\"\n\n[[936]]\n[1] \"rtl\"    \"tiktok\" \"fb\"     \"yt\"    \n\n[[937]]\n[1] \"blog\"   \"tiktok\" \"rtl\"   \n\n[[938]]\n[1] \"yt\"\n\n[[939]]\n[1] \"tiktok\" \"fb\"     \"gda\"    \"blog\"   \"yt\"    \n\n[[940]]\n[1] \"blog\"   \"tiktok\"\n\n[[941]]\n[1] \"gs\"  \"fb\"  \"gda\" \"yt\" \n\n[[942]]\n[1] \"gda\"    \"yt\"     \"tiktok\" \"gs\"    \n\n[[943]]\n[1] \"blog\"   \"tiktok\" \"gs\"    \n\n[[944]]\n[1] \"gda\"\n\n[[945]]\n[1] \"rtl\"  \"blog\"\n\n[[946]]\n[1] \"yt\" \"gs\"\n\n[[947]]\n[1] \"fb\"     \"gda\"    \"gs\"     \"tiktok\" \"rtl\"   \n\n[[948]]\n[1] \"fb\"  \"gda\" \"rtl\"\n\n[[949]]\n[1] \"gs\"   \"gda\"  \"blog\" \"yt\"  \n\n[[950]]\n[1] \"fb\"\n\n[[951]]\n[1] \"gda\"  \"blog\"\n\n[[952]]\n[1] \"yt\"   \"blog\"\n\n[[953]]\n[1] \"tiktok\" \"gda\"    \"rtl\"    \"yt\"    \n\n[[954]]\n[1] \"tiktok\" \"rtl\"   \n\n[[955]]\n[1] \"rtl\"    \"tiktok\" \"gda\"   \n\n[[956]]\n[1] \"blog\" \"gda\" \n\n[[957]]\n[1] \"tiktok\" \"rtl\"    \"yt\"     \"blog\"   \"gs\"    \n\n[[958]]\n[1] \"gs\" \"yt\" \"fb\"\n\n[[959]]\n[1] \"tiktok\" \"blog\"  \n\n[[960]]\n[1] \"rtl\" \"fb\" \n\n[[961]]\n[1] \"rtl\"    \"tiktok\" \"yt\"    \n\n[[962]]\n[1] \"fb\"   \"yt\"   \"gda\"  \"blog\"\n\n[[963]]\n[1] \"gs\"     \"gda\"    \"tiktok\" \"rtl\"   \n\n[[964]]\n[1] \"rtl\"    \"fb\"     \"tiktok\"\n\n[[965]]\n[1] \"blog\" \"rtl\"  \"yt\"   \"gs\"  \n\n[[966]]\n[1] \"gs\"\n\n[[967]]\n[1] \"yt\"     \"blog\"   \"tiktok\" \"rtl\"   \n\n[[968]]\n[1] \"yt\"  \"gda\"\n\n[[969]]\n[1] \"rtl\"  \"gs\"   \"blog\"\n\n[[970]]\n[1] \"blog\"   \"rtl\"    \"gda\"    \"tiktok\"\n\n[[971]]\n[1] \"rtl\" \"fb\"  \"yt\"  \"gda\"\n\n[[972]]\n[1] \"fb\"   \"blog\" \"gs\"  \n\n[[973]]\n[1] \"rtl\"    \"tiktok\" \"blog\"   \"gs\"    \n\n[[974]]\n[1] \"gs\"\n\n[[975]]\n[1] \"gda\" \"gs\" \n\n[[976]]\n[1] \"tiktok\"\n\n[[977]]\n[1] \"gs\"\n\n[[978]]\n[1] \"blog\" \"fb\"  \n\n[[979]]\n[1] \"rtl\" \"gda\" \"gs\"  \"fb\" \n\n[[980]]\n[1] \"gs\"     \"yt\"     \"rtl\"    \"tiktok\" \"fb\"    \n\n[[981]]\n[1] \"tiktok\" \"yt\"    \n\n[[982]]\n[1] \"fb\"     \"gs\"     \"rtl\"    \"tiktok\"\n\n[[983]]\n[1] \"tiktok\" \"yt\"     \"rtl\"   \n\n[[984]]\n[1] \"fb\"\n\n[[985]]\n[1] \"blog\"   \"fb\"     \"tiktok\" \"gda\"    \"yt\"    \n\n[[986]]\n[1] \"blog\"   \"tiktok\" \"fb\"     \"rtl\"    \"gda\"   \n\n[[987]]\n[1] \"gs\"   \"blog\"\n\n[[988]]\n[1] \"yt\" \"gs\"\n\n[[989]]\n[1] \"yt\"     \"tiktok\" \"gda\"   \n\n[[990]]\n[1] \"blog\"\n\n[[991]]\n[1] \"gs\"  \"gda\"\n\n[[992]]\n[1] \"gda\" \"yt\"  \"fb\"  \"gs\" \n\n[[993]]\n[1] \"gs\"  \"rtl\"\n\n[[994]]\n[1] \"gda\"\n\n[[995]]\n[1] \"yt\"  \"gda\"\n\n[[996]]\n[1] \"fb\"  \"gda\"\n\n[[997]]\n[1] \"tiktok\" \"gda\"   \n\n[[998]]\n[1] \"rtl\"    \"fb\"     \"tiktok\"\n\n[[999]]\n[1] \"fb\" \"yt\"\n\n[[1000]]\n[1] \"gda\"    \"rtl\"    \"tiktok\""
  },
  {
    "objectID": "speeding-up-r/slides.html#section-44",
    "href": "speeding-up-r/slides.html#section-44",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "touches &lt;- strsplit(path_data$path, \"&gt;\", fixed = TRUE)\nlt &lt;- lengths(touches)\n\n\n\n   [1] 5 5 3 4 1 4 2 5 5 2 3 2 2 2 3 5 2 2 4 5 2 5 1 4 4 5 4 5 1 2 2 2 1 3 2 4\n  [37] 1 2 3 3 5 5 2 2 2 5 4 3 4 2 4 5 1 2 2 4 5 5 4 1 1 3 1 1 2 2 3 5 4 4 1 4\n  [73] 2 4 3 2 4 4 5 4 1 4 4 5 5 4 4 3 2 4 5 1 5 1 3 5 4 2 5 3 2 5 3 4 4 2 5 4\n [109] 2 4 2 3 3 3 1 1 5 4 3 2 1 3 3 1 5 2 1 5 3 1 5 4 5 1 1 4 3 5 2 1 3 1 2 2\n [145] 4 4 2 3 5 5 2 3 5 2 5 4 5 3 5 1 2 3 3 2 4 5 5 5 4 3 1 3 4 4 4 4 2 2 4 2\n [181] 2 1 2 4 1 4 5 1 3 3 1 3 3 1 1 1 3 1 2 3 4 5 3 4 1 4 5 5 5 4 1 3 1 3 5 5\n [217] 5 3 3 4 2 4 2 2 3 5 4 3 5 3 1 5 4 4 3 5 4 3 3 2 2 1 4 3 4 2 3 2 1 4 5 1\n [253] 4 2 3 4 5 4 2 3 3 3 1 1 2 2 3 5 3 3 1 1 1 5 5 1 1 5 1 3 1 1 4 3 5 4 3 4\n [289] 4 5 3 1 2 2 2 2 5 4 3 5 3 4 3 1 2 2 1 2 2 3 4 1 2 2 4 4 3 5 2 3 1 3 3 1\n [325] 1 5 1 1 3 2 1 2 2 2 3 2 3 3 5 2 4 1 4 3 3 2 5 3 5 2 2 3 4 2 5 4 1 1 5 4\n [361] 2 5 2 2 1 2 5 1 1 4 4 4 5 1 1 2 4 2 4 1 5 4 3 3 4 5 4 1 4 3 5 2 3 4 1 1\n [397] 1 3 1 3 2 1 1 5 2 5 4 1 1 3 2 2 2 2 4 3 1 1 5 4 2 4 3 3 1 2 5 1 5 3 3 4\n [433] 2 5 4 5 1 1 5 1 2 4 5 2 4 4 1 4 5 2 4 1 5 1 1 5 4 1 4 1 1 3 5 5 1 2 1 3\n [469] 4 5 4 1 1 5 1 2 5 5 2 5 3 2 3 3 5 1 2 4 2 4 5 4 5 5 2 5 3 3 2 1 2 3 5 4\n [505] 5 5 4 5 5 5 2 4 1 5 4 5 4 5 4 2 1 4 2 3 2 5 5 4 5 5 3 3 1 4 3 3 5 4 3 4\n [541] 5 2 3 1 4 2 1 3 3 2 2 1 4 1 2 4 4 5 5 4 5 5 3 3 2 3 1 3 4 2 3 3 2 4 3 1\n [577] 1 3 4 4 3 2 2 2 2 1 4 3 4 3 1 2 3 5 5 3 4 1 5 3 3 5 1 1 1 2 2 3 2 2 5 3\n [613] 5 1 3 2 1 1 1 4 2 3 1 1 1 4 5 5 3 3 3 2 4 5 3 2 3 4 3 2 2 1 2 1 1 5 4 4\n [649] 2 1 2 2 4 2 3 4 2 1 2 1 2 4 3 5 3 4 1 2 5 2 3 1 1 4 1 1 5 1 3 5 5 5 4 4\n [685] 4 4 2 1 3 5 4 1 1 5 4 4 3 4 3 1 1 4 5 1 1 4 5 1 1 2 4 2 3 3 1 1 5 3 2 4\n [721] 1 4 1 1 5 2 3 4 1 4 5 3 5 5 3 2 5 5 2 4 3 2 4 5 5 2 4 5 1 5 5 2 4 3 3 4\n [757] 1 2 3 4 2 5 5 5 5 4 3 4 1 2 1 5 1 3 1 5 5 5 4 4 5 5 5 2 3 4 2 4 3 2 2 2\n [793] 2 1 2 4 5 1 5 1 2 5 4 2 4 5 4 2 5 4 3 3 1 1 3 4 4 5 2 2 3 1 5 3 2 3 2 3\n [829] 2 4 4 4 3 4 2 4 3 5 2 1 3 5 1 5 5 4 3 5 5 5 5 3 2 5 5 1 2 1 2 3 5 4 4 4\n [865] 2 5 2 1 2 5 3 5 4 5 4 5 2 5 1 1 2 4 5 1 3 4 3 3 1 1 3 2 5 5 1 2 3 3 1 2\n [901] 1 4 5 5 1 1 3 1 5 5 5 3 3 2 3 2 1 5 1 5 3 5 1 2 1 2 5 5 3 5 1 5 1 3 1 4\n [937] 3 1 5 2 4 4 3 1 2 2 5 3 4 1 2 2 4 2 3 2 5 3 2 2 3 4 4 3 4 1 4 2 3 4 4 3\n [973] 4 1 2 1 1 2 4 5 2 4 3 1 5 5 2 2 3 1 2 4 2 1 2 2 2 3 2 3"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-45",
    "href": "speeding-up-r/slides.html#section-45",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "touches &lt;- strsplit(path_data$path, \"&gt;\", fixed = TRUE)\nlt &lt;- lengths(touches)\ngroups &lt;- rep.int(seq_along(touches), lt)\n\n\n\n   [1]    1    1    1    1    1    2    2    2    2    2    3    3    3    4\n  [15]    4    4    4    5    6    6    6    6    7    7    8    8    8    8\n  [29]    8    9    9    9    9    9   10   10   11   11   11   12   12   13\n  [43]   13   14   14   15   15   15   16   16   16   16   16   17   17   18\n  [57]   18   19   19   19   19   20   20   20   20   20   21   21   22   22\n  [71]   22   22   22   23   24   24   24   24   25   25   25   25   26   26\n  [85]   26   26   26   27   27   27   27   28   28   28   28   28   29   30\n  [99]   30   31   31   32   32   33   34   34   34   35   35   36   36   36\n [113]   36   37   38   38   39   39   39   40   40   40   41   41   41   41\n [127]   41   42   42   42   42   42   43   43   44   44   45   45   46   46\n [141]   46   46   46   47   47   47   47   48   48   48   49   49   49   49\n [155]   50   50   51   51   51   51   52   52   52   52   52   53   54   54\n [169]   55   55   56   56   56   56   57   57   57   57   57   58   58   58\n [183]   58   58   59   59   59   59   60   61   62   62   62   63   64   65\n [197]   65   66   66   67   67   67   68   68   68   68   68   69   69   69\n [211]   69   70   70   70   70   71   72   72   72   72   73   73   74   74\n [225]   74   74   75   75   75   76   76   77   77   77   77   78   78   78\n [239]   78   79   79   79   79   79   80   80   80   80   81   82   82   82\n [253]   82   83   83   83   83   84   84   84   84   84   85   85   85   85\n [267]   85   86   86   86   86   87   87   87   87   88   88   88   89   89\n [281]   90   90   90   90   91   91   91   91   91   92   93   93   93   93\n [295]   93   94   95   95   95   96   96   96   96   96   97   97   97   97\n [309]   98   98   99   99   99   99   99  100  100  100  101  101  102  102\n [323]  102  102  102  103  103  103  104  104  104  104  105  105  105  105\n [337]  106  106  107  107  107  107  107  108  108  108  108  109  109  110\n [351]  110  110  110  111  111  112  112  112  113  113  113  114  114  114\n [365]  115  116  117  117  117  117  117  118  118  118  118  119  119  119\n [379]  120  120  121  122  122  122  123  123  123  124  125  125  125  125\n [393]  125  126  126  127  128  128  128  128  128  129  129  129  130  131\n [407]  131  131  131  131  132  132  132  132  133  133  133  133  133  134\n [421]  135  136  136  136  136  137  137  137  138  138  138  138  138  139\n [435]  139  140  141  141  141  142  143  143  144  144  145  145  145  145\n [449]  146  146  146  146  147  147  148  148  148  149  149  149  149  149\n [463]  150  150  150  150  150  151  151  152  152  152  153  153  153  153\n [477]  153  154  154  155  155  155  155  155  156  156  156  156  157  157\n [491]  157  157  157  158  158  158  159  159  159  159  159  160  161  161\n [505]  162  162  162  163  163  163  164  164  165  165  165  165  166  166\n [519]  166  166  166  167  167  167  167  167  168  168  168  168  168  169\n [533]  169  169  169  170  170  170  171  172  172  172  173  173  173  173\n [547]  174  174  174  174  175  175  175  175  176  176  176  176  177  177\n [561]  178  178  179  179  179  179  180  180  181  181  182  183  183  184\n [575]  184  184  184  185  186  186  186  186  187  187  187  187  187  188\n [589]  189  189  189  190  190  190  191  192  192  192  193  193  193  194\n [603]  195  196  197  197  197  198  199  199  200  200  200  201  201  201\n [617]  201  202  202  202  202  202  203  203  203  204  204  204  204  205\n [631]  206  206  206  206  207  207  207  207  207  208  208  208  208  208\n [645]  209  209  209  209  209  210  210  210  210  211  212  212  212  213\n [659]  214  214  214  215  215  215  215  215  216  216  216  216  216  217\n [673]  217  217  217  217  218  218  218  219  219  219  220  220  220  220\n [687]  221  221  222  222  222  222  223  223  224  224  225  225  225  226\n [701]  226  226  226  226  227  227  227  227  228  228  228  229  229  229\n [715]  229  229  230  230  230  231  232  232  232  232  232  233  233  233\n [729]  233  234  234  234  234  235  235  235  236  236  236  236  236  237\n [743]  237  237  237  238  238  238  239  239  239  240  240  241  241  242\n [757]  243  243  243  243  244  244  244  245  245  245  245  246  246  247\n [771]  247  247  248  248  249  250  250  250  250  251  251  251  251  251\n [785]  252  253  253  253  253  254  254  255  255  255  256  256  256  256\n [799]  257  257  257  257  257  258  258  258  258  259  259  260  260  260\n [813]  261  261  261  262  262  262  263  264  265  265  266  266  267  267\n [827]  267  268  268  268  268  268  269  269  269  270  270  270  271  272\n [841]  273  274  274  274  274  274  275  275  275  275  275  276  277  278\n [855]  278  278  278  278  279  280  280  280  281  282  283  283  283  283\n [869]  284  284  284  285  285  285  285  285  286  286  286  286  287  287\n [883]  287  288  288  288  288  289  289  289  289  290  290  290  290  290\n [897]  291  291  291  292  293  293  294  294  295  295  296  296  297  297\n [911]  297  297  297  298  298  298  298  299  299  299  300  300  300  300\n [925]  300  301  301  301  302  302  302  302  303  303  303  304  305  305\n [939]  306  306  307  308  308  309  309  310  310  310  311  311  311  311\n [953]  312  313  313  314  314  315  315  315  315  316  316  316  316  317\n [967]  317  317  318  318  318  318  318  319  319  320  320  320  321  322\n [981]  322  322  323  323  323  324  325  326  326  326  326  326  327  328\n [995]  329  329  329  330  330  331  332  332  333  333  334  334  335  335\n[1009]  335  336  336  337  337  337  338  338  338  339  339  339  339  339\n[1023]  340  340  341  341  341  341  342  343  343  343  343  344  344  344\n[1037]  345  345  345  346  346  347  347  347  347  347  348  348  348  349\n[1051]  349  349  349  349  350  350  351  351  352  352  352  353  353  353\n[1065]  353  354  354  355  355  355  355  355  356  356  356  356  357  358\n[1079]  359  359  359  359  359  360  360  360  360  361  361  362  362  362\n[1093]  362  362  363  363  364  364  365  366  366  367  367  367  367  367\n[1107]  368  369  370  370  370  370  371  371  371  371  372  372  372  372\n[1121]  373  373  373  373  373  374  375  376  376  377  377  377  377  378\n[1135]  378  379  379  379  379  380  381  381  381  381  381  382  382  382\n[1149]  382  383  383  383  384  384  384  385  385  385  385  386  386  386\n[1163]  386  386  387  387  387  387  388  389  389  389  389  390  390  390\n[1177]  391  391  391  391  391  392  392  393  393  393  394  394  394  394\n[1191]  395  396  397  398  398  398  399  400  400  400  401  401  402  403\n[1205]  404  404  404  404  404  405  405  406  406  406  406  406  407  407\n[1219]  407  407  408  409  410  410  410  411  411  412  412  413  413  414\n[1233]  414  415  415  415  415  416  416  416  417  418  419  419  419  419\n[1247]  419  420  420  420  420  421  421  422  422  422  422  423  423  423\n[1261]  424  424  424  425  426  426  427  427  427  427  427  428  429  429\n[1275]  429  429  429  430  430  430  431  431  431  432  432  432  432  433\n[1289]  433  434  434  434  434  434  435  435  435  435  436  436  436  436\n[1303]  436  437  438  439  439  439  439  439  440  441  441  442  442  442\n[1317]  442  443  443  443  443  443  444  444  445  445  445  445  446  446\n[1331]  446  446  447  448  448  448  448  449  449  449  449  449  450  450\n[1345]  451  451  451  451  452  453  453  453  453  453  454  455  456  456\n[1359]  456  456  456  457  457  457  457  458  459  459  459  459  460  461\n[1373]  462  462  462  463  463  463  463  463  464  464  464  464  464  465\n[1387]  466  466  467  468  468  468  469  469  469  469  470  470  470  470\n[1401]  470  471  471  471  471  472  473  474  474  474  474  474  475  476\n[1415]  476  477  477  477  477  477  478  478  478  478  478  479  479  480\n[1429]  480  480  480  480  481  481  481  482  482  483  483  483  484  484\n[1443]  484  485  485  485  485  485  486  487  487  488  488  488  488  489\n[1457]  489  490  490  490  490  491  491  491  491  491  492  492  492  492\n[1471]  493  493  493  493  493  494  494  494  494  494  495  495  496  496\n[1485]  496  496  496  497  497  497  498  498  498  499  499  500  501  501\n[1499]  502  502  502  503  503  503  503  503  504  504  504  504  505  505\n[1513]  505  505  505  506  506  506  506  506  507  507  507  507  508  508\n[1527]  508  508  508  509  509  509  509  509  510  510  510  510  510  511\n[1541]  511  512  512  512  512  513  514  514  514  514  514  515  515  515\n[1555]  515  516  516  516  516  516  517  517  517  517  518  518  518  518\n[1569]  518  519  519  519  519  520  520  521  522  522  522  522  523  523\n[1583]  524  524  524  525  525  526  526  526  526  526  527  527  527  527\n[1597]  527  528  528  528  528  529  529  529  529  529  530  530  530  530\n[1611]  530  531  531  531  532  532  532  533  534  534  534  534  535  535\n[1625]  535  536  536  536  537  537  537  537  537  538  538  538  538  539\n[1639]  539  539  540  540  540  540  541  541  541  541  541  542  542  543\n[1653]  543  543  544  545  545  545  545  546  546  547  548  548  548  549\n[1667]  549  549  550  550  551  551  552  553  553  553  553  554  555  555\n[1681]  556  556  556  556  557  557  557  557  558  558  558  558  558  559\n[1695]  559  559  559  559  560  560  560  560  561  561  561  561  561  562\n[1709]  562  562  562  562  563  563  563  564  564  564  565  565  566  566\n[1723]  566  567  568  568  568  569  569  569  569  570  570  571  571  571\n[1737]  572  572  572  573  573  574  574  574  574  575  575  575  576  577\n[1751]  578  578  578  579  579  579  579  580  580  580  580  581  581  581\n[1765]  582  582  583  583  584  584  585  585  586  587  587  587  587  588\n[1779]  588  588  589  589  589  589  590  590  590  591  592  592  593  593\n[1793]  593  594  594  594  594  594  595  595  595  595  595  596  596  596\n[1807]  597  597  597  597  598  599  599  599  599  599  600  600  600  601\n[1821]  601  601  602  602  602  602  602  603  604  605  606  606  607  607\n[1835]  608  608  608  609  609  610  610  611  611  611  611  611  612  612\n[1849]  612  613  613  613  613  613  614  615  615  615  616  616  617  618\n[1863]  619  620  620  620  620  621  621  622  622  622  623  624  625  626\n[1877]  626  626  626  627  627  627  627  627  628  628  628  628  628  629\n[1891]  629  629  630  630  630  631  631  631  632  632  633  633  633  633\n[1905]  634  634  634  634  634  635  635  635  636  636  637  637  637  638\n[1919]  638  638  638  639  639  639  640  640  641  641  642  643  643  644\n[1933]  645  646  646  646  646  646  647  647  647  647  648  648  648  648\n[1947]  649  649  650  651  651  652  652  653  653  653  653  654  654  655\n[1961]  655  655  656  656  656  656  657  657  658  659  659  660  661  661\n[1975]  662  662  662  662  663  663  663  664  664  664  664  664  665  665\n[1989]  665  666  666  666  666  667  668  668  669  669  669  669  669  670\n[2003]  670  671  671  671  672  673  674  674  674  674  675  676  677  677\n[2017]  677  677  677  678  679  679  679  680  680  680  680  680  681  681\n[2031]  681  681  681  682  682  682  682  682  683  683  683  683  684  684\n[2045]  684  684  685  685  685  685  686  686  686  686  687  687  688  689\n[2059]  689  689  690  690  690  690  690  691  691  691  691  692  693  694\n[2073]  694  694  694  694  695  695  695  695  696  696  696  696  697  697\n[2087]  697  698  698  698  698  699  699  699  700  701  702  702  702  702\n[2101]  703  703  703  703  703  704  705  706  706  706  706  707  707  707\n[2115]  707  707  708  709  710  710  711  711  711  711  712  712  713  713\n[2129]  713  714  714  714  715  716  717  717  717  717  717  718  718  718\n[2143]  719  719  720  720  720  720  721  722  722  722  722  723  724  725\n[2157]  725  725  725  725  726  726  727  727  727  728  728  728  728  729\n[2171]  730  730  730  730  731  731  731  731  731  732  732  732  733  733\n[2185]  733  733  733  734  734  734  734  734  735  735  735  736  736  737\n[2199]  737  737  737  737  738  738  738  738  738  739  739  740  740  740\n[2213]  740  741  741  741  742  742  743  743  743  743  744  744  744  744\n[2227]  744  745  745  745  745  745  746  746  747  747  747  747  748  748\n[2241]  748  748  748  749  750  750  750  750  750  751  751  751  751  751\n[2255]  752  752  753  753  753  753  754  754  754  755  755  755  756  756\n[2269]  756  756  757  758  758  759  759  759  760  760  760  760  761  761\n[2283]  762  762  762  762  762  763  763  763  763  763  764  764  764  764\n[2297]  764  765  765  765  765  765  766  766  766  766  767  767  767  768\n[2311]  768  768  768  769  770  770  771  772  772  772  772  772  773  774\n[2325]  774  774  775  776  776  776  776  776  777  777  777  777  777  778\n[2339]  778  778  778  778  779  779  779  779  780  780  780  780  781  781\n[2353]  781  781  781  782  782  782  782  782  783  783  783  783  783  784\n[2367]  784  785  785  785  786  786  786  786  787  787  788  788  788  788\n[2381]  789  789  789  790  790  791  791  792  792  793  793  794  795  795\n[2395]  796  796  796  796  797  797  797  797  797  798  799  799  799  799\n[2409]  799  800  801  801  802  802  802  802  802  803  803  803  803  804\n[2423]  804  805  805  805  805  806  806  806  806  806  807  807  807  807\n[2437]  808  808  809  809  809  809  809  810  810  810  810  811  811  811\n[2451]  812  812  812  813  814  815  815  815  816  816  816  816  817  817\n[2465]  817  817  818  818  818  818  818  819  819  820  820  821  821  821\n[2479]  822  823  823  823  823  823  824  824  824  825  825  826  826  826\n[2493]  827  827  828  828  828  829  829  830  830  830  830  831  831  831\n[2507]  831  832  832  832  832  833  833  833  834  834  834  834  835  835\n[2521]  836  836  836  836  837  837  837  838  838  838  838  838  839  839\n[2535]  840  841  841  841  842  842  842  842  842  843  844  844  844  844\n[2549]  844  845  845  845  845  845  846  846  846  846  847  847  847  848\n[2563]  848  848  848  848  849  849  849  849  849  850  850  850  850  850\n[2577]  851  851  851  851  851  852  852  852  853  853  854  854  854  854\n[2591]  854  855  855  855  855  855  856  857  857  858  859  859  860  860\n[2605]  860  861  861  861  861  861  862  862  862  862  863  863  863  863\n[2619]  864  864  864  864  865  865  866  866  866  866  866  867  867  868\n[2633]  869  869  870  870  870  870  870  871  871  871  872  872  872  872\n[2647]  872  873  873  873  873  874  874  874  874  874  875  875  875  875\n[2661]  876  876  876  876  876  877  877  878  878  878  878  878  879  880\n[2675]  881  881  882  882  882  882  883  883  883  883  883  884  885  885\n[2689]  885  886  886  886  886  887  887  887  888  888  888  889  890  891\n[2703]  891  891  892  892  893  893  893  893  893  894  894  894  894  894\n[2717]  895  896  896  897  897  897  898  898  898  899  900  900  901  902\n[2731]  902  902  902  903  903  903  903  903  904  904  904  904  904  905\n[2745]  906  907  907  907  908  909  909  909  909  909  910  910  910  910\n[2759]  910  911  911  911  911  911  912  912  912  913  913  913  914  914\n[2773]  915  915  915  916  916  917  918  918  918  918  918  919  920  920\n[2787]  920  920  920  921  921  921  922  922  922  922  922  923  924  924\n[2801]  925  926  926  927  927  927  927  927  928  928  928  928  928  929\n[2815]  929  929  930  930  930  930  930  931  932  932  932  932  932  933\n[2829]  934  934  934  935  936  936  936  936  937  937  937  938  939  939\n[2843]  939  939  939  940  940  941  941  941  941  942  942  942  942  943\n[2857]  943  943  944  945  945  946  946  947  947  947  947  947  948  948\n[2871]  948  949  949  949  949  950  951  951  952  952  953  953  953  953\n[2885]  954  954  955  955  955  956  956  957  957  957  957  957  958  958\n[2899]  958  959  959  960  960  961  961  961  962  962  962  962  963  963\n[2913]  963  963  964  964  964  965  965  965  965  966  967  967  967  967\n[2927]  968  968  969  969  969  970  970  970  970  971  971  971  971  972\n[2941]  972  972  973  973  973  973  974  975  975  976  977  978  978  979\n[2955]  979  979  979  980  980  980  980  980  981  981  982  982  982  982\n[2969]  983  983  983  984  985  985  985  985  985  986  986  986  986  986\n[2983]  987  987  988  988  989  989  989  990  991  991  992  992  992  992\n[2997]  993  993  994  995  995  996  996  997  997  998  998  998  999  999\n[3011] 1000 1000 1000"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-46",
    "href": "speeding-up-r/slides.html#section-46",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "touches &lt;- strsplit(path_data$path, \"&gt;\", fixed = TRUE)\nlt &lt;- lengths(touches)\ngroups &lt;- rep.int(seq_along(touches), lt)\noutcome &lt;- rep.int(path_data$leads, lt)\n\n\n\n   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n  [37] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n  [73] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [109] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [145] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [181] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [217] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [253] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [289] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [325] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [361] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [397] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [433] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [469] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [505] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [541] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [577] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [613] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [649] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [685] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [721] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [757] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [793] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [829] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [865] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [901] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [937] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [973] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1009] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1045] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1081] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1117] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1153] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1189] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1225] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1261] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1297] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1333] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1369] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1405] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1441] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1477] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1513] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1549] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1585] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1621] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1657] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1693] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1729] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1765] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1801] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1837] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1873] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1909] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1945] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1981] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2017] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2053] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2089] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2125] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2161] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2197] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2233] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2269] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2305] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2341] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2377] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2413] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2449] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2485] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2521] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2557] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2593] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2629] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2665] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2701] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2737] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2773] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2809] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2845] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2881] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2917] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2953] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[2989] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-47",
    "href": "speeding-up-r/slides.html#section-47",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "touches &lt;- strsplit(path_data$path, \"&gt;\", fixed = TRUE)\nlt &lt;- lengths(touches)\ngroups &lt;- rep.int(seq_along(touches), lt)\noutcome &lt;- rep.int(path_data$leads, lt)\nvalue &lt;- rep.int(path_data$value, lt) \n\n\n\n   [1] 6794.194 6794.194 6794.194 6794.194 6794.194 5980.748 5980.748 5980.748\n   [9] 5980.748 5980.748 5801.213 5801.213 5801.213 4583.404 4583.404 4583.404\n  [17] 4583.404 6734.531 7237.588 7237.588 7237.588 7237.588 9040.870 9040.870\n  [25] 8560.445 8560.445 8560.445 8560.445 8560.445 4652.628 4652.628 4652.628\n  [33] 4652.628 4652.628 7125.241 7125.241 4655.351 4655.351 4655.351 5444.687\n  [41] 5444.687 5007.071 5007.071 6173.005 6173.005 5514.864 5514.864 5514.864\n  [49] 5270.104 5270.104 5270.104 5270.104 5270.104 5209.357 5209.357 6071.596\n  [57] 6071.596 7190.188 7190.188 7190.188 7190.188 6456.058 6456.058 6456.058\n  [65] 6456.058 6456.058 4125.836 4125.836 7262.922 7262.922 7262.922 7262.922\n  [73] 7262.922 6719.900 7058.808 7058.808 7058.808 7058.808 4892.996 4892.996\n  [81] 4892.996 4892.996 5046.583 5046.583 5046.583 5046.583 5046.583 3279.694\n  [89] 3279.694 3279.694 3279.694 4840.931 4840.931 4840.931 4840.931 4840.931\n  [97] 7398.901 3174.110 3174.110 5992.031 5992.031 6425.466 6425.466 4055.579\n [105] 7133.358 7133.358 7133.358 6951.053 6951.053 7196.472 7196.472 7196.472\n [113] 7196.472 5038.244 6920.464 6920.464 4600.374 4600.374 4600.374 7055.305\n [121] 7055.305 7055.305 6175.048 6175.048 6175.048 6175.048 6175.048 7476.470\n [129] 7476.470 7476.470 7476.470 7476.470 6873.935 6873.935 5713.114 5713.114\n [137] 5177.225 5177.225 7046.179 7046.179 7046.179 7046.179 7046.179 4951.213\n [145] 4951.213 4951.213 4951.213 6737.265 6737.265 6737.265 6794.029 6794.029\n [153] 6794.029 6794.029 7167.975 7167.975 6191.674 6191.674 6191.674 6191.674\n [161] 5593.347 5593.347 5593.347 5593.347 5593.347 6753.443 6797.645 6797.645\n [169] 4059.619 4059.619 5934.447 5934.447 5934.447 5934.447 6463.942 6463.942\n [177] 6463.942 6463.942 6463.942 3840.427 3840.427 3840.427 3840.427 3840.427\n [185] 3580.760 3580.760 3580.760 3580.760 6009.568 5185.145 6203.266 6203.266\n [193] 6203.266 6553.802 6634.116 7109.585 7109.585 6992.773 6992.773 5604.542\n [201] 5604.542 5604.542 7174.152 7174.152 7174.152 7174.152 7174.152 6116.008\n [209] 6116.008 6116.008 6116.008 5335.234 5335.234 5335.234 5335.234 7882.331\n [217] 5182.027 5182.027 5182.027 5182.027 7292.613 7292.613 7001.097 7001.097\n [225] 7001.097 7001.097 6191.619 6191.619 6191.619 7675.015 7675.015 4710.140\n [233] 4710.140 4710.140 4710.140 4076.886 4076.886 4076.886 4076.886 5466.903\n [241] 5466.903 5466.903 5466.903 5466.903 5996.216 5996.216 5996.216 5996.216\n [249] 4883.287 4843.837 4843.837 4843.837 4843.837 6292.943 6292.943 6292.943\n [257] 6292.943 6245.097 6245.097 6245.097 6245.097 6245.097 6676.046 6676.046\n [265] 6676.046 6676.046 6676.046 6942.409 6942.409 6942.409 6942.409 6644.506\n [273] 6644.506 6644.506 6644.506 7088.860 7088.860 7088.860 6482.535 6482.535\n [281] 6493.493 6493.493 6493.493 6493.493 6531.959 6531.959 6531.959 6531.959\n [289] 6531.959 5096.998 5999.107 5999.107 5999.107 5999.107 5999.107 7017.611\n [297] 5654.747 5654.747 5654.747 6193.363 6193.363 6193.363 6193.363 6193.363\n [305] 5990.837 5990.837 5990.837 5990.837 6650.591 6650.591 7262.940 7262.940\n [313] 7262.940 7262.940 7262.940 4922.642 4922.642 4922.642 5958.177 5958.177\n [321] 7275.028 7275.028 7275.028 7275.028 7275.028 5678.472 5678.472 5678.472\n [329] 6681.473 6681.473 6681.473 6681.473 6402.410 6402.410 6402.410 6402.410\n [337] 6016.852 6016.852 6555.087 6555.087 6555.087 6555.087 6555.087 4974.026\n [345] 4974.026 4974.026 4974.026 4854.084 4854.084 7241.740 7241.740 7241.740\n [353] 7241.740 6431.081 6431.081 7291.857 7291.857 7291.857 5054.035 5054.035\n [361] 5054.035 6840.304 6840.304 6840.304 5846.659 5779.044 6821.782 6821.782\n [369] 6821.782 6821.782 6821.782 7366.551 7366.551 7366.551 7366.551 7092.394\n [377] 7092.394 7092.394 6899.585 6899.585 4223.694 6012.302 6012.302 6012.302\n [385] 6427.251 6427.251 6427.251 3803.271 5567.050 5567.050 5567.050 5567.050\n [393] 5567.050 7274.709 7274.709 5752.211 6761.458 6761.458 6761.458 6761.458\n [401] 6761.458 5400.526 5400.526 5400.526 6512.676 5895.206 5895.206 5895.206\n [409] 5895.206 5895.206 6418.250 6418.250 6418.250 6418.250 6750.386 6750.386\n [417] 6750.386 6750.386 6750.386 5767.820 4527.980 8187.353 8187.353 8187.353\n [425] 8187.353 6504.323 6504.323 6504.323 4419.455 4419.455 4419.455 4419.455\n [433] 4419.455 5188.635 5188.635 6452.050 6228.662 6228.662 6228.662 6213.532\n [441] 4739.228 4739.228 5774.834 5774.834 5329.242 5329.242 5329.242 5329.242\n [449] 5058.795 5058.795 5058.795 5058.795 7065.992 7065.992 7293.229 7293.229\n [457] 7293.229 4362.503 4362.503 4362.503 4362.503 4362.503 6669.121 6669.121\n [465] 6669.121 6669.121 6669.121 5767.992 5767.992 7029.889 7029.889 7029.889\n [473] 4477.904 4477.904 4477.904 4477.904 4477.904 7998.060 7998.060 5823.916\n [481] 5823.916 5823.916 5823.916 5823.916 5960.534 5960.534 5960.534 5960.534\n [489] 6184.399 6184.399 6184.399 6184.399 6184.399 8380.209 8380.209 8380.209\n [497] 4803.882 4803.882 4803.882 4803.882 4803.882 6920.585 5300.920 5300.920\n [505] 5466.933 5466.933 5466.933 3686.222 3686.222 3686.222 5990.274 5990.274\n [513] 6754.219 6754.219 6754.219 6754.219 6639.299 6639.299 6639.299 6639.299\n [521] 6639.299 6018.019 6018.019 6018.019 6018.019 6018.019 6921.366 6921.366\n [529] 6921.366 6921.366 6921.366 5073.810 5073.810 5073.810 5073.810 7557.575\n [537] 7557.575 7557.575 5256.552 5588.709 5588.709 5588.709 7091.128 7091.128\n [545] 7091.128 7091.128 5434.418 5434.418 5434.418 5434.418 4956.003 4956.003\n [553] 4956.003 4956.003 6910.817 6910.817 6910.817 6910.817 3599.293 3599.293\n [561] 6512.481 6512.481 5997.021 5997.021 5997.021 5997.021 5396.439 5396.439\n [569] 5445.809 5445.809 5634.340 6475.647 6475.647 4783.388 4783.388 4783.388\n [577] 4783.388 6381.891 4998.069 4998.069 4998.069 4998.069 6546.583 6546.583\n [585] 6546.583 6546.583 6546.583 5920.387 4877.501 4877.501 4877.501 6267.244\n [593] 6267.244 6267.244 5590.571 5615.903 5615.903 5615.903 6069.940 6069.940\n [601] 6069.940 7286.960 6098.766 5618.681 6422.100 6422.100 6422.100 6525.572\n [609] 5077.448 5077.448 6376.005 6376.005 6376.005 8475.113 8475.113 8475.113\n [617] 8475.113 7000.997 7000.997 7000.997 7000.997 7000.997 6041.447 6041.447\n [625] 6041.447 6465.336 6465.336 6465.336 6465.336 4054.238 6719.815 6719.815\n [633] 6719.815 6719.815 5815.861 5815.861 5815.861 5815.861 5815.861 4907.611\n [641] 4907.611 4907.611 4907.611 4907.611 5579.612 5579.612 5579.612 5579.612\n [649] 5579.612 5301.708 5301.708 5301.708 5301.708 6381.874 5335.744 5335.744\n [657] 5335.744 4505.074 4276.428 4276.428 4276.428 5545.959 5545.959 5545.959\n [665] 5545.959 5545.959 4826.331 4826.331 4826.331 4826.331 4826.331 6419.953\n [673] 6419.953 6419.953 6419.953 6419.953 4176.144 4176.144 4176.144 5834.806\n [681] 5834.806 5834.806 6122.530 6122.530 6122.530 6122.530 4474.636 4474.636\n [689] 7529.955 7529.955 7529.955 7529.955 5768.746 5768.746 5385.521 5385.521\n [697] 6169.006 6169.006 6169.006 7461.986 7461.986 7461.986 7461.986 7461.986\n [705] 6164.187 6164.187 6164.187 6164.187 5191.681 5191.681 5191.681 7194.784\n [713] 7194.784 7194.784 7194.784 7194.784 6926.733 6926.733 6926.733 6804.713\n [721] 7799.097 7799.097 7799.097 7799.097 7799.097 7006.699 7006.699 7006.699\n [729] 7006.699 6348.658 6348.658 6348.658 6348.658 4912.819 4912.819 4912.819\n [737] 6772.309 6772.309 6772.309 6772.309 6772.309 5016.196 5016.196 5016.196\n [745] 5016.196 5365.933 5365.933 5365.933 5444.821 5444.821 5444.821 5484.575\n [753] 5484.575 6734.830 6734.830 5218.086 5465.159 5465.159 5465.159 5465.159\n [761] 5422.155 5422.155 5422.155 6668.134 6668.134 6668.134 6668.134 4986.883\n [769] 4986.883 5385.653 5385.653 5385.653 6149.958 6149.958 6902.944 7496.853\n [777] 7496.853 7496.853 7496.853 7466.521 7466.521 7466.521 7466.521 7466.521\n [785] 6572.694 6969.353 6969.353 6969.353 6969.353 4992.633 4992.633 6410.284\n [793] 6410.284 6410.284 5596.307 5596.307 5596.307 5596.307 7557.698 7557.698\n [801] 7557.698 7557.698 7557.698 5473.197 5473.197 5473.197 5473.197 7821.594\n [809] 7821.594 6496.580 6496.580 6496.580 6977.622 6977.622 6977.622 5074.102\n [817] 5074.102 5074.102 6016.219 6861.661 7787.958 7787.958 6620.194 6620.194\n [825] 6400.988 6400.988 6400.988 4840.714 4840.714 4840.714 4840.714 4840.714\n [833] 6160.079 6160.079 6160.079 4837.907 4837.907 4837.907 8227.821 6272.803\n [841] 6711.779 6136.879 6136.879 6136.879 6136.879 6136.879 7282.034 7282.034\n [849] 7282.034 7282.034 7282.034 5747.589 6755.770 5262.630 5262.630 5262.630\n [857] 5262.630 5262.630 5443.222 6800.337 6800.337 6800.337 6007.607 6351.085\n [865] 5796.151 5796.151 5796.151 5796.151 5192.544 5192.544 5192.544 5870.041\n [873] 5870.041 5870.041 5870.041 5870.041 4666.394 4666.394 4666.394 4666.394\n [881] 6279.782 6279.782 6279.782 4807.946 4807.946 4807.946 4807.946 6406.375\n [889] 6406.375 6406.375 6406.375 7122.696 7122.696 7122.696 7122.696 7122.696\n [897] 7011.268 7011.268 7011.268 7772.100 4012.128 4012.128 5506.138 5506.138\n [905] 5737.119 5737.119 5442.248 5442.248 7039.114 7039.114 7039.114 7039.114\n [913] 7039.114 4872.980 4872.980 4872.980 4872.980 4801.570 4801.570 4801.570\n [921] 6057.653 6057.653 6057.653 6057.653 6057.653 6232.894 6232.894 6232.894\n [929] 5686.887 5686.887 5686.887 5686.887 5333.144 5333.144 5333.144 2863.550\n [937] 5825.898 5825.898 5914.949 5914.949 6934.080 5017.628 5017.628 6453.296\n [945] 6453.296 5779.836 5779.836 5779.836 4021.066 4021.066 4021.066 4021.066\n [953] 6124.344 5129.774 5129.774 5834.017 5834.017 6295.418 6295.418 6295.418\n [961] 6295.418 7862.348 7862.348 7862.348 7862.348 3877.630 3877.630 3877.630\n [969] 4779.424 4779.424 4779.424 4779.424 4779.424 6746.042 6746.042 8742.934\n [977] 8742.934 8742.934 6582.023 4823.961 4823.961 4823.961 5518.191 5518.191\n [985] 5518.191 7426.333 7955.104 6432.235 6432.235 6432.235 6432.235 6432.235\n [993] 7511.379 6037.586 6121.679 6121.679 6121.679 5695.955 5695.955 5376.029\n[1001] 4572.811 4572.811 5599.482 5599.482 5377.165 5377.165 6429.491 6429.491\n[1009] 6429.491 7366.387 7366.387 6165.489 6165.489 6165.489 5229.954 5229.954\n[1017] 5229.954 7320.015 7320.015 7320.015 7320.015 7320.015 6661.650 6661.650\n[1025] 7594.244 7594.244 7594.244 7594.244 5416.167 6570.253 6570.253 6570.253\n[1033] 6570.253 5476.512 5476.512 5476.512 5706.787 5706.787 5706.787 5006.203\n[1041] 5006.203 4999.005 4999.005 4999.005 4999.005 4999.005 6937.963 6937.963\n[1049] 6937.963 4858.278 4858.278 4858.278 4858.278 4858.278 6786.955 6786.955\n[1057] 7559.948 7559.948 6257.455 6257.455 6257.455 5334.609 5334.609 5334.609\n[1065] 5334.609 4702.769 4702.769 6567.435 6567.435 6567.435 6567.435 6567.435\n[1073] 4316.944 4316.944 4316.944 4316.944 5436.545 5990.328 6312.900 6312.900\n[1081] 6312.900 6312.900 6312.900 6561.607 6561.607 6561.607 6561.607 5168.514\n[1089] 5168.514 4987.156 4987.156 4987.156 4987.156 4987.156 4968.465 4968.465\n[1097] 5875.298 5875.298 6572.446 4134.287 4134.287 5768.210 5768.210 5768.210\n[1105] 5768.210 5768.210 6584.610 5179.583 7841.216 7841.216 7841.216 7841.216\n[1113] 6993.388 6993.388 6993.388 6993.388 6515.020 6515.020 6515.020 6515.020\n[1121] 4285.213 4285.213 4285.213 4285.213 4285.213 5649.698 5809.839 6419.445\n[1129] 6419.445 8121.052 8121.052 8121.052 8121.052 5864.186 5864.186 5105.066\n[1137] 5105.066 5105.066 5105.066 5997.015 6619.841 6619.841 6619.841 6619.841\n[1145] 6619.841 7164.121 7164.121 7164.121 7164.121 5225.571 5225.571 5225.571\n[1153] 4796.922 4796.922 4796.922 6390.319 6390.319 6390.319 6390.319 5588.656\n[1161] 5588.656 5588.656 5588.656 5588.656 5914.783 5914.783 5914.783 5914.783\n[1169] 5803.901 6566.865 6566.865 6566.865 6566.865 6337.085 6337.085 6337.085\n[1177] 5123.998 5123.998 5123.998 5123.998 5123.998 5192.761 5192.761 3347.169\n[1185] 3347.169 3347.169 6251.479 6251.479 6251.479 6251.479 4995.827 5775.675\n[1193] 6247.086 6026.364 6026.364 6026.364 7290.590 8352.348 8352.348 8352.348\n[1201] 7360.630 7360.630 5529.057 5263.205 5942.998 5942.998 5942.998 5942.998\n[1209] 5942.998 5615.178 5615.178 5741.305 5741.305 5741.305 5741.305 5741.305\n[1217] 4618.822 4618.822 4618.822 4618.822 6231.345 6646.288 4239.589 4239.589\n[1225] 4239.589 5428.234 5428.234 4930.754 4930.754 5997.899 5997.899 7301.873\n[1233] 7301.873 4420.470 4420.470 4420.470 4420.470 6880.423 6880.423 6880.423\n[1241] 5014.683 5298.124 7098.313 7098.313 7098.313 7098.313 7098.313 6000.095\n[1249] 6000.095 6000.095 6000.095 5375.573 5375.573 4951.921 4951.921 4951.921\n[1257] 4951.921 6054.830 6054.830 6054.830 7517.842 7517.842 7517.842 6194.156\n[1265] 6877.257 6877.257 6226.600 6226.600 6226.600 6226.600 6226.600 5033.637\n[1273] 7059.520 7059.520 7059.520 7059.520 7059.520 7932.850 7932.850 7932.850\n[1281] 6194.006 6194.006 6194.006 6562.491 6562.491 6562.491 6562.491 6151.781\n[1289] 6151.781 5193.681 5193.681 5193.681 5193.681 5193.681 6670.922 6670.922\n[1297] 6670.922 6670.922 6735.249 6735.249 6735.249 6735.249 6735.249 5730.107\n[1305] 4348.140 4765.098 4765.098 4765.098 4765.098 4765.098 5754.032 6115.392\n[1313] 6115.392 6574.264 6574.264 6574.264 6574.264 5508.467 5508.467 5508.467\n[1321] 5508.467 5508.467 7451.616 7451.616 4450.530 4450.530 4450.530 4450.530\n[1329] 5498.252 5498.252 5498.252 5498.252 6365.451 4619.999 4619.999 4619.999\n[1337] 4619.999 7390.988 7390.988 7390.988 7390.988 7390.988 7001.757 7001.757\n[1345] 6268.615 6268.615 6268.615 6268.615 6741.099 6465.085 6465.085 6465.085\n[1353] 6465.085 6465.085 6000.035 5368.524 3454.921 3454.921 3454.921 3454.921\n[1361] 3454.921 6926.855 6926.855 6926.855 6926.855 4606.523 7134.768 7134.768\n[1369] 7134.768 7134.768 6344.411 7799.172 6592.289 6592.289 6592.289 4824.584\n[1377] 4824.584 4824.584 4824.584 4824.584 7038.003 7038.003 7038.003 7038.003\n[1385] 7038.003 5535.834 4429.524 4429.524 6555.811 6756.265 6756.265 6756.265\n[1393] 5154.009 5154.009 5154.009 5154.009 5197.690 5197.690 5197.690 5197.690\n[1401] 5197.690 7250.707 7250.707 7250.707 7250.707 5792.437 5867.013 5745.467\n[1409] 5745.467 5745.467 5745.467 5745.467 6590.929 6126.199 6126.199 6436.714\n[1417] 6436.714 6436.714 6436.714 6436.714 5052.612 5052.612 5052.612 5052.612\n[1425] 5052.612 6350.024 6350.024 6392.763 6392.763 6392.763 6392.763 6392.763\n[1433] 4505.738 4505.738 4505.738 7392.333 7392.333 5101.173 5101.173 5101.173\n[1441] 7167.193 7167.193 7167.193 5628.480 5628.480 5628.480 5628.480 5628.480\n[1449] 4674.577 6550.039 6550.039 6176.674 6176.674 6176.674 6176.674 7297.062\n[1457] 7297.062 5684.153 5684.153 5684.153 5684.153 5515.897 5515.897 5515.897\n[1465] 5515.897 5515.897 6837.260 6837.260 6837.260 6837.260 5083.946 5083.946\n[1473] 5083.946 5083.946 5083.946 6499.690 6499.690 6499.690 6499.690 6499.690\n[1481] 5985.615 5985.615 5144.678 5144.678 5144.678 5144.678 5144.678 6798.571\n[1489] 6798.571 6798.571 5079.449 5079.449 5079.449 4973.624 4973.624 5275.963\n[1497] 7015.885 7015.885 4095.436 4095.436 4095.436 5726.077 5726.077 5726.077\n[1505] 5726.077 5726.077 6150.156 6150.156 6150.156 6150.156 6190.087 6190.087\n[1513] 6190.087 6190.087 6190.087 6780.868 6780.868 6780.868 6780.868 6780.868\n[1521] 6572.027 6572.027 6572.027 6572.027 5243.023 5243.023 5243.023 5243.023\n[1529] 5243.023 6793.897 6793.897 6793.897 6793.897 6793.897 5382.533 5382.533\n[1537] 5382.533 5382.533 5382.533 4573.489 4573.489 7174.842 7174.842 7174.842\n[1545] 7174.842 8125.857 4473.946 4473.946 4473.946 4473.946 4473.946 4741.832\n[1553] 4741.832 4741.832 4741.832 7168.374 7168.374 7168.374 7168.374 7168.374\n[1561] 5815.830 5815.830 5815.830 5815.830 4250.273 4250.273 4250.273 4250.273\n[1569] 4250.273 7452.133 7452.133 7452.133 7452.133 5089.316 5089.316 5701.420\n[1577] 6171.375 6171.375 6171.375 6171.375 7181.606 7181.606 5539.979 5539.979\n[1585] 5539.979 5265.563 5265.563 5539.481 5539.481 5539.481 5539.481 5539.481\n[1593] 5292.464 5292.464 5292.464 5292.464 5292.464 5712.641 5712.641 5712.641\n[1601] 5712.641 7398.662 7398.662 7398.662 7398.662 7398.662 5368.695 5368.695\n[1609] 5368.695 5368.695 5368.695 6834.606 6834.606 6834.606 5852.673 5852.673\n[1617] 5852.673 4242.134 5944.031 5944.031 5944.031 5944.031 4979.862 4979.862\n[1625] 4979.862 7251.491 7251.491 7251.491 6099.122 6099.122 6099.122 6099.122\n[1633] 6099.122 6892.960 6892.960 6892.960 6892.960 6643.804 6643.804 6643.804\n[1641] 5904.058 5904.058 5904.058 5904.058 5335.899 5335.899 5335.899 5335.899\n[1649] 5335.899 5054.281 5054.281 5788.966 5788.966 5788.966 5994.860 4984.768\n[1657] 4984.768 4984.768 4984.768 4603.401 4603.401 4216.342 5446.025 5446.025\n[1665] 5446.025 6575.240 6575.240 6575.240 7792.980 7792.980 7671.557 7671.557\n[1673] 5674.217 7431.360 7431.360 7431.360 7431.360 4748.165 7865.261 7865.261\n[1681] 5224.190 5224.190 5224.190 5224.190 3639.183 3639.183 3639.183 3639.183\n[1689] 4224.629 4224.629 4224.629 4224.629 4224.629 5142.906 5142.906 5142.906\n[1697] 5142.906 5142.906 5698.402 5698.402 5698.402 5698.402 4612.528 4612.528\n[1705] 4612.528 4612.528 4612.528 5070.155 5070.155 5070.155 5070.155 5070.155\n[1713] 7696.022 7696.022 7696.022 6086.266 6086.266 6086.266 6165.422 6165.422\n[1721] 5775.989 5775.989 5775.989 6205.455 5540.816 5540.816 5540.816 7445.230\n[1729] 7445.230 7445.230 7445.230 4639.514 4639.514 7583.824 7583.824 7583.824\n[1737] 3927.895 3927.895 3927.895 5522.322 5522.322 5399.198 5399.198 5399.198\n[1745] 5399.198 5321.349 5321.349 5321.349 6184.395 5548.443 5811.183 5811.183\n[1753] 5811.183 6568.993 6568.993 6568.993 6568.993 6948.662 6948.662 6948.662\n[1761] 6948.662 5368.480 5368.480 5368.480 7191.975 7191.975 6234.878 6234.878\n[1769] 6049.786 6049.786 5010.253 5010.253 5688.892 6066.023 6066.023 6066.023\n[1777] 6066.023 7012.387 7012.387 7012.387 6481.546 6481.546 6481.546 6481.546\n[1785] 7897.707 7897.707 7897.707 5424.468 5617.712 5617.712 5391.926 5391.926\n[1793] 5391.926 4709.687 4709.687 4709.687 4709.687 4709.687 6648.297 6648.297\n[1801] 6648.297 6648.297 6648.297 5678.143 5678.143 5678.143 6450.541 6450.541\n[1809] 6450.541 6450.541 4440.664 5505.264 5505.264 5505.264 5505.264 5505.264\n[1817] 5730.027 5730.027 5730.027 8524.446 8524.446 8524.446 5788.263 5788.263\n[1825] 5788.263 5788.263 5788.263 5722.744 5808.227 3821.092 6375.577 6375.577\n[1833] 7199.955 7199.955 5848.508 5848.508 5848.508 6576.531 6576.531 5446.856\n[1841] 5446.856 5812.923 5812.923 5812.923 5812.923 5812.923 7144.792 7144.792\n[1849] 7144.792 6914.588 6914.588 6914.588 6914.588 6914.588 5744.107 4125.943\n[1857] 4125.943 4125.943 5464.314 5464.314 7061.463 6163.848 5460.241 6096.376\n[1865] 6096.376 6096.376 6096.376 5476.738 5476.738 7533.063 7533.063 7533.063\n[1873] 7575.953 5110.991 5871.949 6967.021 6967.021 6967.021 6967.021 6865.317\n[1881] 6865.317 6865.317 6865.317 6865.317 5855.878 5855.878 5855.878 5855.878\n[1889] 5855.878 7173.495 7173.495 7173.495 5640.593 5640.593 5640.593 5666.033\n[1897] 5666.033 5666.033 6886.121 6886.121 4928.990 4928.990 4928.990 4928.990\n[1905] 7360.534 7360.534 7360.534 7360.534 7360.534 7799.766 7799.766 7799.766\n[1913] 5593.199 5593.199 7282.521 7282.521 7282.521 6718.566 6718.566 6718.566\n[1921] 6718.566 5859.191 5859.191 5859.191 6848.232 6848.232 6993.304 6993.304\n[1929] 7071.522 5883.999 5883.999 4997.004 4818.709 5129.459 5129.459 5129.459\n[1937] 5129.459 5129.459 7589.171 7589.171 7589.171 7589.171 4896.539 4896.539\n[1945] 4896.539 4896.539 5439.006 5439.006 5126.967 5890.116 5890.116 5141.166\n[1953] 5141.166 3458.210 3458.210 3458.210 3458.210 5716.195 5716.195 5225.617\n[1961] 5225.617 5225.617 4221.824 4221.824 4221.824 4221.824 4605.166 4605.166\n[1969] 7362.670 6209.206 6209.206 5862.121 4570.288 4570.288 6878.294 6878.294\n[1977] 6878.294 6878.294 4326.399 4326.399 4326.399 6732.004 6732.004 6732.004\n[1985] 6732.004 6732.004 6365.139 6365.139 6365.139 6296.831 6296.831 6296.831\n[1993] 6296.831 5818.851 4817.469 4817.469 4921.069 4921.069 4921.069 4921.069\n[2001] 4921.069 7162.005 7162.005 7717.840 7717.840 7717.840 7424.475 6199.295\n[2009] 7266.550 7266.550 7266.550 7266.550 5086.515 6722.704 6641.213 6641.213\n[2017] 6641.213 6641.213 6641.213 5496.487 4892.777 4892.777 4892.777 6001.436\n[2025] 6001.436 6001.436 6001.436 6001.436 6020.159 6020.159 6020.159 6020.159\n[2033] 6020.159 6403.377 6403.377 6403.377 6403.377 6403.377 7989.195 7989.195\n[2041] 7989.195 7989.195 6893.738 6893.738 6893.738 6893.738 4742.971 4742.971\n[2049] 4742.971 4742.971 4928.882 4928.882 4928.882 4928.882 5545.810 5545.810\n[2057] 6799.156 6219.707 6219.707 6219.707 5260.677 5260.677 5260.677 5260.677\n[2065] 5260.677 8322.634 8322.634 8322.634 8322.634 5964.050 5271.374 5472.580\n[2073] 5472.580 5472.580 5472.580 5472.580 5898.015 5898.015 5898.015 5898.015\n[2081] 5627.893 5627.893 5627.893 5627.893 5784.845 5784.845 5784.845 5710.979\n[2089] 5710.979 5710.979 5710.979 7879.747 7879.747 7879.747 7551.066 6840.504\n[2097] 4451.253 4451.253 4451.253 4451.253 4592.152 4592.152 4592.152 4592.152\n[2105] 4592.152 7945.515 5226.917 6335.488 6335.488 6335.488 6335.488 5652.802\n[2113] 5652.802 5652.802 5652.802 5652.802 5820.614 7119.561 6038.468 6038.468\n[2121] 7811.339 7811.339 7811.339 7811.339 6311.894 6311.894 4576.521 4576.521\n[2129] 4576.521 6423.225 6423.225 6423.225 7429.688 5627.031 6016.639 6016.639\n[2137] 6016.639 6016.639 6016.639 6720.614 6720.614 6720.614 6959.357 6959.357\n[2145] 7653.640 7653.640 7653.640 7653.640 4214.899 8383.794 8383.794 8383.794\n[2153] 8383.794 4392.974 7126.043 4603.861 4603.861 4603.861 4603.861 4603.861\n[2161] 5532.262 5532.262 8030.231 8030.231 8030.231 5185.864 5185.864 5185.864\n[2169] 5185.864 5980.013 6883.230 6883.230 6883.230 6883.230 7292.901 7292.901\n[2177] 7292.901 7292.901 7292.901 6330.267 6330.267 6330.267 6617.969 6617.969\n[2185] 6617.969 6617.969 6617.969 8098.909 8098.909 8098.909 8098.909 8098.909\n[2193] 7024.926 7024.926 7024.926 6628.231 6628.231 5543.490 5543.490 5543.490\n[2201] 5543.490 5543.490 5992.716 5992.716 5992.716 5992.716 5992.716 6510.044\n[2209] 6510.044 5140.292 5140.292 5140.292 5140.292 6163.807 6163.807 6163.807\n[2217] 6046.700 6046.700 6673.950 6673.950 6673.950 6673.950 6079.506 6079.506\n[2225] 6079.506 6079.506 6079.506 5646.461 5646.461 5646.461 5646.461 5646.461\n[2233] 6314.479 6314.479 5730.835 5730.835 5730.835 5730.835 6259.920 6259.920\n[2241] 6259.920 6259.920 6259.920 5767.672 7345.305 7345.305 7345.305 7345.305\n[2249] 7345.305 6460.174 6460.174 6460.174 6460.174 6460.174 6854.422 6854.422\n[2257] 5705.869 5705.869 5705.869 5705.869 7301.994 7301.994 7301.994 5226.371\n[2265] 5226.371 5226.371 7952.253 7952.253 7952.253 7952.253 4881.243 6706.738\n[2273] 6706.738 8290.349 8290.349 8290.349 6991.476 6991.476 6991.476 6991.476\n[2281] 6821.498 6821.498 7052.023 7052.023 7052.023 7052.023 7052.023 5200.210\n[2289] 5200.210 5200.210 5200.210 5200.210 6652.121 6652.121 6652.121 6652.121\n[2297] 6652.121 4648.738 4648.738 4648.738 4648.738 4648.738 5850.480 5850.480\n[2305] 5850.480 5850.480 7542.813 7542.813 7542.813 4822.087 4822.087 4822.087\n[2313] 4822.087 5669.018 5935.753 5935.753 6630.591 8274.638 8274.638 8274.638\n[2321] 8274.638 8274.638 5400.523 6107.498 6107.498 6107.498 4567.557 4712.429\n[2329] 4712.429 4712.429 4712.429 4712.429 5545.361 5545.361 5545.361 5545.361\n[2337] 5545.361 5255.484 5255.484 5255.484 5255.484 5255.484 7083.040 7083.040\n[2345] 7083.040 7083.040 6473.276 6473.276 6473.276 6473.276 3858.057 3858.057\n[2353] 3858.057 3858.057 3858.057 6838.502 6838.502 6838.502 6838.502 6838.502\n[2361] 5289.403 5289.403 5289.403 5289.403 5289.403 6190.947 6190.947 6432.358\n[2369] 6432.358 6432.358 6679.371 6679.371 6679.371 6679.371 5312.646 5312.646\n[2377] 8378.343 8378.343 8378.343 8378.343 6973.349 6973.349 6973.349 6390.871\n[2385] 6390.871 7155.710 7155.710 6146.036 6146.036 5116.800 5116.800 7411.708\n[2393] 7192.525 7192.525 5756.767 5756.767 5756.767 5756.767 5348.438 5348.438\n[2401] 5348.438 5348.438 5348.438 5130.250 5461.813 5461.813 5461.813 5461.813\n[2409] 5461.813 4087.669 6439.698 6439.698 5218.374 5218.374 5218.374 5218.374\n[2417] 5218.374 5074.975 5074.975 5074.975 5074.975 3985.356 3985.356 6951.243\n[2425] 6951.243 6951.243 6951.243 6130.230 6130.230 6130.230 6130.230 6130.230\n[2433] 6934.520 6934.520 6934.520 6934.520 5933.056 5933.056 6027.183 6027.183\n[2441] 6027.183 6027.183 6027.183 4875.886 4875.886 4875.886 4875.886 5292.393\n[2449] 5292.393 5292.393 5526.693 5526.693 5526.693 6170.332 7477.632 7337.976\n[2457] 7337.976 7337.976 6730.393 6730.393 6730.393 6730.393 5589.583 5589.583\n[2465] 5589.583 5589.583 4731.313 4731.313 4731.313 4731.313 4731.313 6370.457\n[2473] 6370.457 6374.195 6374.195 6917.475 6917.475 6917.475 6369.862 7197.087\n[2481] 7197.087 7197.087 7197.087 7197.087 7974.052 7974.052 7974.052 5385.432\n[2489] 5385.432 4912.722 4912.722 4912.722 4637.878 4637.878 3658.551 3658.551\n[2497] 3658.551 7293.817 7293.817 7020.584 7020.584 7020.584 7020.584 4842.458\n[2505] 4842.458 4842.458 4842.458 8019.333 8019.333 8019.333 8019.333 6290.373\n[2513] 6290.373 6290.373 6581.108 6581.108 6581.108 6581.108 4193.987 4193.987\n[2521] 5269.876 5269.876 5269.876 5269.876 7501.263 7501.263 7501.263 6001.745\n[2529] 6001.745 6001.745 6001.745 6001.745 6763.315 6763.315 7040.166 6596.975\n[2537] 6596.975 6596.975 5723.798 5723.798 5723.798 5723.798 5723.798 6108.070\n[2545] 5060.753 5060.753 5060.753 5060.753 5060.753 3825.533 3825.533 3825.533\n[2553] 3825.533 3825.533 5808.647 5808.647 5808.647 5808.647 6470.866 6470.866\n[2561] 6470.866 7035.192 7035.192 7035.192 7035.192 7035.192 7068.027 7068.027\n[2569] 7068.027 7068.027 7068.027 8196.511 8196.511 8196.511 8196.511 8196.511\n[2577] 5665.927 5665.927 5665.927 5665.927 5665.927 5682.855 5682.855 5682.855\n[2585] 6669.438 6669.438 6278.399 6278.399 6278.399 6278.399 6278.399 6485.525\n[2593] 6485.525 6485.525 6485.525 6485.525 7676.797 5325.746 5325.746 7551.118\n[2601] 7741.644 7741.644 6292.162 6292.162 6292.162 4741.380 4741.380 4741.380\n[2609] 4741.380 4741.380 5567.627 5567.627 5567.627 5567.627 6121.679 6121.679\n[2617] 6121.679 6121.679 6411.475 6411.475 6411.475 6411.475 6673.993 6673.993\n[2625] 7106.244 7106.244 7106.244 7106.244 7106.244 5002.886 5002.886 4599.873\n[2633] 7986.656 7986.656 6617.449 6617.449 6617.449 6617.449 6617.449 4582.813\n[2641] 4582.813 4582.813 6045.118 6045.118 6045.118 6045.118 6045.118 6228.844\n[2649] 6228.844 6228.844 6228.844 4574.670 4574.670 4574.670 4574.670 4574.670\n[2657] 5044.642 5044.642 5044.642 5044.642 7140.425 7140.425 7140.425 7140.425\n[2665] 7140.425 5917.096 5917.096 6065.862 6065.862 6065.862 6065.862 6065.862\n[2673] 7441.078 6604.576 6081.299 6081.299 5920.482 5920.482 5920.482 5920.482\n[2681] 5361.779 5361.779 5361.779 5361.779 5361.779 7132.638 6669.297 6669.297\n[2689] 6669.297 5737.748 5737.748 5737.748 5737.748 6678.516 6678.516 6678.516\n[2697] 7695.814 7695.814 7695.814 5190.454 5667.562 7677.006 7677.006 7677.006\n[2705] 5453.888 5453.888 6992.278 6992.278 6992.278 6992.278 6992.278 6259.068\n[2713] 6259.068 6259.068 6259.068 6259.068 5314.422 4923.081 4923.081 4195.881\n[2721] 4195.881 4195.881 6292.025 6292.025 6292.025 4968.391 7814.304 7814.304\n[2729] 6328.971 6057.825 6057.825 6057.825 6057.825 6498.500 6498.500 6498.500\n[2737] 6498.500 6498.500 3830.154 3830.154 3830.154 3830.154 3830.154 7679.880\n[2745] 5938.805 7705.311 7705.311 7705.311 4688.665 6923.369 6923.369 6923.369\n[2753] 6923.369 6923.369 7024.383 7024.383 7024.383 7024.383 7024.383 9715.068\n[2761] 9715.068 9715.068 9715.068 9715.068 5674.958 5674.958 5674.958 5960.205\n[2769] 5960.205 5960.205 7148.889 7148.889 4477.058 4477.058 4477.058 5788.494\n[2777] 5788.494 6011.968 5931.715 5931.715 5931.715 5931.715 5931.715 6665.094\n[2785] 5547.945 5547.945 5547.945 5547.945 5547.945 5587.302 5587.302 5587.302\n[2793] 6266.314 6266.314 6266.314 6266.314 6266.314 7605.222 4772.000 4772.000\n[2801] 4672.762 6362.526 6362.526 6977.886 6977.886 6977.886 6977.886 6977.886\n[2809] 5868.512 5868.512 5868.512 5868.512 5868.512 7125.846 7125.846 7125.846\n[2817] 5245.253 5245.253 5245.253 5245.253 5245.253 7551.650 7648.261 7648.261\n[2825] 7648.261 7648.261 7648.261 7049.077 4758.313 4758.313 4758.313 5853.952\n[2833] 6242.028 6242.028 6242.028 6242.028 7083.595 7083.595 7083.595 4506.026\n[2841] 4265.844 4265.844 4265.844 4265.844 4265.844 7395.101 7395.101 4985.172\n[2849] 4985.172 4985.172 4985.172 5186.525 5186.525 5186.525 5186.525 5439.202\n[2857] 5439.202 5439.202 5468.948 7294.056 7294.056 5254.065 5254.065 5915.310\n[2865] 5915.310 5915.310 5915.310 5915.310 7148.751 7148.751 7148.751 4374.212\n[2873] 4374.212 4374.212 4374.212 6617.088 6797.656 6797.656 6293.055 6293.055\n[2881] 6866.451 6866.451 6866.451 6866.451 6560.829 6560.829 6294.382 6294.382\n[2889] 6294.382 6822.447 6822.447 4724.281 4724.281 4724.281 4724.281 4724.281\n[2897] 6427.169 6427.169 6427.169 7060.432 7060.432 7215.399 7215.399 6074.006\n[2905] 6074.006 6074.006 4963.402 4963.402 4963.402 4963.402 5531.593 5531.593\n[2913] 5531.593 5531.593 4789.649 4789.649 4789.649 5098.546 5098.546 5098.546\n[2921] 5098.546 6988.199 6311.234 6311.234 6311.234 6311.234 5236.860 5236.860\n[2929] 6281.312 6281.312 6281.312 5522.046 5522.046 5522.046 5522.046 4469.196\n[2937] 4469.196 4469.196 4469.196 7400.248 7400.248 7400.248 5780.272 5780.272\n[2945] 5780.272 5780.272 7081.412 6862.159 6862.159 4899.385 6009.977 5859.134\n[2953] 5859.134 7041.150 7041.150 7041.150 7041.150 6291.845 6291.845 6291.845\n[2961] 6291.845 6291.845 6585.049 6585.049 6206.367 6206.367 6206.367 6206.367\n[2969] 6978.524 6978.524 6978.524 5238.751 6054.642 6054.642 6054.642 6054.642\n[2977] 6054.642 6653.482 6653.482 6653.482 6653.482 6653.482 7561.169 7561.169\n[2985] 5956.651 5956.651 6651.643 6651.643 6651.643 6824.746 3676.404 3676.404\n[2993] 6422.595 6422.595 6422.595 6422.595 6971.509 6971.509 6761.129 6847.709\n[3001] 6847.709 6695.193 6695.193 5374.147 5374.147 6383.148 6383.148 6383.148\n[3009] 6747.546 6747.546 3392.976 3392.976 3392.976"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-48",
    "href": "speeding-up-r/slides.html#section-48",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "touches &lt;- strsplit(path_data$path, \"&gt;\", fixed = TRUE)\nlt &lt;- lengths(touches)\ngroups &lt;- rep.int(seq_along(touches), lt)\noutcome &lt;- rep.int(path_data$leads, lt)\nvalue &lt;- rep.int(path_data$value, lt) \ntouches &lt;- unlist(touches)\n\n\n\n   [1] \"tiktok\" \"blog\"   \"gs\"     \"fb\"     \"rtl\"    \"yt\"     \"blog\"   \"gs\"    \n   [9] \"fb\"     \"gda\"    \"fb\"     \"gs\"     \"yt\"     \"gda\"    \"yt\"     \"tiktok\"\n  [17] \"blog\"   \"rtl\"    \"gda\"    \"yt\"     \"rtl\"    \"tiktok\" \"tiktok\" \"blog\"  \n  [25] \"gda\"    \"tiktok\" \"rtl\"    \"yt\"     \"gs\"     \"tiktok\" \"rtl\"    \"blog\"  \n  [33] \"gda\"    \"gs\"     \"gda\"    \"fb\"     \"gs\"     \"rtl\"    \"blog\"   \"rtl\"   \n  [41] \"yt\"     \"tiktok\" \"gda\"    \"fb\"     \"rtl\"    \"gda\"    \"yt\"     \"blog\"  \n  [49] \"yt\"     \"blog\"   \"gs\"     \"fb\"     \"gda\"    \"yt\"     \"blog\"   \"tiktok\"\n  [57] \"yt\"     \"gs\"     \"rtl\"    \"fb\"     \"gda\"    \"yt\"     \"blog\"   \"tiktok\"\n  [65] \"fb\"     \"rtl\"    \"rtl\"    \"tiktok\" \"gda\"    \"yt\"     \"rtl\"    \"fb\"    \n  [73] \"gs\"     \"gs\"     \"fb\"     \"gs\"     \"gda\"    \"blog\"   \"tiktok\" \"gda\"   \n  [81] \"fb\"     \"rtl\"    \"gs\"     \"tiktok\" \"yt\"     \"blog\"   \"gda\"    \"gs\"    \n  [89] \"blog\"   \"rtl\"    \"tiktok\" \"gda\"    \"yt\"     \"blog\"   \"rtl\"    \"fb\"    \n  [97] \"gda\"    \"gs\"     \"rtl\"    \"gs\"     \"fb\"     \"yt\"     \"gs\"     \"blog\"  \n [105] \"yt\"     \"gda\"    \"tiktok\" \"fb\"     \"gda\"    \"yt\"     \"rtl\"    \"tiktok\"\n [113] \"blog\"   \"rtl\"    \"fb\"     \"yt\"     \"tiktok\" \"gs\"     \"blog\"   \"gda\"   \n [121] \"blog\"   \"rtl\"    \"gda\"    \"gs\"     \"fb\"     \"yt\"     \"blog\"   \"blog\"  \n [129] \"yt\"     \"gda\"    \"tiktok\" \"fb\"     \"fb\"     \"blog\"   \"gda\"    \"fb\"    \n [137] \"yt\"     \"gs\"     \"gda\"    \"fb\"     \"gs\"     \"tiktok\" \"blog\"   \"rtl\"   \n [145] \"gda\"    \"tiktok\" \"yt\"     \"fb\"     \"gda\"    \"gs\"     \"gs\"     \"gda\"   \n [153] \"yt\"     \"blog\"   \"yt\"     \"tiktok\" \"yt\"     \"blog\"   \"fb\"     \"gs\"    \n [161] \"gs\"     \"blog\"   \"yt\"     \"fb\"     \"gda\"    \"fb\"     \"gs\"     \"gda\"   \n [169] \"tiktok\" \"yt\"     \"rtl\"    \"gda\"    \"tiktok\" \"fb\"     \"gs\"     \"yt\"    \n [177] \"tiktok\" \"gda\"    \"rtl\"    \"gs\"     \"gda\"    \"blog\"   \"rtl\"    \"yt\"    \n [185] \"gs\"     \"gda\"    \"tiktok\" \"yt\"     \"gs\"     \"tiktok\" \"gs\"     \"rtl\"   \n [193] \"fb\"     \"gda\"    \"gda\"    \"yt\"     \"fb\"     \"gda\"    \"tiktok\" \"blog\"  \n [201] \"rtl\"    \"gda\"    \"tiktok\" \"yt\"     \"fb\"     \"gda\"    \"gs\"     \"blog\"  \n [209] \"gda\"    \"fb\"     \"gs\"     \"rtl\"    \"tiktok\" \"yt\"     \"fb\"     \"blog\"  \n [217] \"gda\"    \"gs\"     \"yt\"     \"blog\"   \"gs\"     \"tiktok\" \"rtl\"    \"tiktok\"\n [225] \"gda\"    \"blog\"   \"tiktok\" \"gda\"    \"gs\"     \"blog\"   \"yt\"     \"tiktok\"\n [233] \"rtl\"    \"gs\"     \"blog\"   \"rtl\"    \"blog\"   \"tiktok\" \"gda\"    \"yt\"    \n [241] \"rtl\"    \"gda\"    \"blog\"   \"gs\"     \"rtl\"    \"yt\"     \"tiktok\" \"fb\"    \n [249] \"tiktok\" \"tiktok\" \"gda\"    \"yt\"     \"gs\"     \"gs\"     \"blog\"   \"tiktok\"\n [257] \"yt\"     \"tiktok\" \"gs\"     \"fb\"     \"gda\"    \"rtl\"    \"rtl\"    \"blog\"  \n [265] \"yt\"     \"gs\"     \"tiktok\" \"gda\"    \"gs\"     \"blog\"   \"fb\"     \"tiktok\"\n [273] \"fb\"     \"yt\"     \"blog\"   \"fb\"     \"gda\"    \"rtl\"    \"yt\"     \"tiktok\"\n [281] \"tiktok\" \"gs\"     \"rtl\"    \"yt\"     \"tiktok\" \"blog\"   \"gs\"     \"fb\"    \n [289] \"rtl\"    \"gs\"     \"gda\"    \"fb\"     \"yt\"     \"gs\"     \"blog\"   \"yt\"    \n [297] \"gs\"     \"tiktok\" \"yt\"     \"fb\"     \"gs\"     \"gda\"    \"blog\"   \"tiktok\"\n [305] \"yt\"     \"fb\"     \"rtl\"    \"blog\"   \"tiktok\" \"yt\"     \"gda\"    \"tiktok\"\n [313] \"fb\"     \"gs\"     \"yt\"     \"tiktok\" \"gs\"     \"gda\"    \"yt\"     \"fb\"    \n [321] \"gda\"    \"gs\"     \"rtl\"    \"tiktok\" \"yt\"     \"rtl\"    \"gs\"     \"blog\"  \n [329] \"gs\"     \"rtl\"    \"gda\"    \"tiktok\" \"rtl\"    \"yt\"     \"tiktok\" \"gda\"   \n [337] \"gda\"    \"fb\"     \"gs\"     \"tiktok\" \"yt\"     \"fb\"     \"gda\"    \"gda\"   \n [345] \"yt\"     \"gs\"     \"rtl\"    \"rtl\"    \"fb\"     \"blog\"   \"fb\"     \"tiktok\"\n [353] \"gs\"     \"blog\"   \"fb\"     \"rtl\"    \"tiktok\" \"gs\"     \"gda\"    \"rtl\"   \n [361] \"blog\"   \"blog\"   \"tiktok\" \"yt\"     \"yt\"     \"gda\"    \"yt\"     \"rtl\"   \n [369] \"tiktok\" \"blog\"   \"gs\"     \"rtl\"    \"gda\"    \"yt\"     \"gs\"     \"gda\"   \n [377] \"blog\"   \"yt\"     \"rtl\"    \"gda\"    \"gs\"     \"tiktok\" \"gda\"    \"gs\"    \n [385] \"blog\"   \"gs\"     \"rtl\"    \"blog\"   \"blog\"   \"fb\"     \"gda\"    \"yt\"    \n [393] \"gs\"     \"fb\"     \"gda\"    \"fb\"     \"fb\"     \"blog\"   \"tiktok\" \"rtl\"   \n [401] \"gda\"    \"blog\"   \"tiktok\" \"fb\"     \"fb\"     \"yt\"     \"blog\"   \"tiktok\"\n [409] \"rtl\"    \"fb\"     \"fb\"     \"blog\"   \"tiktok\" \"gs\"     \"fb\"     \"yt\"    \n [417] \"gda\"    \"tiktok\" \"rtl\"    \"fb\"     \"fb\"     \"blog\"   \"rtl\"    \"tiktok\"\n [425] \"gs\"     \"rtl\"    \"gda\"    \"fb\"     \"gda\"    \"yt\"     \"fb\"     \"tiktok\"\n [433] \"blog\"   \"rtl\"    \"blog\"   \"blog\"   \"yt\"     \"gda\"    \"tiktok\" \"gda\"   \n [441] \"fb\"     \"rtl\"    \"rtl\"    \"gda\"    \"gs\"     \"blog\"   \"gda\"    \"fb\"    \n [449] \"rtl\"    \"blog\"   \"gda\"    \"tiktok\" \"gs\"     \"fb\"     \"tiktok\" \"gs\"    \n [457] \"fb\"     \"tiktok\" \"fb\"     \"gs\"     \"blog\"   \"rtl\"    \"rtl\"    \"gda\"   \n [465] \"yt\"     \"gs\"     \"blog\"   \"rtl\"    \"blog\"   \"tiktok\" \"gs\"     \"gda\"   \n [473] \"rtl\"    \"yt\"     \"blog\"   \"tiktok\" \"gs\"     \"rtl\"    \"yt\"     \"gs\"    \n [481] \"yt\"     \"gda\"    \"blog\"   \"fb\"     \"yt\"     \"rtl\"    \"blog\"   \"gs\"    \n [489] \"tiktok\" \"fb\"     \"yt\"     \"gs\"     \"rtl\"    \"gs\"     \"rtl\"    \"blog\"  \n [497] \"fb\"     \"rtl\"    \"blog\"   \"gda\"    \"gs\"     \"tiktok\" \"yt\"     \"tiktok\"\n [505] \"gs\"     \"gda\"    \"blog\"   \"gda\"    \"yt\"     \"tiktok\" \"yt\"     \"blog\"  \n [513] \"yt\"     \"rtl\"    \"blog\"   \"gs\"     \"yt\"     \"fb\"     \"gs\"     \"blog\"  \n [521] \"gda\"    \"gs\"     \"fb\"     \"yt\"     \"rtl\"    \"gda\"    \"tiktok\" \"gda\"   \n [529] \"gs\"     \"blog\"   \"fb\"     \"yt\"     \"blog\"   \"gs\"     \"gda\"    \"blog\"  \n [537] \"tiktok\" \"gs\"     \"fb\"     \"rtl\"    \"gs\"     \"blog\"   \"blog\"   \"yt\"    \n [545] \"fb\"     \"tiktok\" \"fb\"     \"gs\"     \"tiktok\" \"yt\"     \"tiktok\" \"blog\"  \n [553] \"rtl\"    \"fb\"     \"gda\"    \"blog\"   \"rtl\"    \"gs\"     \"blog\"   \"yt\"    \n [561] \"gda\"    \"tiktok\" \"gs\"     \"blog\"   \"rtl\"    \"gda\"    \"gs\"     \"blog\"  \n [569] \"gda\"    \"tiktok\" \"gda\"    \"fb\"     \"gs\"     \"yt\"     \"rtl\"    \"gs\"    \n [577] \"blog\"   \"rtl\"    \"rtl\"    \"fb\"     \"tiktok\" \"yt\"     \"blog\"   \"yt\"    \n [585] \"fb\"     \"gs\"     \"gda\"    \"tiktok\" \"fb\"     \"gs\"     \"rtl\"    \"gs\"    \n [593] \"gda\"    \"fb\"     \"blog\"   \"gs\"     \"rtl\"    \"gda\"    \"fb\"     \"rtl\"   \n [601] \"yt\"     \"gda\"    \"tiktok\" \"rtl\"    \"rtl\"    \"yt\"     \"tiktok\" \"tiktok\"\n [609] \"gs\"     \"blog\"   \"blog\"   \"gs\"     \"fb\"     \"fb\"     \"yt\"     \"tiktok\"\n [617] \"gs\"     \"gs\"     \"yt\"     \"fb\"     \"blog\"   \"gda\"    \"yt\"     \"blog\"  \n [625] \"fb\"     \"rtl\"    \"gs\"     \"fb\"     \"tiktok\" \"rtl\"    \"blog\"   \"fb\"    \n [633] \"yt\"     \"tiktok\" \"rtl\"    \"yt\"     \"blog\"   \"fb\"     \"gs\"     \"fb\"    \n [641] \"blog\"   \"tiktok\" \"yt\"     \"gs\"     \"fb\"     \"tiktok\" \"gs\"     \"gda\"   \n [649] \"rtl\"    \"rtl\"    \"tiktok\" \"blog\"   \"gda\"    \"fb\"     \"rtl\"    \"fb\"    \n [657] \"blog\"   \"fb\"     \"yt\"     \"fb\"     \"blog\"   \"fb\"     \"gs\"     \"yt\"    \n [665] \"blog\"   \"rtl\"    \"rtl\"    \"gda\"    \"gs\"     \"tiktok\" \"yt\"     \"fb\"    \n [673] \"tiktok\" \"yt\"     \"gda\"    \"blog\"   \"fb\"     \"gda\"    \"tiktok\" \"gs\"    \n [681] \"blog\"   \"gda\"    \"tiktok\" \"fb\"     \"gs\"     \"blog\"   \"blog\"   \"gda\"   \n [689] \"gs\"     \"tiktok\" \"gda\"    \"yt\"     \"gs\"     \"gda\"    \"blog\"   \"fb\"    \n [697] \"fb\"     \"yt\"     \"rtl\"    \"yt\"     \"gda\"    \"tiktok\" \"rtl\"    \"gs\"    \n [705] \"blog\"   \"gs\"     \"gda\"    \"rtl\"    \"gda\"    \"rtl\"    \"gs\"     \"yt\"    \n [713] \"blog\"   \"fb\"     \"gda\"    \"rtl\"    \"fb\"     \"gs\"     \"yt\"     \"fb\"    \n [721] \"gs\"     \"fb\"     \"tiktok\" \"gda\"    \"rtl\"    \"gs\"     \"gda\"    \"blog\"  \n [729] \"fb\"     \"fb\"     \"gs\"     \"rtl\"    \"blog\"   \"gda\"    \"rtl\"    \"fb\"    \n [737] \"tiktok\" \"gs\"     \"yt\"     \"rtl\"    \"fb\"     \"gs\"     \"yt\"     \"rtl\"   \n [745] \"blog\"   \"yt\"     \"tiktok\" \"fb\"     \"gs\"     \"fb\"     \"yt\"     \"fb\"    \n [753] \"yt\"     \"tiktok\" \"gs\"     \"blog\"   \"yt\"     \"fb\"     \"rtl\"    \"blog\"  \n [761] \"rtl\"    \"blog\"   \"gda\"    \"fb\"     \"yt\"     \"gda\"    \"gs\"     \"rtl\"   \n [769] \"fb\"     \"gs\"     \"fb\"     \"blog\"   \"gda\"    \"rtl\"    \"rtl\"    \"rtl\"   \n [777] \"gda\"    \"gs\"     \"tiktok\" \"tiktok\" \"yt\"     \"fb\"     \"rtl\"    \"gda\"   \n [785] \"blog\"   \"gs\"     \"rtl\"    \"fb\"     \"blog\"   \"gs\"     \"fb\"     \"tiktok\"\n [793] \"blog\"   \"gda\"    \"fb\"     \"blog\"   \"gda\"    \"gs\"     \"gs\"     \"gda\"   \n [801] \"tiktok\" \"yt\"     \"blog\"   \"gda\"    \"rtl\"    \"blog\"   \"yt\"     \"rtl\"   \n [809] \"blog\"   \"gda\"    \"yt\"     \"tiktok\" \"tiktok\" \"fb\"     \"rtl\"    \"blog\"  \n [817] \"rtl\"    \"gda\"    \"blog\"   \"gs\"     \"gs\"     \"blog\"   \"fb\"     \"rtl\"   \n [825] \"blog\"   \"tiktok\" \"yt\"     \"gs\"     \"gda\"    \"yt\"     \"rtl\"    \"fb\"    \n [833] \"tiktok\" \"gda\"    \"fb\"     \"rtl\"    \"blog\"   \"fb\"     \"fb\"     \"blog\"  \n [841] \"fb\"     \"blog\"   \"yt\"     \"gs\"     \"rtl\"    \"fb\"     \"blog\"   \"gs\"    \n [849] \"fb\"     \"gda\"    \"yt\"     \"gda\"    \"gda\"    \"fb\"     \"rtl\"    \"gs\"    \n [857] \"blog\"   \"tiktok\" \"gs\"     \"tiktok\" \"yt\"     \"blog\"   \"gs\"     \"gs\"    \n [865] \"tiktok\" \"blog\"   \"gs\"     \"fb\"     \"gda\"    \"blog\"   \"yt\"     \"gda\"   \n [873] \"blog\"   \"yt\"     \"rtl\"    \"tiktok\" \"blog\"   \"gda\"    \"yt\"     \"rtl\"   \n [881] \"tiktok\" \"fb\"     \"blog\"   \"yt\"     \"gs\"     \"tiktok\" \"gda\"    \"rtl\"   \n [889] \"gs\"     \"fb\"     \"tiktok\" \"yt\"     \"gda\"    \"tiktok\" \"fb\"     \"rtl\"   \n [897] \"gs\"     \"yt\"     \"blog\"   \"tiktok\" \"yt\"     \"blog\"   \"gda\"    \"fb\"    \n [905] \"blog\"   \"tiktok\" \"gda\"    \"blog\"   \"gs\"     \"fb\"     \"tiktok\" \"rtl\"   \n [913] \"blog\"   \"yt\"     \"gs\"     \"blog\"   \"gda\"    \"blog\"   \"rtl\"    \"tiktok\"\n [921] \"yt\"     \"rtl\"    \"gs\"     \"blog\"   \"tiktok\" \"yt\"     \"fb\"     \"blog\"  \n [929] \"blog\"   \"tiktok\" \"yt\"     \"gs\"     \"fb\"     \"gs\"     \"blog\"   \"fb\"    \n [937] \"tiktok\" \"gs\"     \"fb\"     \"yt\"     \"gs\"     \"gs\"     \"fb\"     \"tiktok\"\n [945] \"yt\"     \"fb\"     \"rtl\"    \"gs\"     \"blog\"   \"yt\"     \"fb\"     \"gs\"    \n [953] \"rtl\"    \"yt\"     \"fb\"     \"fb\"     \"blog\"   \"fb\"     \"tiktok\" \"rtl\"   \n [961] \"blog\"   \"gs\"     \"tiktok\" \"rtl\"    \"blog\"   \"yt\"     \"gda\"    \"rtl\"   \n [969] \"yt\"     \"tiktok\" \"rtl\"    \"gda\"    \"blog\"   \"gda\"    \"fb\"     \"yt\"    \n [977] \"blog\"   \"gda\"    \"yt\"     \"rtl\"    \"fb\"     \"gda\"    \"rtl\"    \"gda\"   \n [985] \"gs\"     \"blog\"   \"gda\"    \"tiktok\" \"gda\"    \"fb\"     \"yt\"     \"gs\"    \n [993] \"gs\"     \"gda\"    \"gs\"     \"rtl\"    \"tiktok\" \"gda\"    \"tiktok\" \"gda\"   \n[1001] \"yt\"     \"gs\"     \"blog\"   \"tiktok\" \"gs\"     \"blog\"   \"gda\"    \"blog\"  \n[1009] \"fb\"     \"blog\"   \"yt\"     \"rtl\"    \"gs\"     \"yt\"     \"yt\"     \"rtl\"   \n[1017] \"gs\"     \"gs\"     \"yt\"     \"blog\"   \"tiktok\" \"fb\"     \"rtl\"    \"gs\"    \n[1025] \"tiktok\" \"blog\"   \"gda\"    \"yt\"     \"rtl\"    \"tiktok\" \"blog\"   \"fb\"    \n[1033] \"gda\"    \"gda\"    \"rtl\"    \"fb\"     \"fb\"     \"gda\"    \"gs\"     \"fb\"    \n[1041] \"tiktok\" \"tiktok\" \"gs\"     \"fb\"     \"yt\"     \"blog\"   \"rtl\"    \"yt\"    \n[1049] \"fb\"     \"tiktok\" \"gs\"     \"rtl\"    \"fb\"     \"blog\"   \"gs\"     \"rtl\"   \n[1057] \"fb\"     \"yt\"     \"yt\"     \"tiktok\" \"rtl\"    \"yt\"     \"fb\"     \"rtl\"   \n[1065] \"blog\"   \"gda\"    \"rtl\"    \"gs\"     \"tiktok\" \"blog\"   \"yt\"     \"gda\"   \n[1073] \"fb\"     \"gs\"     \"tiktok\" \"blog\"   \"tiktok\" \"tiktok\" \"gda\"    \"gs\"    \n[1081] \"rtl\"    \"tiktok\" \"yt\"     \"fb\"     \"yt\"     \"blog\"   \"gs\"     \"tiktok\"\n[1089] \"yt\"     \"gda\"    \"blog\"   \"yt\"     \"tiktok\" \"fb\"     \"fb\"     \"tiktok\"\n[1097] \"fb\"     \"gda\"    \"rtl\"    \"blog\"   \"gda\"    \"yt\"     \"tiktok\" \"blog\"  \n[1105] \"gda\"    \"fb\"     \"tiktok\" \"gs\"     \"gs\"     \"fb\"     \"yt\"     \"blog\"  \n[1113] \"fb\"     \"tiktok\" \"rtl\"    \"gda\"    \"rtl\"    \"yt\"     \"fb\"     \"gs\"    \n[1121] \"gs\"     \"gda\"    \"fb\"     \"rtl\"    \"yt\"     \"tiktok\" \"rtl\"    \"tiktok\"\n[1129] \"blog\"   \"rtl\"    \"yt\"     \"tiktok\" \"gda\"    \"yt\"     \"blog\"   \"gda\"   \n[1137] \"yt\"     \"blog\"   \"rtl\"    \"gda\"    \"gs\"     \"gda\"    \"fb\"     \"yt\"    \n[1145] \"rtl\"    \"tiktok\" \"rtl\"    \"yt\"     \"gs\"     \"gs\"     \"gda\"    \"yt\"    \n[1153] \"fb\"     \"yt\"     \"rtl\"    \"gs\"     \"rtl\"    \"yt\"     \"gda\"    \"rtl\"   \n[1161] \"gs\"     \"tiktok\" \"blog\"   \"gda\"    \"fb\"     \"rtl\"    \"tiktok\" \"gs\"    \n[1169] \"tiktok\" \"yt\"     \"gs\"     \"gda\"    \"tiktok\" \"yt\"     \"fb\"     \"tiktok\"\n[1177] \"yt\"     \"gda\"    \"rtl\"    \"blog\"   \"tiktok\" \"tiktok\" \"gs\"     \"gs\"    \n[1185] \"rtl\"    \"blog\"   \"fb\"     \"tiktok\" \"blog\"   \"rtl\"    \"fb\"     \"fb\"    \n[1193] \"fb\"     \"gda\"    \"gs\"     \"blog\"   \"fb\"     \"rtl\"    \"blog\"   \"gda\"   \n[1201] \"tiktok\" \"rtl\"    \"rtl\"    \"rtl\"    \"gs\"     \"yt\"     \"fb\"     \"rtl\"   \n[1209] \"gda\"    \"fb\"     \"gs\"     \"yt\"     \"fb\"     \"gs\"     \"blog\"   \"gda\"   \n[1217] \"blog\"   \"yt\"     \"rtl\"    \"tiktok\" \"yt\"     \"gda\"    \"gs\"     \"yt\"    \n[1225] \"gda\"    \"yt\"     \"fb\"     \"rtl\"    \"gs\"     \"gda\"    \"gs\"     \"gs\"    \n[1233] \"tiktok\" \"gda\"    \"rtl\"    \"gs\"     \"fb\"     \"gs\"     \"blog\"   \"fb\"    \n[1241] \"yt\"     \"gs\"     \"yt\"     \"rtl\"    \"blog\"   \"gs\"     \"gda\"    \"blog\"  \n[1249] \"tiktok\" \"yt\"     \"gda\"    \"gda\"    \"blog\"   \"gs\"     \"gda\"    \"blog\"  \n[1257] \"yt\"     \"yt\"     \"gda\"    \"fb\"     \"gs\"     \"blog\"   \"tiktok\" \"tiktok\"\n[1265] \"gs\"     \"rtl\"    \"tiktok\" \"yt\"     \"fb\"     \"gs\"     \"gda\"    \"gs\"    \n[1273] \"gs\"     \"tiktok\" \"fb\"     \"rtl\"    \"gda\"    \"blog\"   \"rtl\"    \"yt\"    \n[1281] \"gs\"     \"yt\"     \"gda\"    \"rtl\"    \"tiktok\" \"fb\"     \"yt\"     \"gda\"   \n[1289] \"blog\"   \"rtl\"    \"gda\"    \"gs\"     \"yt\"     \"fb\"     \"rtl\"    \"yt\"    \n[1297] \"tiktok\" \"fb\"     \"fb\"     \"blog\"   \"yt\"     \"rtl\"    \"gs\"     \"yt\"    \n[1305] \"tiktok\" \"tiktok\" \"yt\"     \"blog\"   \"gs\"     \"fb\"     \"yt\"     \"gda\"   \n[1313] \"yt\"     \"gs\"     \"fb\"     \"blog\"   \"yt\"     \"yt\"     \"tiktok\" \"gda\"   \n[1321] \"rtl\"    \"gs\"     \"blog\"   \"rtl\"    \"fb\"     \"tiktok\" \"blog\"   \"gs\"    \n[1329] \"tiktok\" \"yt\"     \"rtl\"    \"gs\"     \"gs\"     \"fb\"     \"gs\"     \"rtl\"   \n[1337] \"tiktok\" \"gda\"    \"blog\"   \"yt\"     \"fb\"     \"tiktok\" \"fb\"     \"yt\"    \n[1345] \"yt\"     \"gda\"    \"blog\"   \"fb\"     \"tiktok\" \"blog\"   \"tiktok\" \"gs\"    \n[1353] \"rtl\"    \"gda\"    \"fb\"     \"rtl\"    \"yt\"     \"gs\"     \"blog\"   \"rtl\"   \n[1361] \"gda\"    \"gda\"    \"gs\"     \"yt\"     \"tiktok\" \"yt\"     \"fb\"     \"rtl\"   \n[1369] \"gs\"     \"blog\"   \"rtl\"    \"blog\"   \"rtl\"    \"gs\"     \"gda\"    \"yt\"    \n[1377] \"tiktok\" \"blog\"   \"gda\"    \"rtl\"    \"fb\"     \"gs\"     \"yt\"     \"rtl\"   \n[1385] \"tiktok\" \"blog\"   \"yt\"     \"rtl\"    \"gs\"     \"tiktok\" \"blog\"   \"yt\"    \n[1393] \"rtl\"    \"gs\"     \"blog\"   \"yt\"     \"gs\"     \"gda\"    \"tiktok\" \"rtl\"   \n[1401] \"fb\"     \"fb\"     \"blog\"   \"gda\"    \"yt\"     \"gs\"     \"rtl\"    \"tiktok\"\n[1409] \"blog\"   \"gs\"     \"rtl\"    \"gda\"    \"yt\"     \"gda\"    \"tiktok\" \"gda\"   \n[1417] \"rtl\"    \"tiktok\" \"yt\"     \"blog\"   \"gda\"    \"blog\"   \"tiktok\" \"yt\"    \n[1425] \"rtl\"    \"fb\"     \"gs\"     \"gs\"     \"rtl\"    \"fb\"     \"gda\"    \"yt\"    \n[1433] \"gda\"    \"gs\"     \"tiktok\" \"gda\"    \"tiktok\" \"gs\"     \"gda\"    \"rtl\"   \n[1441] \"yt\"     \"rtl\"    \"gda\"    \"gs\"     \"fb\"     \"yt\"     \"gda\"    \"tiktok\"\n[1449] \"yt\"     \"tiktok\" \"rtl\"    \"rtl\"    \"gs\"     \"tiktok\" \"gda\"    \"gs\"    \n[1457] \"yt\"     \"tiktok\" \"fb\"     \"rtl\"    \"gda\"    \"blog\"   \"gs\"     \"tiktok\"\n[1465] \"gda\"    \"yt\"     \"fb\"     \"yt\"     \"rtl\"    \"gda\"    \"rtl\"    \"gda\"   \n[1473] \"yt\"     \"tiktok\" \"blog\"   \"blog\"   \"yt\"     \"fb\"     \"gda\"    \"tiktok\"\n[1481] \"rtl\"    \"tiktok\" \"gda\"    \"fb\"     \"blog\"   \"rtl\"    \"gs\"     \"fb\"    \n[1489] \"gda\"    \"tiktok\" \"rtl\"    \"blog\"   \"gs\"     \"blog\"   \"tiktok\" \"fb\"    \n[1497] \"gs\"     \"fb\"     \"fb\"     \"blog\"   \"tiktok\" \"gs\"     \"tiktok\" \"fb\"    \n[1505] \"blog\"   \"gda\"    \"yt\"     \"rtl\"    \"gs\"     \"blog\"   \"fb\"     \"gda\"   \n[1513] \"yt\"     \"tiktok\" \"rtl\"    \"gs\"     \"blog\"   \"tiktok\" \"gda\"    \"rtl\"   \n[1521] \"gda\"    \"yt\"     \"gs\"     \"fb\"     \"yt\"     \"fb\"     \"gda\"    \"tiktok\"\n[1529] \"blog\"   \"yt\"     \"tiktok\" \"gs\"     \"gda\"    \"blog\"   \"blog\"   \"fb\"    \n[1537] \"tiktok\" \"gs\"     \"gda\"    \"blog\"   \"fb\"     \"gs\"     \"rtl\"    \"fb\"    \n[1545] \"tiktok\" \"rtl\"    \"gs\"     \"yt\"     \"gda\"    \"fb\"     \"tiktok\" \"tiktok\"\n[1553] \"fb\"     \"gda\"    \"yt\"     \"yt\"     \"fb\"     \"rtl\"    \"tiktok\" \"gda\"   \n[1561] \"fb\"     \"blog\"   \"yt\"     \"gda\"    \"tiktok\" \"gda\"    \"fb\"     \"blog\"  \n[1569] \"yt\"     \"rtl\"    \"fb\"     \"tiktok\" \"gs\"     \"gs\"     \"rtl\"    \"blog\"  \n[1577] \"yt\"     \"tiktok\" \"fb\"     \"gda\"    \"gs\"     \"blog\"   \"fb\"     \"tiktok\"\n[1585] \"gs\"     \"tiktok\" \"yt\"     \"gda\"    \"rtl\"    \"tiktok\" \"yt\"     \"fb\"    \n[1593] \"tiktok\" \"fb\"     \"gs\"     \"yt\"     \"blog\"   \"rtl\"    \"yt\"     \"gda\"   \n[1601] \"tiktok\" \"rtl\"    \"yt\"     \"blog\"   \"gda\"    \"fb\"     \"blog\"   \"rtl\"   \n[1609] \"yt\"     \"fb\"     \"tiktok\" \"yt\"     \"rtl\"    \"blog\"   \"yt\"     \"gs\"    \n[1617] \"rtl\"    \"fb\"     \"tiktok\" \"fb\"     \"gs\"     \"rtl\"    \"blog\"   \"gda\"   \n[1625] \"gs\"     \"gs\"     \"yt\"     \"fb\"     \"rtl\"    \"gs\"     \"fb\"     \"gda\"   \n[1633] \"yt\"     \"blog\"   \"rtl\"    \"gda\"    \"fb\"     \"rtl\"    \"gda\"    \"fb\"    \n[1641] \"gs\"     \"tiktok\" \"gda\"    \"rtl\"    \"tiktok\" \"gda\"    \"yt\"     \"fb\"    \n[1649] \"rtl\"    \"gs\"     \"yt\"     \"fb\"     \"rtl\"    \"gs\"     \"gs\"     \"tiktok\"\n[1657] \"gs\"     \"yt\"     \"fb\"     \"rtl\"    \"blog\"   \"gda\"    \"rtl\"    \"gda\"   \n[1665] \"yt\"     \"fb\"     \"tiktok\" \"blog\"   \"blog\"   \"gs\"     \"yt\"     \"rtl\"   \n[1673] \"tiktok\" \"blog\"   \"gs\"     \"yt\"     \"gda\"    \"gs\"     \"rtl\"    \"gda\"   \n[1681] \"gs\"     \"blog\"   \"yt\"     \"rtl\"    \"gs\"     \"tiktok\" \"yt\"     \"gda\"   \n[1689] \"tiktok\" \"blog\"   \"gs\"     \"fb\"     \"yt\"     \"yt\"     \"gda\"    \"rtl\"   \n[1697] \"blog\"   \"tiktok\" \"rtl\"    \"fb\"     \"blog\"   \"yt\"     \"fb\"     \"rtl\"   \n[1705] \"gs\"     \"tiktok\" \"blog\"   \"fb\"     \"gs\"     \"rtl\"    \"blog\"   \"gda\"   \n[1713] \"fb\"     \"gda\"    \"tiktok\" \"fb\"     \"tiktok\" \"gda\"    \"blog\"   \"tiktok\"\n[1721] \"gda\"    \"gs\"     \"fb\"     \"gda\"    \"gda\"    \"gs\"     \"fb\"     \"rtl\"   \n[1729] \"gda\"    \"yt\"     \"gs\"     \"yt\"     \"rtl\"    \"yt\"     \"gda\"    \"tiktok\"\n[1737] \"rtl\"    \"gs\"     \"yt\"     \"blog\"   \"gda\"    \"rtl\"    \"gda\"    \"tiktok\"\n[1745] \"fb\"     \"gda\"    \"fb\"     \"blog\"   \"gs\"     \"gda\"    \"gs\"     \"blog\"  \n[1753] \"rtl\"    \"gs\"     \"fb\"     \"gda\"    \"rtl\"    \"tiktok\" \"gs\"     \"gda\"   \n[1761] \"rtl\"    \"fb\"     \"blog\"   \"yt\"     \"yt\"     \"rtl\"    \"yt\"     \"rtl\"   \n[1769] \"blog\"   \"tiktok\" \"fb\"     \"yt\"     \"gs\"     \"gda\"    \"tiktok\" \"fb\"    \n[1777] \"yt\"     \"rtl\"    \"tiktok\" \"gs\"     \"rtl\"    \"gs\"     \"fb\"     \"gda\"   \n[1785] \"fb\"     \"gda\"    \"gs\"     \"yt\"     \"tiktok\" \"yt\"     \"gda\"    \"tiktok\"\n[1793] \"blog\"   \"blog\"   \"rtl\"    \"tiktok\" \"fb\"     \"gda\"    \"yt\"     \"blog\"  \n[1801] \"gs\"     \"gda\"    \"tiktok\" \"gs\"     \"rtl\"    \"fb\"     \"blog\"   \"gda\"   \n[1809] \"rtl\"    \"fb\"     \"gs\"     \"yt\"     \"rtl\"    \"tiktok\" \"gs\"     \"gda\"   \n[1817] \"gs\"     \"gda\"    \"rtl\"    \"rtl\"    \"gda\"    \"tiktok\" \"fb\"     \"rtl\"   \n[1825] \"gs\"     \"blog\"   \"tiktok\" \"rtl\"    \"blog\"   \"fb\"     \"tiktok\" \"yt\"    \n[1833] \"blog\"   \"fb\"     \"rtl\"    \"tiktok\" \"blog\"   \"gs\"     \"blog\"   \"fb\"    \n[1841] \"blog\"   \"gs\"     \"fb\"     \"rtl\"    \"blog\"   \"yt\"     \"rtl\"    \"blog\"  \n[1849] \"tiktok\" \"gs\"     \"tiktok\" \"blog\"   \"fb\"     \"rtl\"    \"gda\"    \"yt\"    \n[1857] \"rtl\"    \"fb\"     \"yt\"     \"gda\"    \"blog\"   \"gda\"    \"gs\"     \"gs\"    \n[1865] \"gda\"    \"yt\"     \"fb\"     \"gs\"     \"gda\"    \"fb\"     \"rtl\"    \"tiktok\"\n[1873] \"gda\"    \"yt\"     \"gda\"    \"blog\"   \"yt\"     \"gs\"     \"fb\"     \"tiktok\"\n[1881] \"gda\"    \"fb\"     \"rtl\"    \"gs\"     \"gda\"    \"blog\"   \"yt\"     \"fb\"    \n[1889] \"gs\"     \"rtl\"    \"blog\"   \"yt\"     \"blog\"   \"fb\"     \"rtl\"    \"gs\"    \n[1897] \"tiktok\" \"blog\"   \"yt\"     \"tiktok\" \"yt\"     \"gda\"    \"tiktok\" \"blog\"  \n[1905] \"yt\"     \"tiktok\" \"fb\"     \"gs\"     \"gda\"    \"rtl\"    \"blog\"   \"fb\"    \n[1913] \"fb\"     \"gda\"    \"tiktok\" \"yt\"     \"rtl\"    \"gs\"     \"blog\"   \"gda\"   \n[1921] \"fb\"     \"gda\"    \"blog\"   \"rtl\"    \"fb\"     \"yt\"     \"blog\"   \"fb\"    \n[1929] \"gs\"     \"fb\"     \"yt\"     \"tiktok\" \"gs\"     \"gs\"     \"tiktok\" \"gda\"   \n[1937] \"fb\"     \"yt\"     \"gda\"    \"tiktok\" \"gs\"     \"rtl\"    \"fb\"     \"yt\"    \n[1945] \"tiktok\" \"blog\"   \"fb\"     \"blog\"   \"gda\"    \"gs\"     \"gda\"    \"rtl\"   \n[1953] \"gs\"     \"fb\"     \"tiktok\" \"blog\"   \"gda\"    \"yt\"     \"fb\"     \"gda\"   \n[1961] \"yt\"     \"gs\"     \"fb\"     \"yt\"     \"blog\"   \"rtl\"    \"rtl\"    \"fb\"    \n[1969] \"gda\"    \"tiktok\" \"rtl\"    \"blog\"   \"blog\"   \"fb\"     \"blog\"   \"rtl\"   \n[1977] \"gda\"    \"tiktok\" \"gs\"     \"tiktok\" \"blog\"   \"tiktok\" \"fb\"     \"gs\"    \n[1985] \"yt\"     \"rtl\"    \"fb\"     \"gs\"     \"tiktok\" \"tiktok\" \"fb\"     \"rtl\"   \n[1993] \"yt\"     \"gda\"    \"gda\"    \"tiktok\" \"tiktok\" \"fb\"     \"blog\"   \"gs\"    \n[2001] \"gda\"    \"gda\"    \"blog\"   \"yt\"     \"rtl\"    \"blog\"   \"gda\"    \"rtl\"   \n[2009] \"yt\"     \"gda\"    \"fb\"     \"blog\"   \"rtl\"    \"blog\"   \"fb\"     \"blog\"  \n[2017] \"rtl\"    \"yt\"     \"gs\"     \"rtl\"    \"yt\"     \"rtl\"    \"tiktok\" \"gs\"    \n[2025] \"rtl\"    \"yt\"     \"blog\"   \"tiktok\" \"yt\"     \"gs\"     \"tiktok\" \"rtl\"   \n[2033] \"fb\"     \"gda\"    \"yt\"     \"gs\"     \"tiktok\" \"blog\"   \"blog\"   \"gda\"   \n[2041] \"yt\"     \"rtl\"    \"gda\"    \"rtl\"    \"yt\"     \"fb\"     \"gda\"    \"tiktok\"\n[2049] \"rtl\"    \"yt\"     \"rtl\"    \"gs\"     \"fb\"     \"yt\"     \"fb\"     \"blog\"  \n[2057] \"rtl\"    \"fb\"     \"tiktok\" \"blog\"   \"gda\"    \"gs\"     \"fb\"     \"tiktok\"\n[2065] \"blog\"   \"rtl\"    \"tiktok\" \"blog\"   \"gda\"    \"blog\"   \"fb\"     \"blog\"  \n[2073] \"rtl\"    \"gs\"     \"tiktok\" \"gda\"    \"gda\"    \"yt\"     \"gs\"     \"fb\"    \n[2081] \"rtl\"    \"yt\"     \"tiktok\" \"fb\"     \"blog\"   \"yt\"     \"gs\"     \"rtl\"   \n[2089] \"blog\"   \"gda\"    \"tiktok\" \"rtl\"    \"gs\"     \"blog\"   \"yt\"     \"fb\"    \n[2097] \"tiktok\" \"blog\"   \"gda\"    \"gs\"     \"gda\"    \"fb\"     \"tiktok\" \"blog\"  \n[2105] \"gs\"     \"blog\"   \"rtl\"    \"tiktok\" \"yt\"     \"fb\"     \"rtl\"    \"yt\"    \n[2113] \"gs\"     \"gda\"    \"blog\"   \"rtl\"    \"rtl\"    \"fb\"     \"fb\"     \"yt\"    \n[2121] \"rtl\"    \"gda\"    \"blog\"   \"tiktok\" \"gs\"     \"fb\"     \"blog\"   \"gs\"    \n[2129] \"fb\"     \"gs\"     \"fb\"     \"rtl\"    \"blog\"   \"gs\"     \"yt\"     \"gs\"    \n[2137] \"blog\"   \"tiktok\" \"rtl\"    \"tiktok\" \"gs\"     \"blog\"   \"tiktok\" \"yt\"    \n[2145] \"yt\"     \"fb\"     \"rtl\"    \"tiktok\" \"rtl\"    \"gda\"    \"blog\"   \"yt\"    \n[2153] \"fb\"     \"gda\"    \"rtl\"    \"tiktok\" \"blog\"   \"gda\"    \"gs\"     \"yt\"    \n[2161] \"blog\"   \"yt\"     \"tiktok\" \"yt\"     \"gs\"     \"tiktok\" \"rtl\"    \"gda\"   \n[2169] \"yt\"     \"gs\"     \"yt\"     \"rtl\"    \"blog\"   \"tiktok\" \"fb\"     \"blog\"  \n[2177] \"gs\"     \"yt\"     \"tiktok\" \"gs\"     \"tiktok\" \"blog\"   \"tiktok\" \"blog\"  \n[2185] \"rtl\"    \"yt\"     \"gda\"    \"tiktok\" \"fb\"     \"gs\"     \"gda\"    \"blog\"  \n[2193] \"gda\"    \"tiktok\" \"yt\"     \"gs\"     \"yt\"     \"gda\"    \"yt\"     \"blog\"  \n[2201] \"tiktok\" \"fb\"     \"yt\"     \"blog\"   \"rtl\"    \"tiktok\" \"gs\"     \"fb\"    \n[2209] \"yt\"     \"fb\"     \"gda\"    \"gs\"     \"yt\"     \"gda\"    \"yt\"     \"blog\"  \n[2217] \"fb\"     \"gs\"     \"fb\"     \"gs\"     \"yt\"     \"rtl\"    \"blog\"   \"tiktok\"\n[2225] \"rtl\"    \"gs\"     \"yt\"     \"rtl\"    \"gda\"    \"gs\"     \"fb\"     \"blog\"  \n[2233] \"rtl\"    \"tiktok\" \"tiktok\" \"fb\"     \"blog\"   \"rtl\"    \"rtl\"    \"yt\"    \n[2241] \"fb\"     \"blog\"   \"gs\"     \"gda\"    \"gs\"     \"gda\"    \"tiktok\" \"yt\"    \n[2249] \"rtl\"    \"yt\"     \"blog\"   \"fb\"     \"rtl\"    \"tiktok\" \"gda\"    \"blog\"  \n[2257] \"yt\"     \"fb\"     \"gs\"     \"gda\"    \"fb\"     \"yt\"     \"blog\"   \"blog\"  \n[2265] \"tiktok\" \"fb\"     \"gda\"    \"fb\"     \"gs\"     \"tiktok\" \"tiktok\" \"fb\"    \n[2273] \"blog\"   \"yt\"     \"gda\"    \"rtl\"    \"tiktok\" \"fb\"     \"yt\"     \"blog\"  \n[2281] \"rtl\"    \"gs\"     \"rtl\"    \"blog\"   \"yt\"     \"fb\"     \"tiktok\" \"gs\"    \n[2289] \"gda\"    \"yt\"     \"fb\"     \"tiktok\" \"rtl\"    \"tiktok\" \"fb\"     \"blog\"  \n[2297] \"gs\"     \"rtl\"    \"blog\"   \"gs\"     \"gda\"    \"fb\"     \"gda\"    \"gs\"    \n[2305] \"rtl\"    \"tiktok\" \"fb\"     \"yt\"     \"gs\"     \"yt\"     \"gda\"    \"fb\"    \n[2313] \"rtl\"    \"tiktok\" \"gs\"     \"yt\"     \"gda\"    \"gda\"    \"gs\"     \"yt\"    \n[2321] \"fb\"     \"blog\"   \"tiktok\" \"gs\"     \"tiktok\" \"blog\"   \"fb\"     \"fb\"    \n[2329] \"rtl\"    \"gda\"    \"blog\"   \"yt\"     \"gda\"    \"gs\"     \"fb\"     \"rtl\"   \n[2337] \"yt\"     \"rtl\"    \"gda\"    \"yt\"     \"blog\"   \"tiktok\" \"tiktok\" \"fb\"    \n[2345] \"gs\"     \"gda\"    \"tiktok\" \"yt\"     \"blog\"   \"gda\"    \"yt\"     \"tiktok\"\n[2353] \"rtl\"    \"blog\"   \"gda\"    \"gs\"     \"yt\"     \"blog\"   \"fb\"     \"gda\"   \n[2361] \"yt\"     \"blog\"   \"gs\"     \"fb\"     \"rtl\"    \"gda\"    \"tiktok\" \"tiktok\"\n[2369] \"gda\"    \"fb\"     \"gs\"     \"rtl\"    \"yt\"     \"fb\"     \"tiktok\" \"rtl\"   \n[2377] \"blog\"   \"fb\"     \"yt\"     \"rtl\"    \"fb\"     \"tiktok\" \"yt\"     \"gda\"   \n[2385] \"yt\"     \"fb\"     \"yt\"     \"yt\"     \"gda\"    \"tiktok\" \"gda\"    \"gda\"   \n[2393] \"rtl\"    \"gs\"     \"blog\"   \"tiktok\" \"fb\"     \"gs\"     \"yt\"     \"tiktok\"\n[2401] \"fb\"     \"gda\"    \"rtl\"    \"gs\"     \"rtl\"    \"blog\"   \"fb\"     \"gs\"    \n[2409] \"yt\"     \"yt\"     \"gs\"     \"tiktok\" \"tiktok\" \"blog\"   \"fb\"     \"yt\"    \n[2417] \"rtl\"    \"gda\"    \"fb\"     \"blog\"   \"yt\"     \"yt\"     \"tiktok\" \"gda\"   \n[2425] \"yt\"     \"tiktok\" \"gs\"     \"rtl\"    \"gs\"     \"yt\"     \"tiktok\" \"blog\"  \n[2433] \"rtl\"    \"gda\"    \"yt\"     \"gs\"     \"fb\"     \"gda\"    \"gda\"    \"fb\"    \n[2441] \"rtl\"    \"yt\"     \"tiktok\" \"gs\"     \"fb\"     \"gda\"    \"rtl\"    \"tiktok\"\n[2449] \"rtl\"    \"blog\"   \"tiktok\" \"gs\"     \"yt\"     \"gda\"    \"yt\"     \"tiktok\"\n[2457] \"yt\"     \"gs\"     \"tiktok\" \"gs\"     \"yt\"     \"rtl\"    \"rtl\"    \"gs\"    \n[2465] \"blog\"   \"fb\"     \"gda\"    \"tiktok\" \"fb\"     \"yt\"     \"rtl\"    \"fb\"    \n[2473] \"gda\"    \"rtl\"    \"gda\"    \"fb\"     \"tiktok\" \"gda\"    \"gs\"     \"tiktok\"\n[2481] \"gda\"    \"fb\"     \"blog\"   \"gs\"     \"blog\"   \"fb\"     \"rtl\"    \"gda\"   \n[2489] \"rtl\"    \"gs\"     \"yt\"     \"tiktok\" \"rtl\"    \"blog\"   \"tiktok\" \"fb\"    \n[2497] \"gda\"    \"blog\"   \"gda\"    \"gs\"     \"yt\"     \"blog\"   \"gda\"    \"rtl\"   \n[2505] \"gs\"     \"blog\"   \"tiktok\" \"rtl\"    \"gda\"    \"gs\"     \"yt\"     \"fb\"    \n[2513] \"tiktok\" \"rtl\"    \"gda\"    \"rtl\"    \"gs\"     \"yt\"     \"fb\"     \"gda\"   \n[2521] \"rtl\"    \"gda\"    \"blog\"   \"gs\"     \"fb\"     \"gs\"     \"tiktok\" \"yt\"    \n[2529] \"tiktok\" \"rtl\"    \"blog\"   \"fb\"     \"gs\"     \"fb\"     \"tiktok\" \"yt\"    \n[2537] \"rtl\"    \"tiktok\" \"fb\"     \"rtl\"    \"yt\"     \"gs\"     \"tiktok\" \"gda\"   \n[2545] \"blog\"   \"yt\"     \"rtl\"    \"gs\"     \"gda\"    \"blog\"   \"rtl\"    \"yt\"    \n[2553] \"tiktok\" \"fb\"     \"fb\"     \"blog\"   \"rtl\"    \"gda\"    \"yt\"     \"gda\"   \n[2561] \"tiktok\" \"tiktok\" \"yt\"     \"gda\"    \"gs\"     \"blog\"   \"blog\"   \"fb\"    \n[2569] \"yt\"     \"gda\"    \"tiktok\" \"rtl\"    \"gda\"    \"gs\"     \"fb\"     \"yt\"    \n[2577] \"rtl\"    \"gda\"    \"yt\"     \"tiktok\" \"fb\"     \"tiktok\" \"rtl\"    \"blog\"  \n[2585] \"yt\"     \"rtl\"    \"tiktok\" \"rtl\"    \"fb\"     \"gda\"    \"blog\"   \"gda\"   \n[2593] \"tiktok\" \"fb\"     \"gs\"     \"blog\"   \"tiktok\" \"tiktok\" \"gda\"    \"blog\"  \n[2601] \"tiktok\" \"yt\"     \"gda\"    \"tiktok\" \"rtl\"    \"tiktok\" \"fb\"     \"gs\"    \n[2609] \"gda\"    \"yt\"     \"gs\"     \"blog\"   \"yt\"     \"fb\"     \"rtl\"    \"tiktok\"\n[2617] \"yt\"     \"fb\"     \"blog\"   \"yt\"     \"tiktok\" \"gs\"     \"yt\"     \"gs\"    \n[2625] \"gda\"    \"tiktok\" \"yt\"     \"rtl\"    \"gs\"     \"fb\"     \"tiktok\" \"yt\"    \n[2633] \"rtl\"    \"tiktok\" \"gda\"    \"blog\"   \"yt\"     \"gs\"     \"rtl\"    \"tiktok\"\n[2641] \"gda\"    \"rtl\"    \"gs\"     \"tiktok\" \"rtl\"    \"blog\"   \"fb\"     \"gs\"    \n[2649] \"fb\"     \"gda\"    \"rtl\"    \"yt\"     \"fb\"     \"blog\"   \"rtl\"    \"tiktok\"\n[2657] \"gs\"     \"gda\"    \"yt\"     \"blog\"   \"tiktok\" \"blog\"   \"gda\"    \"fb\"    \n[2665] \"yt\"     \"tiktok\" \"fb\"     \"rtl\"    \"blog\"   \"tiktok\" \"fb\"     \"gda\"   \n[2673] \"gs\"     \"tiktok\" \"gda\"    \"gs\"     \"gs\"     \"blog\"   \"gda\"    \"fb\"    \n[2681] \"gs\"     \"tiktok\" \"yt\"     \"blog\"   \"rtl\"    \"yt\"     \"blog\"   \"gs\"    \n[2689] \"gda\"    \"tiktok\" \"gda\"    \"gs\"     \"fb\"     \"rtl\"    \"yt\"     \"gda\"   \n[2697] \"rtl\"    \"gs\"     \"blog\"   \"fb\"     \"rtl\"    \"yt\"     \"rtl\"    \"gs\"    \n[2705] \"tiktok\" \"gda\"    \"yt\"     \"blog\"   \"tiktok\" \"gs\"     \"rtl\"    \"blog\"  \n[2713] \"tiktok\" \"gs\"     \"gda\"    \"yt\"     \"yt\"     \"yt\"     \"gda\"    \"fb\"    \n[2721] \"tiktok\" \"rtl\"    \"tiktok\" \"gda\"    \"yt\"     \"gs\"     \"rtl\"    \"gda\"   \n[2729] \"gda\"    \"rtl\"    \"gda\"    \"tiktok\" \"yt\"     \"tiktok\" \"gs\"     \"fb\"    \n[2737] \"blog\"   \"gda\"    \"blog\"   \"yt\"     \"tiktok\" \"fb\"     \"gda\"    \"rtl\"   \n[2745] \"gs\"     \"blog\"   \"rtl\"    \"fb\"     \"gda\"    \"fb\"     \"rtl\"    \"gs\"    \n[2753] \"blog\"   \"yt\"     \"blog\"   \"fb\"     \"tiktok\" \"gda\"    \"gs\"     \"gda\"   \n[2761] \"blog\"   \"tiktok\" \"fb\"     \"yt\"     \"gs\"     \"blog\"   \"fb\"     \"tiktok\"\n[2769] \"gs\"     \"blog\"   \"gda\"    \"yt\"     \"gda\"    \"fb\"     \"blog\"   \"rtl\"   \n[2777] \"yt\"     \"gda\"    \"tiktok\" \"gda\"    \"yt\"     \"blog\"   \"fb\"     \"rtl\"   \n[2785] \"blog\"   \"gs\"     \"yt\"     \"fb\"     \"rtl\"    \"gda\"    \"fb\"     \"tiktok\"\n[2793] \"fb\"     \"blog\"   \"gda\"    \"yt\"     \"tiktok\" \"fb\"     \"rtl\"    \"fb\"    \n[2801] \"gs\"     \"rtl\"    \"fb\"     \"tiktok\" \"yt\"     \"fb\"     \"gs\"     \"gda\"   \n[2809] \"gs\"     \"fb\"     \"rtl\"    \"gda\"    \"tiktok\" \"tiktok\" \"yt\"     \"rtl\"   \n[2817] \"rtl\"    \"yt\"     \"gda\"    \"gs\"     \"tiktok\" \"fb\"     \"yt\"     \"gda\"   \n[2825] \"rtl\"    \"gs\"     \"tiktok\" \"rtl\"    \"rtl\"    \"yt\"     \"tiktok\" \"rtl\"   \n[2833] \"rtl\"    \"tiktok\" \"fb\"     \"yt\"     \"blog\"   \"tiktok\" \"rtl\"    \"yt\"    \n[2841] \"tiktok\" \"fb\"     \"gda\"    \"blog\"   \"yt\"     \"blog\"   \"tiktok\" \"gs\"    \n[2849] \"fb\"     \"gda\"    \"yt\"     \"gda\"    \"yt\"     \"tiktok\" \"gs\"     \"blog\"  \n[2857] \"tiktok\" \"gs\"     \"gda\"    \"rtl\"    \"blog\"   \"yt\"     \"gs\"     \"fb\"    \n[2865] \"gda\"    \"gs\"     \"tiktok\" \"rtl\"    \"fb\"     \"gda\"    \"rtl\"    \"gs\"    \n[2873] \"gda\"    \"blog\"   \"yt\"     \"fb\"     \"gda\"    \"blog\"   \"yt\"     \"blog\"  \n[2881] \"tiktok\" \"gda\"    \"rtl\"    \"yt\"     \"tiktok\" \"rtl\"    \"rtl\"    \"tiktok\"\n[2889] \"gda\"    \"blog\"   \"gda\"    \"tiktok\" \"rtl\"    \"yt\"     \"blog\"   \"gs\"    \n[2897] \"gs\"     \"yt\"     \"fb\"     \"tiktok\" \"blog\"   \"rtl\"    \"fb\"     \"rtl\"   \n[2905] \"tiktok\" \"yt\"     \"fb\"     \"yt\"     \"gda\"    \"blog\"   \"gs\"     \"gda\"   \n[2913] \"tiktok\" \"rtl\"    \"rtl\"    \"fb\"     \"tiktok\" \"blog\"   \"rtl\"    \"yt\"    \n[2921] \"gs\"     \"gs\"     \"yt\"     \"blog\"   \"tiktok\" \"rtl\"    \"yt\"     \"gda\"   \n[2929] \"rtl\"    \"gs\"     \"blog\"   \"blog\"   \"rtl\"    \"gda\"    \"tiktok\" \"rtl\"   \n[2937] \"fb\"     \"yt\"     \"gda\"    \"fb\"     \"blog\"   \"gs\"     \"rtl\"    \"tiktok\"\n[2945] \"blog\"   \"gs\"     \"gs\"     \"gda\"    \"gs\"     \"tiktok\" \"gs\"     \"blog\"  \n[2953] \"fb\"     \"rtl\"    \"gda\"    \"gs\"     \"fb\"     \"gs\"     \"yt\"     \"rtl\"   \n[2961] \"tiktok\" \"fb\"     \"tiktok\" \"yt\"     \"fb\"     \"gs\"     \"rtl\"    \"tiktok\"\n[2969] \"tiktok\" \"yt\"     \"rtl\"    \"fb\"     \"blog\"   \"fb\"     \"tiktok\" \"gda\"   \n[2977] \"yt\"     \"blog\"   \"tiktok\" \"fb\"     \"rtl\"    \"gda\"    \"gs\"     \"blog\"  \n[2985] \"yt\"     \"gs\"     \"yt\"     \"tiktok\" \"gda\"    \"blog\"   \"gs\"     \"gda\"   \n[2993] \"gda\"    \"yt\"     \"fb\"     \"gs\"     \"gs\"     \"rtl\"    \"gda\"    \"yt\"    \n[3001] \"gda\"    \"fb\"     \"gda\"    \"tiktok\" \"gda\"    \"rtl\"    \"fb\"     \"tiktok\"\n[3009] \"fb\"     \"yt\"     \"gda\"    \"rtl\"    \"tiktok\""
  },
  {
    "objectID": "speeding-up-r/slides.html#section-49",
    "href": "speeding-up-r/slides.html#section-49",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "touches &lt;- strsplit(path_data$path, \"&gt;\", fixed = TRUE)\nlt &lt;- lengths(touches)\ngroups &lt;- rep.int(seq_along(touches), lt)\noutcome &lt;- rep.int(path_data$leads, lt)\nvalue &lt;- rep.int(path_data$value, lt) \ntouches &lt;- unlist(touches)\nre &lt;- lu[touches]\n\n\n\ntiktok   blog     gs     fb    rtl     yt   blog     gs     fb    gda     fb \n  0.10   0.09   0.60   0.20   0.05   0.10   0.09   0.60   0.20   0.30   0.20 \n    gs     yt    gda     yt tiktok   blog    rtl    gda     yt    rtl tiktok \n  0.60   0.10   0.30   0.10   0.10   0.09   0.05   0.30   0.10   0.05   0.10 \ntiktok   blog    gda tiktok    rtl     yt     gs tiktok    rtl   blog    gda \n  0.10   0.09   0.30   0.10   0.05   0.10   0.60   0.10   0.05   0.09   0.30 \n    gs    gda     fb     gs    rtl   blog    rtl     yt tiktok    gda     fb \n  0.60   0.30   0.20   0.60   0.05   0.09   0.05   0.10   0.10   0.30   0.20 \n   rtl    gda     yt   blog     yt   blog     gs     fb    gda     yt   blog \n  0.05   0.30   0.10   0.09   0.10   0.09   0.60   0.20   0.30   0.10   0.09 \ntiktok     yt     gs    rtl     fb    gda     yt   blog tiktok     fb    rtl \n  0.10   0.10   0.60   0.05   0.20   0.30   0.10   0.09   0.10   0.20   0.05 \n   rtl tiktok    gda     yt    rtl     fb     gs     gs     fb     gs    gda \n  0.05   0.10   0.30   0.10   0.05   0.20   0.60   0.60   0.20   0.60   0.30 \n  blog tiktok    gda     fb    rtl     gs tiktok     yt   blog    gda     gs \n  0.09   0.10   0.30   0.20   0.05   0.60   0.10   0.10   0.09   0.30   0.60 \n  blog    rtl tiktok    gda     yt   blog    rtl     fb    gda     gs    rtl \n  0.09   0.05   0.10   0.30   0.10   0.09   0.05   0.20   0.30   0.60   0.05 \n    gs     fb     yt     gs   blog     yt    gda tiktok     fb    gda     yt \n  0.60   0.20   0.10   0.60   0.09   0.10   0.30   0.10   0.20   0.30   0.10 \n   rtl tiktok   blog    rtl     fb     yt tiktok     gs   blog    gda   blog \n  0.05   0.10   0.09   0.05   0.20   0.10   0.10   0.60   0.09   0.30   0.09 \n   rtl    gda     gs     fb     yt   blog   blog     yt    gda tiktok     fb \n  0.05   0.30   0.60   0.20   0.10   0.09   0.09   0.10   0.30   0.10   0.20 \n    fb   blog    gda     fb     yt     gs    gda     fb     gs tiktok   blog \n  0.20   0.09   0.30   0.20   0.10   0.60   0.30   0.20   0.60   0.10   0.09 \n   rtl    gda tiktok     yt     fb    gda     gs     gs    gda     yt   blog \n  0.05   0.30   0.10   0.10   0.20   0.30   0.60   0.60   0.30   0.10   0.09 \n    yt tiktok     yt   blog     fb     gs     gs   blog     yt     fb    gda \n  0.10   0.10   0.10   0.09   0.20   0.60   0.60   0.09   0.10   0.20   0.30 \n    fb     gs    gda tiktok     yt    rtl    gda tiktok     fb     gs     yt \n  0.20   0.60   0.30   0.10   0.10   0.05   0.30   0.10   0.20   0.60   0.10 \ntiktok    gda    rtl     gs    gda   blog    rtl     yt     gs    gda tiktok \n  0.10   0.30   0.05   0.60   0.30   0.09   0.05   0.10   0.60   0.30   0.10 \n    yt     gs tiktok     gs    rtl     fb    gda    gda     yt     fb    gda \n  0.10   0.60   0.10   0.60   0.05   0.20   0.30   0.30   0.10   0.20   0.30 \ntiktok   blog    rtl    gda tiktok     yt     fb    gda     gs   blog    gda \n  0.10   0.09   0.05   0.30   0.10   0.10   0.20   0.30   0.60   0.09   0.30 \n    fb     gs    rtl tiktok     yt     fb   blog    gda     gs     yt   blog \n  0.20   0.60   0.05   0.10   0.10   0.20   0.09   0.30   0.60   0.10   0.09 \n    gs tiktok    rtl tiktok    gda   blog tiktok    gda     gs   blog     yt \n  0.60   0.10   0.05   0.10   0.30   0.09   0.10   0.30   0.60   0.09   0.10 \ntiktok    rtl     gs   blog    rtl   blog tiktok    gda     yt    rtl    gda \n  0.10   0.05   0.60   0.09   0.05   0.09   0.10   0.30   0.10   0.05   0.30 \n  blog     gs    rtl     yt tiktok     fb tiktok tiktok    gda     yt     gs \n  0.09   0.60   0.05   0.10   0.10   0.20   0.10   0.10   0.30   0.10   0.60 \n    gs   blog tiktok     yt tiktok     gs     fb    gda    rtl    rtl   blog \n  0.60   0.09   0.10   0.10   0.10   0.60   0.20   0.30   0.05   0.05   0.09 \n    yt     gs tiktok    gda     gs   blog     fb tiktok     fb     yt   blog \n  0.10   0.60   0.10   0.30   0.60   0.09   0.20   0.10   0.20   0.10   0.09 \n    fb    gda    rtl     yt tiktok tiktok     gs    rtl     yt tiktok   blog \n  0.20   0.30   0.05   0.10   0.10   0.10   0.60   0.05   0.10   0.10   0.09 \n    gs     fb    rtl     gs    gda     fb     yt     gs   blog     yt     gs \n  0.60   0.20   0.05   0.60   0.30   0.20   0.10   0.60   0.09   0.10   0.60 \ntiktok     yt     fb     gs    gda   blog tiktok     yt     fb    rtl   blog \n  0.10   0.10   0.20   0.60   0.30   0.09   0.10   0.10   0.20   0.05   0.09 \ntiktok     yt    gda tiktok     fb     gs     yt tiktok     gs    gda     yt \n  0.10   0.10   0.30   0.10   0.20   0.60   0.10   0.10   0.60   0.30   0.10 \n    fb    gda     gs    rtl tiktok     yt    rtl     gs   blog     gs    rtl \n  0.20   0.30   0.60   0.05   0.10   0.10   0.05   0.60   0.09   0.60   0.05 \n   gda tiktok    rtl     yt tiktok    gda    gda     fb     gs tiktok     yt \n  0.30   0.10   0.05   0.10   0.10   0.30   0.30   0.20   0.60   0.10   0.10 \n    fb    gda    gda     yt     gs    rtl    rtl     fb   blog     fb tiktok \n  0.20   0.30   0.30   0.10   0.60   0.05   0.05   0.20   0.09   0.20   0.10 \n    gs   blog     fb    rtl tiktok     gs    gda    rtl   blog   blog tiktok \n  0.60   0.09   0.20   0.05   0.10   0.60   0.30   0.05   0.09   0.09   0.10 \n    yt     yt    gda     yt    rtl tiktok   blog     gs    rtl    gda     yt \n  0.10   0.10   0.30   0.10   0.05   0.10   0.09   0.60   0.05   0.30   0.10 \n    gs    gda   blog     yt    rtl    gda     gs tiktok    gda     gs   blog \n  0.60   0.30   0.09   0.10   0.05   0.30   0.60   0.10   0.30   0.60   0.09 \n    gs    rtl   blog   blog     fb    gda     yt     gs     fb    gda     fb \n  0.60   0.05   0.09   0.09   0.20   0.30   0.10   0.60   0.20   0.30   0.20 \n    fb   blog tiktok    rtl    gda   blog tiktok     fb     fb     yt   blog \n  0.20   0.09   0.10   0.05   0.30   0.09   0.10   0.20   0.20   0.10   0.09 \ntiktok    rtl     fb     fb   blog tiktok     gs     fb     yt    gda tiktok \n  0.10   0.05   0.20   0.20   0.09   0.10   0.60   0.20   0.10   0.30   0.10 \n   rtl     fb     fb   blog    rtl tiktok     gs    rtl    gda     fb    gda \n  0.05   0.20   0.20   0.09   0.05   0.10   0.60   0.05   0.30   0.20   0.30 \n    yt     fb tiktok   blog    rtl   blog   blog     yt    gda tiktok    gda \n  0.10   0.20   0.10   0.09   0.05   0.09   0.09   0.10   0.30   0.10   0.30 \n    fb    rtl    rtl    gda     gs   blog    gda     fb    rtl   blog    gda \n  0.20   0.05   0.05   0.30   0.60   0.09   0.30   0.20   0.05   0.09   0.30 \ntiktok     gs     fb tiktok     gs     fb tiktok     fb     gs   blog    rtl \n  0.10   0.60   0.20   0.10   0.60   0.20   0.10   0.20   0.60   0.09   0.05 \n   rtl    gda     yt     gs   blog    rtl   blog tiktok     gs    gda    rtl \n  0.05   0.30   0.10   0.60   0.09   0.05   0.09   0.10   0.60   0.30   0.05 \n    yt   blog tiktok     gs    rtl     yt     gs     yt    gda   blog     fb \n  0.10   0.09   0.10   0.60   0.05   0.10   0.60   0.10   0.30   0.09   0.20 \n    yt    rtl   blog     gs tiktok     fb     yt     gs    rtl     gs    rtl \n  0.10   0.05   0.09   0.60   0.10   0.20   0.10   0.60   0.05   0.60   0.05 \n  blog     fb    rtl   blog    gda     gs tiktok     yt tiktok     gs    gda \n  0.09   0.20   0.05   0.09   0.30   0.60   0.10   0.10   0.10   0.60   0.30 \n  blog    gda     yt tiktok     yt   blog     yt    rtl   blog     gs     yt \n  0.09   0.30   0.10   0.10   0.10   0.09   0.10   0.05   0.09   0.60   0.10 \n    fb     gs   blog    gda     gs     fb     yt    rtl    gda tiktok    gda \n  0.20   0.60   0.09   0.30   0.60   0.20   0.10   0.05   0.30   0.10   0.30 \n    gs   blog     fb     yt   blog     gs    gda   blog tiktok     gs     fb \n  0.60   0.09   0.20   0.10   0.09   0.60   0.30   0.09   0.10   0.60   0.20 \n   rtl     gs   blog   blog     yt     fb tiktok     fb     gs tiktok     yt \n  0.05   0.60   0.09   0.09   0.10   0.20   0.10   0.20   0.60   0.10   0.10 \ntiktok   blog    rtl     fb    gda   blog    rtl     gs   blog     yt    gda \n  0.10   0.09   0.05   0.20   0.30   0.09   0.05   0.60   0.09   0.10   0.30 \ntiktok     gs   blog    rtl    gda     gs   blog    gda tiktok    gda     fb \n  0.10   0.60   0.09   0.05   0.30   0.60   0.09   0.30   0.10   0.30   0.20 \n    gs     yt    rtl     gs   blog    rtl    rtl     fb tiktok     yt   blog \n  0.60   0.10   0.05   0.60   0.09   0.05   0.05   0.20   0.10   0.10   0.09 \n    yt     fb     gs    gda tiktok     fb     gs    rtl     gs    gda     fb \n  0.10   0.20   0.60   0.30   0.10   0.20   0.60   0.05   0.60   0.30   0.20 \n  blog     gs    rtl    gda     fb    rtl     yt    gda tiktok    rtl    rtl \n  0.09   0.60   0.05   0.30   0.20   0.05   0.10   0.30   0.10   0.05   0.05 \n    yt tiktok tiktok     gs   blog   blog     gs     fb     fb     yt tiktok \n  0.10   0.10   0.10   0.60   0.09   0.09   0.60   0.20   0.20   0.10   0.10 \n    gs     gs     yt     fb   blog    gda     yt   blog     fb    rtl     gs \n  0.60   0.60   0.10   0.20   0.09   0.30   0.10   0.09   0.20   0.05   0.60 \n    fb tiktok    rtl   blog     fb     yt tiktok    rtl     yt   blog     fb \n  0.20   0.10   0.05   0.09   0.20   0.10   0.10   0.05   0.10   0.09   0.20 \n    gs     fb   blog tiktok     yt     gs     fb tiktok     gs    gda    rtl \n  0.60   0.20   0.09   0.10   0.10   0.60   0.20   0.10   0.60   0.30   0.05 \n   rtl tiktok   blog    gda     fb    rtl     fb   blog     fb     yt     fb \n  0.05   0.10   0.09   0.30   0.20   0.05   0.20   0.09   0.20   0.10   0.20 \n  blog     fb     gs     yt   blog    rtl    rtl    gda     gs tiktok     yt \n  0.09   0.20   0.60   0.10   0.09   0.05   0.05   0.30   0.60   0.10   0.10 \n    fb tiktok     yt    gda   blog     fb    gda tiktok     gs   blog    gda \n  0.20   0.10   0.10   0.30   0.09   0.20   0.30   0.10   0.60   0.09   0.30 \ntiktok     fb     gs   blog   blog    gda     gs tiktok    gda     yt     gs \n  0.10   0.20   0.60   0.09   0.09   0.30   0.60   0.10   0.30   0.10   0.60 \n   gda   blog     fb     fb     yt    rtl     yt    gda tiktok    rtl     gs \n  0.30   0.09   0.20   0.20   0.10   0.05   0.10   0.30   0.10   0.05   0.60 \n  blog     gs    gda    rtl    gda    rtl     gs     yt   blog     fb    gda \n  0.09   0.60   0.30   0.05   0.30   0.05   0.60   0.10   0.09   0.20   0.30 \n   rtl     fb     gs     yt     fb     gs     fb tiktok    gda    rtl     gs \n  0.05   0.20   0.60   0.10   0.20   0.60   0.20   0.10   0.30   0.05   0.60 \n   gda   blog     fb     fb     gs    rtl   blog    gda    rtl     fb tiktok \n  0.30   0.09   0.20   0.20   0.60   0.05   0.09   0.30   0.05   0.20   0.10 \n    gs     yt    rtl     fb     gs     yt    rtl   blog     yt tiktok     fb \n  0.60   0.10   0.05   0.20   0.60   0.10   0.05   0.09   0.10   0.10   0.20 \n    gs     fb     yt     fb     yt tiktok     gs   blog     yt     fb    rtl \n  0.60   0.20   0.10   0.20   0.10   0.10   0.60   0.09   0.10   0.20   0.05 \n  blog    rtl   blog    gda     fb     yt    gda     gs    rtl     fb     gs \n  0.09   0.05   0.09   0.30   0.20   0.10   0.30   0.60   0.05   0.20   0.60 \n    fb   blog    gda    rtl    rtl    rtl    gda     gs tiktok tiktok     yt \n  0.20   0.09   0.30   0.05   0.05   0.05   0.30   0.60   0.10   0.10   0.10 \n    fb    rtl    gda   blog     gs    rtl     fb   blog     gs     fb tiktok \n  0.20   0.05   0.30   0.09   0.60   0.05   0.20   0.09   0.60   0.20   0.10 \n  blog    gda     fb   blog    gda     gs     gs    gda tiktok     yt   blog \n  0.09   0.30   0.20   0.09   0.30   0.60   0.60   0.30   0.10   0.10   0.09 \n   gda    rtl   blog     yt    rtl   blog    gda     yt tiktok tiktok     fb \n  0.30   0.05   0.09   0.10   0.05   0.09   0.30   0.10   0.10   0.10   0.20 \n   rtl   blog    rtl    gda   blog     gs     gs   blog     fb    rtl   blog \n  0.05   0.09   0.05   0.30   0.09   0.60   0.60   0.09   0.20   0.05   0.09 \ntiktok     yt     gs    gda     yt    rtl     fb tiktok    gda     fb    rtl \n  0.10   0.10   0.60   0.30   0.10   0.05   0.20   0.10   0.30   0.20   0.05 \n  blog     fb     fb   blog     fb   blog     yt     gs    rtl     fb   blog \n  0.09   0.20   0.20   0.09   0.20   0.09   0.10   0.60   0.05   0.20   0.09 \n    gs     fb    gda     yt    gda    gda     fb    rtl     gs   blog tiktok \n  0.60   0.20   0.30   0.10   0.30   0.30   0.20   0.05   0.60   0.09   0.10 \n    gs tiktok     yt   blog     gs     gs tiktok   blog     gs     fb    gda \n  0.60   0.10   0.10   0.09   0.60   0.60   0.10   0.09   0.60   0.20   0.30 \n  blog     yt    gda   blog     yt    rtl tiktok   blog    gda     yt    rtl \n  0.09   0.10   0.30   0.09   0.10   0.05   0.10   0.09   0.30   0.10   0.05 \ntiktok     fb   blog     yt     gs tiktok    gda    rtl     gs     fb tiktok \n  0.10   0.20   0.09   0.10   0.60   0.10   0.30   0.05   0.60   0.20   0.10 \n    yt    gda tiktok     fb    rtl     gs     yt   blog tiktok     yt   blog \n  0.10   0.30   0.10   0.20   0.05   0.60   0.10   0.09   0.10   0.10   0.09 \n   gda     fb   blog tiktok    gda   blog     gs     fb tiktok    rtl   blog \n  0.30   0.20   0.09   0.10   0.30   0.09   0.60   0.20   0.10   0.05   0.09 \n    yt     gs   blog    gda   blog    rtl tiktok     yt    rtl     gs   blog \n  0.10   0.60   0.09   0.30   0.09   0.05   0.10   0.10   0.05   0.60   0.09 \ntiktok     yt     fb   blog   blog tiktok     yt     gs     fb     gs   blog \n  0.10   0.10   0.20   0.09   0.09   0.10   0.10   0.60   0.20   0.60   0.09 \n    fb tiktok     gs     fb     yt     gs     gs     fb tiktok     yt     fb \n  0.20   0.10   0.60   0.20   0.10   0.60   0.60   0.20   0.10   0.10   0.20 \n   rtl     gs   blog     yt     fb     gs    rtl     yt     fb     fb   blog \n  0.05   0.60   0.09   0.10   0.20   0.60   0.05   0.10   0.20   0.20   0.09 \n    fb tiktok    rtl   blog     gs tiktok    rtl   blog     yt    gda    rtl \n  0.20   0.10   0.05   0.09   0.60   0.10   0.05   0.09   0.10   0.30   0.05 \n    yt tiktok    rtl    gda   blog    gda     fb     yt   blog    gda     yt \n  0.10   0.10   0.05   0.30   0.09   0.30   0.20   0.10   0.09   0.30   0.10 \n   rtl     fb    gda    rtl    gda     gs   blog    gda tiktok    gda     fb \n  0.05   0.20   0.30   0.05   0.30   0.60   0.09   0.30   0.10   0.30   0.20 \n    yt     gs     gs    gda     gs    rtl tiktok    gda tiktok    gda     yt \n  0.10   0.60   0.60   0.30   0.60   0.05   0.10   0.30   0.10   0.30   0.10 \n    gs   blog tiktok     gs   blog    gda   blog     fb   blog     yt    rtl \n  0.60   0.09   0.10   0.60   0.09   0.30   0.09   0.20   0.09   0.10   0.05 \n    gs     yt     yt    rtl     gs     gs     yt   blog tiktok     fb    rtl \n  0.60   0.10   0.10   0.05   0.60   0.60   0.10   0.09   0.10   0.20   0.05 \n    gs tiktok   blog    gda     yt    rtl tiktok   blog     fb    gda    gda \n  0.60   0.10   0.09   0.30   0.10   0.05   0.10   0.09   0.20   0.30   0.30 \n   rtl     fb     fb    gda     gs     fb tiktok tiktok     gs     fb     yt \n  0.05   0.20   0.20   0.30   0.60   0.20   0.10   0.10   0.60   0.20   0.10 \n  blog    rtl     yt     fb tiktok     gs    rtl     fb   blog     gs    rtl \n  0.09   0.05   0.10   0.20   0.10   0.60   0.05   0.20   0.09   0.60   0.05 \n    fb     yt     yt tiktok    rtl     yt     fb    rtl   blog    gda    rtl \n  0.20   0.10   0.10   0.10   0.05   0.10   0.20   0.05   0.09   0.30   0.05 \n    gs tiktok   blog     yt    gda     fb     gs tiktok   blog tiktok tiktok \n  0.60   0.10   0.09   0.10   0.30   0.20   0.60   0.10   0.09   0.10   0.10 \n   gda     gs    rtl tiktok     yt     fb     yt   blog     gs tiktok     yt \n  0.30   0.60   0.05   0.10   0.10   0.20   0.10   0.09   0.60   0.10   0.10 \n   gda   blog     yt tiktok     fb     fb tiktok     fb    gda    rtl   blog \n  0.30   0.09   0.10   0.10   0.20   0.20   0.10   0.20   0.30   0.05   0.09 \n   gda     yt tiktok   blog    gda     fb tiktok     gs     gs     fb     yt \n  0.30   0.10   0.10   0.09   0.30   0.20   0.10   0.60   0.60   0.20   0.10 \n  blog     fb tiktok    rtl    gda    rtl     yt     fb     gs     gs    gda \n  0.09   0.20   0.10   0.05   0.30   0.05   0.10   0.20   0.60   0.60   0.30 \n    fb    rtl     yt tiktok    rtl tiktok   blog    rtl     yt tiktok    gda \n  0.20   0.05   0.10   0.10   0.05   0.10   0.09   0.05   0.10   0.10   0.30 \n    yt   blog    gda     yt   blog    rtl    gda     gs    gda     fb     yt \n  0.10   0.09   0.30   0.10   0.09   0.05   0.30   0.60   0.30   0.20   0.10 \n   rtl tiktok    rtl     yt     gs     gs    gda     yt     fb     yt    rtl \n  0.05   0.10   0.05   0.10   0.60   0.60   0.30   0.10   0.20   0.10   0.05 \n    gs    rtl     yt    gda    rtl     gs tiktok   blog    gda     fb    rtl \n  0.60   0.05   0.10   0.30   0.05   0.60   0.10   0.09   0.30   0.20   0.05 \ntiktok     gs tiktok     yt     gs    gda tiktok     yt     fb tiktok     yt \n  0.10   0.60   0.10   0.10   0.60   0.30   0.10   0.10   0.20   0.10   0.10 \n   gda    rtl   blog tiktok tiktok     gs     gs    rtl   blog     fb tiktok \n  0.30   0.05   0.09   0.10   0.10   0.60   0.60   0.05   0.09   0.20   0.10 \n  blog    rtl     fb     fb     fb    gda     gs   blog     fb    rtl   blog \n  0.09   0.05   0.20   0.20   0.20   0.30   0.60   0.09   0.20   0.05   0.09 \n   gda tiktok    rtl    rtl    rtl     gs     yt     fb    rtl    gda     fb \n  0.30   0.10   0.05   0.05   0.05   0.60   0.10   0.20   0.05   0.30   0.20 \n    gs     yt     fb     gs   blog    gda   blog     yt    rtl tiktok     yt \n  0.60   0.10   0.20   0.60   0.09   0.30   0.09   0.10   0.05   0.10   0.10 \n   gda     gs     yt    gda     yt     fb    rtl     gs    gda     gs     gs \n  0.30   0.60   0.10   0.30   0.10   0.20   0.05   0.60   0.30   0.60   0.60 \ntiktok    gda    rtl     gs     fb     gs   blog     fb     yt     gs     yt \n  0.10   0.30   0.05   0.60   0.20   0.60   0.09   0.20   0.10   0.60   0.10 \n   rtl   blog     gs    gda   blog tiktok     yt    gda    gda   blog     gs \n  0.05   0.09   0.60   0.30   0.09   0.10   0.10   0.30   0.30   0.09   0.60 \n   gda   blog     yt     yt    gda     fb     gs   blog tiktok tiktok     gs \n  0.30   0.09   0.10   0.10   0.30   0.20   0.60   0.09   0.10   0.10   0.60 \n   rtl tiktok     yt     fb     gs    gda     gs     gs tiktok     fb    rtl \n  0.05   0.10   0.10   0.20   0.60   0.30   0.60   0.60   0.10   0.20   0.05 \n   gda   blog    rtl     yt     gs     yt    gda    rtl tiktok     fb     yt \n  0.30   0.09   0.05   0.10   0.60   0.10   0.30   0.05   0.10   0.20   0.10 \n   gda   blog    rtl    gda     gs     yt     fb    rtl     yt tiktok     fb \n  0.30   0.09   0.05   0.30   0.60   0.10   0.20   0.05   0.10   0.10   0.20 \n    fb   blog     yt    rtl     gs     yt tiktok tiktok     yt   blog     gs \n  0.20   0.09   0.10   0.05   0.60   0.10   0.10   0.10   0.10   0.09   0.60 \n    fb     yt    gda     yt     gs     fb   blog     yt     yt tiktok    gda \n  0.20   0.10   0.30   0.10   0.60   0.20   0.09   0.10   0.10   0.10   0.30 \n   rtl     gs   blog    rtl     fb tiktok   blog     gs tiktok     yt    rtl \n  0.05   0.60   0.09   0.05   0.20   0.10   0.09   0.60   0.10   0.10   0.05 \n    gs     gs     fb     gs    rtl tiktok    gda   blog     yt     fb tiktok \n  0.60   0.60   0.20   0.60   0.05   0.10   0.30   0.09   0.10   0.20   0.10 \n    fb     yt     yt    gda   blog     fb tiktok   blog tiktok     gs    rtl \n  0.20   0.10   0.10   0.30   0.09   0.20   0.10   0.09   0.10   0.60   0.05 \n   gda     fb    rtl     yt     gs   blog    rtl    gda    gda     gs     yt \n  0.30   0.20   0.05   0.10   0.60   0.09   0.05   0.30   0.30   0.60   0.10 \ntiktok     yt     fb    rtl     gs   blog    rtl   blog    rtl     gs    gda \n  0.10   0.10   0.20   0.05   0.60   0.09   0.05   0.09   0.05   0.60   0.30 \n    yt tiktok   blog    gda    rtl     fb     gs     yt    rtl tiktok   blog \n  0.10   0.10   0.09   0.30   0.05   0.20   0.60   0.10   0.05   0.10   0.09 \n    yt    rtl     gs tiktok   blog     yt    rtl     gs   blog     yt     gs \n  0.10   0.05   0.60   0.10   0.09   0.10   0.05   0.60   0.09   0.10   0.60 \n   gda tiktok    rtl     fb     fb   blog    gda     yt     gs    rtl tiktok \n  0.30   0.10   0.05   0.20   0.20   0.09   0.30   0.10   0.60   0.05   0.10 \n  blog     gs    rtl    gda     yt    gda tiktok    gda    rtl tiktok     yt \n  0.09   0.60   0.05   0.30   0.10   0.30   0.10   0.30   0.05   0.10   0.10 \n  blog    gda   blog tiktok     yt    rtl     fb     gs     gs    rtl     fb \n  0.09   0.30   0.09   0.10   0.10   0.05   0.20   0.60   0.60   0.05   0.20 \n   gda     yt    gda     gs tiktok    gda tiktok     gs    gda    rtl     yt \n  0.30   0.10   0.30   0.60   0.10   0.30   0.10   0.60   0.30   0.05   0.10 \n   rtl    gda     gs     fb     yt    gda tiktok     yt tiktok    rtl    rtl \n  0.05   0.30   0.60   0.20   0.10   0.30   0.10   0.10   0.10   0.05   0.05 \n    gs tiktok    gda     gs     yt tiktok     fb    rtl    gda   blog     gs \n  0.60   0.10   0.30   0.60   0.10   0.10   0.20   0.05   0.30   0.09   0.60 \ntiktok    gda     yt     fb     yt    rtl    gda    rtl    gda     yt tiktok \n  0.10   0.30   0.10   0.20   0.10   0.05   0.30   0.05   0.30   0.10   0.10 \n  blog   blog     yt     fb    gda tiktok    rtl tiktok    gda     fb   blog \n  0.09   0.09   0.10   0.20   0.30   0.10   0.05   0.10   0.30   0.20   0.09 \n   rtl     gs     fb    gda tiktok    rtl   blog     gs   blog tiktok     fb \n  0.05   0.60   0.20   0.30   0.10   0.05   0.09   0.60   0.09   0.10   0.20 \n    gs     fb     fb   blog tiktok     gs tiktok     fb   blog    gda     yt \n  0.60   0.20   0.20   0.09   0.10   0.60   0.10   0.20   0.09   0.30   0.10 \n   rtl     gs   blog     fb    gda     yt tiktok    rtl     gs   blog tiktok \n  0.05   0.60   0.09   0.20   0.30   0.10   0.10   0.05   0.60   0.09   0.10 \n   gda    rtl    gda     yt     gs     fb     yt     fb    gda tiktok   blog \n  0.30   0.05   0.30   0.10   0.60   0.20   0.10   0.20   0.30   0.10   0.09 \n    yt tiktok     gs    gda   blog   blog     fb tiktok     gs    gda   blog \n  0.10   0.10   0.60   0.30   0.09   0.09   0.20   0.10   0.60   0.30   0.09 \n    fb     gs    rtl     fb tiktok    rtl     gs     yt    gda     fb tiktok \n  0.20   0.60   0.05   0.20   0.10   0.05   0.60   0.10   0.30   0.20   0.10 \ntiktok     fb    gda     yt     yt     fb    rtl tiktok    gda     fb   blog \n  0.10   0.20   0.30   0.10   0.10   0.20   0.05   0.10   0.30   0.20   0.09 \n    yt    gda tiktok    gda     fb   blog     yt    rtl     fb tiktok     gs \n  0.10   0.30   0.10   0.30   0.20   0.09   0.10   0.05   0.20   0.10   0.60 \n    gs    rtl   blog     yt tiktok     fb    gda     gs   blog     fb tiktok \n  0.60   0.05   0.09   0.10   0.10   0.20   0.30   0.60   0.09   0.20   0.10 \n    gs tiktok     yt    gda    rtl tiktok     yt     fb tiktok     fb     gs \n  0.60   0.10   0.10   0.30   0.05   0.10   0.10   0.20   0.10   0.20   0.60 \n    yt   blog    rtl     yt    gda tiktok    rtl     yt   blog    gda     fb \n  0.10   0.09   0.05   0.10   0.30   0.10   0.05   0.10   0.09   0.30   0.20 \n  blog    rtl     yt     fb tiktok     yt    rtl   blog     yt     gs    rtl \n  0.09   0.05   0.10   0.20   0.10   0.10   0.05   0.09   0.10   0.60   0.05 \n    fb tiktok     fb     gs    rtl   blog    gda     gs     gs     yt     fb \n  0.20   0.10   0.20   0.60   0.05   0.09   0.30   0.60   0.60   0.10   0.20 \n   rtl     gs     fb    gda     yt   blog    rtl    gda     fb    rtl    gda \n  0.05   0.60   0.20   0.30   0.10   0.09   0.05   0.30   0.20   0.05   0.30 \n    fb     gs tiktok    gda    rtl tiktok    gda     yt     fb    rtl     gs \n  0.20   0.60   0.10   0.30   0.05   0.10   0.30   0.10   0.20   0.05   0.60 \n    yt     fb    rtl     gs     gs tiktok     gs     yt     fb    rtl   blog \n  0.10   0.20   0.05   0.60   0.60   0.10   0.60   0.10   0.20   0.05   0.09 \n   gda    rtl    gda     yt     fb tiktok   blog   blog     gs     yt    rtl \n  0.30   0.05   0.30   0.10   0.20   0.10   0.09   0.09   0.60   0.10   0.05 \ntiktok   blog     gs     yt    gda     gs    rtl    gda     gs   blog     yt \n  0.10   0.09   0.60   0.10   0.30   0.60   0.05   0.30   0.60   0.09   0.10 \n   rtl     gs tiktok     yt    gda tiktok   blog     gs     fb     yt     yt \n  0.05   0.60   0.10   0.10   0.30   0.10   0.09   0.60   0.20   0.10   0.10 \n   gda    rtl   blog tiktok    rtl     fb   blog     yt     fb    rtl     gs \n  0.30   0.05   0.09   0.10   0.05   0.20   0.09   0.10   0.20   0.05   0.60 \ntiktok   blog     fb     gs    rtl   blog    gda     fb    gda tiktok     fb \n  0.10   0.09   0.20   0.60   0.05   0.09   0.30   0.20   0.30   0.10   0.20 \ntiktok    gda   blog tiktok    gda     gs     fb    gda    gda     gs     fb \n  0.10   0.30   0.09   0.10   0.30   0.60   0.20   0.30   0.30   0.60   0.20 \n   rtl    gda     yt     gs     yt    rtl     yt    gda tiktok    rtl     gs \n  0.05   0.30   0.10   0.60   0.10   0.05   0.10   0.30   0.10   0.05   0.60 \n    yt   blog    gda    rtl    gda tiktok     fb    gda     fb   blog     gs \n  0.10   0.09   0.30   0.05   0.30   0.10   0.20   0.30   0.20   0.09   0.60 \n   gda     gs   blog    rtl     gs     fb    gda    rtl tiktok     gs    gda \n  0.30   0.60   0.09   0.05   0.60   0.20   0.30   0.05   0.10   0.60   0.30 \n   rtl     fb   blog     yt     yt    rtl     yt    rtl   blog tiktok     fb \n  0.05   0.20   0.09   0.10   0.10   0.05   0.10   0.05   0.09   0.10   0.20 \n    yt     gs    gda tiktok     fb     yt    rtl tiktok     gs    rtl     gs \n  0.10   0.60   0.30   0.10   0.20   0.10   0.05   0.10   0.60   0.05   0.60 \n    fb    gda     fb    gda     gs     yt tiktok     yt    gda tiktok   blog \n  0.20   0.30   0.20   0.30   0.60   0.10   0.10   0.10   0.30   0.10   0.09 \n  blog    rtl tiktok     fb    gda     yt   blog     gs    gda tiktok     gs \n  0.09   0.05   0.10   0.20   0.30   0.10   0.09   0.60   0.30   0.10   0.60 \n   rtl     fb   blog    gda    rtl     fb     gs     yt    rtl tiktok     gs \n  0.05   0.20   0.09   0.30   0.05   0.20   0.60   0.10   0.05   0.10   0.60 \n   gda     gs    gda    rtl    rtl    gda tiktok     fb    rtl     gs   blog \n  0.30   0.60   0.30   0.05   0.05   0.30   0.10   0.20   0.05   0.60   0.09 \ntiktok    rtl   blog     fb tiktok     yt   blog     fb    rtl tiktok   blog \n  0.10   0.05   0.09   0.20   0.10   0.10   0.09   0.20   0.05   0.10   0.09 \n    gs   blog     fb   blog     gs     fb    rtl   blog     yt    rtl   blog \n  0.60   0.09   0.20   0.09   0.60   0.20   0.05   0.09   0.10   0.05   0.09 \ntiktok     gs tiktok   blog     fb    rtl    gda     yt    rtl     fb     yt \n  0.10   0.60   0.10   0.09   0.20   0.05   0.30   0.10   0.05   0.20   0.10 \n   gda   blog    gda     gs     gs    gda     yt     fb     gs    gda     fb \n  0.30   0.09   0.30   0.60   0.60   0.30   0.10   0.20   0.60   0.30   0.20 \n   rtl tiktok    gda     yt    gda   blog     yt     gs     fb tiktok    gda \n  0.05   0.10   0.30   0.10   0.30   0.09   0.10   0.60   0.20   0.10   0.30 \n    fb    rtl     gs    gda   blog     yt     fb     gs    rtl   blog     yt \n  0.20   0.05   0.60   0.30   0.09   0.10   0.20   0.60   0.05   0.09   0.10 \n  blog     fb    rtl     gs tiktok   blog     yt tiktok     yt    gda tiktok \n  0.09   0.20   0.05   0.60   0.10   0.09   0.10   0.10   0.10   0.30   0.10 \n  blog     yt tiktok     fb     gs    gda    rtl   blog     fb     fb    gda \n  0.09   0.10   0.10   0.20   0.60   0.30   0.05   0.09   0.20   0.20   0.30 \ntiktok     yt    rtl     gs   blog    gda     fb    gda   blog    rtl     fb \n  0.10   0.10   0.05   0.60   0.09   0.30   0.20   0.30   0.09   0.05   0.20 \n    yt   blog     fb     gs     fb     yt tiktok     gs     gs tiktok    gda \n  0.10   0.09   0.20   0.60   0.20   0.10   0.10   0.60   0.60   0.10   0.30 \n    fb     yt    gda tiktok     gs    rtl     fb     yt tiktok   blog     fb \n  0.20   0.10   0.30   0.10   0.60   0.05   0.20   0.10   0.10   0.09   0.20 \n  blog    gda     gs    gda    rtl     gs     fb tiktok   blog    gda     yt \n  0.09   0.30   0.60   0.30   0.05   0.60   0.20   0.10   0.09   0.30   0.10 \n    fb    gda     yt     gs     fb     yt   blog    rtl    rtl     fb    gda \n  0.20   0.30   0.10   0.60   0.20   0.10   0.09   0.05   0.05   0.20   0.30 \ntiktok    rtl   blog   blog     fb   blog    rtl    gda tiktok     gs tiktok \n  0.10   0.05   0.09   0.09   0.20   0.09   0.05   0.30   0.10   0.60   0.10 \n  blog tiktok     fb     gs     yt    rtl     fb     gs tiktok tiktok     fb \n  0.09   0.10   0.20   0.60   0.10   0.05   0.20   0.60   0.10   0.10   0.20 \n   rtl     yt    gda    gda tiktok tiktok     fb   blog     gs    gda    gda \n  0.05   0.10   0.30   0.30   0.10   0.10   0.20   0.09   0.60   0.30   0.30 \n  blog     yt    rtl   blog    gda    rtl     yt    gda     fb   blog    rtl \n  0.09   0.10   0.05   0.09   0.30   0.05   0.10   0.30   0.20   0.09   0.05 \n  blog     fb   blog    rtl     yt     gs    rtl     yt    rtl tiktok     gs \n  0.09   0.20   0.09   0.05   0.10   0.60   0.05   0.10   0.05   0.10   0.60 \n   rtl     yt   blog tiktok     yt     gs tiktok    rtl     fb    gda     yt \n  0.05   0.10   0.09   0.10   0.10   0.60   0.10   0.05   0.20   0.30   0.10 \n    gs tiktok   blog   blog    gda     yt    rtl    gda    rtl     yt     fb \n  0.60   0.10   0.09   0.09   0.30   0.10   0.05   0.30   0.05   0.10   0.20 \n   gda tiktok    rtl     yt    rtl     gs     fb     yt     fb   blog    rtl \n  0.30   0.10   0.05   0.10   0.05   0.60   0.20   0.10   0.20   0.09   0.05 \n    fb tiktok   blog    gda     gs     fb tiktok   blog    rtl tiktok   blog \n  0.20   0.10   0.09   0.30   0.60   0.20   0.10   0.09   0.05   0.10   0.09 \n   gda   blog     fb   blog    rtl     gs tiktok    gda    gda     yt     gs \n  0.30   0.09   0.20   0.09   0.05   0.60   0.10   0.30   0.30   0.10   0.60 \n    fb    rtl     yt tiktok     fb   blog     yt     gs    rtl   blog    gda \n  0.20   0.05   0.10   0.10   0.20   0.09   0.10   0.60   0.05   0.09   0.30 \ntiktok    rtl     gs   blog     yt     fb tiktok   blog    gda     gs    gda \n  0.10   0.05   0.60   0.09   0.10   0.20   0.10   0.09   0.30   0.60   0.30 \n    fb tiktok   blog     gs   blog    rtl tiktok     yt     fb    rtl     yt \n  0.20   0.10   0.09   0.60   0.09   0.05   0.10   0.10   0.20   0.05   0.10 \n    gs    gda   blog    rtl    rtl     fb     fb     yt    rtl    gda   blog \n  0.60   0.30   0.09   0.05   0.05   0.20   0.20   0.10   0.05   0.30   0.09 \ntiktok     gs     fb   blog     gs     fb     gs     fb    rtl   blog     gs \n  0.10   0.60   0.20   0.09   0.60   0.20   0.60   0.20   0.05   0.09   0.60 \n    yt     gs   blog tiktok    rtl tiktok     gs   blog tiktok     yt     yt \n  0.10   0.60   0.09   0.10   0.05   0.10   0.60   0.09   0.10   0.10   0.10 \n    fb    rtl tiktok    rtl    gda   blog     yt     fb    gda    rtl tiktok \n  0.20   0.05   0.10   0.05   0.30   0.09   0.10   0.20   0.30   0.05   0.10 \n  blog    gda     gs     yt   blog     yt tiktok     yt     gs tiktok    rtl \n  0.09   0.30   0.60   0.10   0.09   0.10   0.10   0.10   0.60   0.10   0.05 \n   gda     yt     gs     yt    rtl   blog tiktok     fb   blog     gs     yt \n  0.30   0.10   0.60   0.10   0.05   0.09   0.10   0.20   0.09   0.60   0.10 \ntiktok     gs tiktok   blog tiktok   blog    rtl     yt    gda tiktok     fb \n  0.10   0.60   0.10   0.09   0.10   0.09   0.05   0.10   0.30   0.10   0.20 \n    gs    gda   blog    gda tiktok     yt     gs     yt    gda     yt   blog \n  0.60   0.30   0.09   0.30   0.10   0.10   0.60   0.10   0.30   0.10   0.09 \ntiktok     fb     yt   blog    rtl tiktok     gs     fb     yt     fb    gda \n  0.10   0.20   0.10   0.09   0.05   0.10   0.60   0.20   0.10   0.20   0.30 \n    gs     yt    gda     yt   blog     fb     gs     fb     gs     yt    rtl \n  0.60   0.10   0.30   0.10   0.09   0.20   0.60   0.20   0.60   0.10   0.05 \n  blog tiktok    rtl     gs     yt    rtl    gda     gs     fb   blog    rtl \n  0.09   0.10   0.05   0.60   0.10   0.05   0.30   0.60   0.20   0.09   0.05 \ntiktok tiktok     fb   blog    rtl    rtl     yt     fb   blog     gs    gda \n  0.10   0.10   0.20   0.09   0.05   0.05   0.10   0.20   0.09   0.60   0.30 \n    gs    gda tiktok     yt    rtl     yt   blog     fb    rtl tiktok    gda \n  0.60   0.30   0.10   0.10   0.05   0.10   0.09   0.20   0.05   0.10   0.30 \n  blog     yt     fb     gs    gda     fb     yt   blog   blog tiktok     fb \n  0.09   0.10   0.20   0.60   0.30   0.20   0.10   0.09   0.09   0.10   0.20 \n   gda     fb     gs tiktok tiktok     fb   blog     yt    gda    rtl tiktok \n  0.30   0.20   0.60   0.10   0.10   0.20   0.09   0.10   0.30   0.05   0.10 \n    fb     yt   blog    rtl     gs    rtl   blog     yt     fb tiktok     gs \n  0.20   0.10   0.09   0.05   0.60   0.05   0.09   0.10   0.20   0.10   0.60 \n   gda     yt     fb tiktok    rtl tiktok     fb   blog     gs    rtl   blog \n  0.30   0.10   0.20   0.10   0.05   0.10   0.20   0.09   0.60   0.05   0.09 \n    gs    gda     fb    gda     gs    rtl tiktok     fb     yt     gs     yt \n  0.60   0.30   0.20   0.30   0.60   0.05   0.10   0.20   0.10   0.60   0.10 \n   gda     fb    rtl tiktok     gs     yt    gda    gda     gs     yt     fb \n  0.30   0.20   0.05   0.10   0.60   0.10   0.30   0.30   0.60   0.10   0.20 \n  blog tiktok     gs tiktok   blog     fb     fb    rtl    gda   blog     yt \n  0.09   0.10   0.60   0.10   0.09   0.20   0.20   0.05   0.30   0.09   0.10 \n   gda     gs     fb    rtl     yt    rtl    gda     yt   blog tiktok tiktok \n  0.30   0.60   0.20   0.05   0.10   0.05   0.30   0.10   0.09   0.10   0.10 \n    fb     gs    gda tiktok     yt   blog    gda     yt tiktok    rtl   blog \n  0.20   0.60   0.30   0.10   0.10   0.09   0.30   0.10   0.10   0.05   0.09 \n   gda     gs     yt   blog     fb    gda     yt   blog     gs     fb    rtl \n  0.30   0.60   0.10   0.09   0.20   0.30   0.10   0.09   0.60   0.20   0.05 \n   gda tiktok tiktok    gda     fb     gs    rtl     yt     fb tiktok    rtl \n  0.30   0.10   0.10   0.30   0.20   0.60   0.05   0.10   0.20   0.10   0.05 \n  blog     fb     yt    rtl     fb tiktok     yt    gda     yt     fb     yt \n  0.09   0.20   0.10   0.05   0.20   0.10   0.10   0.30   0.10   0.20   0.10 \n    yt    gda tiktok    gda    gda    rtl     gs   blog tiktok     fb     gs \n  0.10   0.30   0.10   0.30   0.30   0.05   0.60   0.09   0.10   0.20   0.60 \n    yt tiktok     fb    gda    rtl     gs    rtl   blog     fb     gs     yt \n  0.10   0.10   0.20   0.30   0.05   0.60   0.05   0.09   0.20   0.60   0.10 \n    yt     gs tiktok tiktok   blog     fb     yt    rtl    gda     fb   blog \n  0.10   0.60   0.10   0.10   0.09   0.20   0.10   0.05   0.30   0.20   0.09 \n    yt     yt tiktok    gda     yt tiktok     gs    rtl     gs     yt tiktok \n  0.10   0.10   0.10   0.30   0.10   0.10   0.60   0.05   0.60   0.10   0.10 \n  blog    rtl    gda     yt     gs     fb    gda    gda     fb    rtl     yt \n  0.09   0.05   0.30   0.10   0.60   0.20   0.30   0.30   0.20   0.05   0.10 \ntiktok     gs     fb    gda    rtl tiktok    rtl   blog tiktok     gs     yt \n  0.10   0.60   0.20   0.30   0.05   0.10   0.05   0.09   0.10   0.60   0.10 \n   gda     yt tiktok     yt     gs tiktok     gs     yt    rtl    rtl     gs \n  0.30   0.10   0.10   0.10   0.60   0.10   0.60   0.10   0.05   0.05   0.60 \n  blog     fb    gda tiktok     fb     yt    rtl     fb    gda    rtl    gda \n  0.09   0.20   0.30   0.10   0.20   0.10   0.05   0.20   0.30   0.05   0.30 \n    fb tiktok    gda     gs tiktok    gda     fb   blog     gs   blog     fb \n  0.20   0.10   0.30   0.60   0.10   0.30   0.20   0.09   0.60   0.09   0.20 \n   rtl    gda    rtl     gs     yt tiktok    rtl   blog tiktok     fb    gda \n  0.05   0.30   0.05   0.60   0.10   0.10   0.05   0.09   0.10   0.20   0.30 \n  blog    gda     gs     yt   blog    gda    rtl     gs   blog tiktok    rtl \n  0.09   0.30   0.60   0.10   0.09   0.30   0.05   0.60   0.09   0.10   0.05 \n   gda     gs     yt     fb tiktok    rtl    gda    rtl     gs     yt     fb \n  0.30   0.60   0.10   0.20   0.10   0.05   0.30   0.05   0.60   0.10   0.20 \n   gda    rtl    gda   blog     gs     fb     gs tiktok     yt tiktok    rtl \n  0.30   0.05   0.30   0.09   0.60   0.20   0.60   0.10   0.10   0.10   0.05 \n  blog     fb     gs     fb tiktok     yt    rtl tiktok     fb    rtl     yt \n  0.09   0.20   0.60   0.20   0.10   0.10   0.05   0.10   0.20   0.05   0.10 \n    gs tiktok    gda   blog     yt    rtl     gs    gda   blog    rtl     yt \n  0.60   0.10   0.30   0.09   0.10   0.05   0.60   0.30   0.09   0.05   0.10 \ntiktok     fb     fb   blog    rtl    gda     yt    gda tiktok tiktok     yt \n  0.10   0.20   0.20   0.09   0.05   0.30   0.10   0.30   0.10   0.10   0.10 \n   gda     gs   blog   blog     fb     yt    gda tiktok    rtl    gda     gs \n  0.30   0.60   0.09   0.09   0.20   0.10   0.30   0.10   0.05   0.30   0.60 \n    fb     yt    rtl    gda     yt tiktok     fb tiktok    rtl   blog     yt \n  0.20   0.10   0.05   0.30   0.10   0.10   0.20   0.10   0.05   0.09   0.10 \n   rtl tiktok    rtl     fb    gda   blog    gda tiktok     fb     gs   blog \n  0.05   0.10   0.05   0.20   0.30   0.09   0.30   0.10   0.20   0.60   0.09 \ntiktok tiktok    gda   blog tiktok     yt    gda tiktok    rtl tiktok     fb \n  0.10   0.10   0.30   0.09   0.10   0.10   0.30   0.10   0.05   0.10   0.20 \n    gs    gda     yt     gs   blog     yt     fb    rtl tiktok     yt     fb \n  0.60   0.30   0.10   0.60   0.09   0.10   0.20   0.05   0.10   0.10   0.20 \n  blog     yt tiktok     gs     yt     gs    gda tiktok     yt    rtl     gs \n  0.09   0.10   0.10   0.60   0.10   0.60   0.30   0.10   0.10   0.05   0.60 \n    fb tiktok     yt    rtl tiktok    gda   blog     yt     gs    rtl tiktok \n  0.20   0.10   0.10   0.05   0.10   0.30   0.09   0.10   0.60   0.05   0.10 \n   gda    rtl     gs tiktok    rtl   blog     fb     gs     fb    gda    rtl \n  0.30   0.05   0.60   0.10   0.05   0.09   0.20   0.60   0.20   0.30   0.05 \n    yt     fb   blog    rtl tiktok     gs    gda     yt   blog tiktok   blog \n  0.10   0.20   0.09   0.05   0.10   0.60   0.30   0.10   0.09   0.10   0.09 \n   gda     fb     yt tiktok     fb    rtl   blog tiktok     fb    gda     gs \n  0.30   0.20   0.10   0.10   0.20   0.05   0.09   0.10   0.20   0.30   0.60 \ntiktok    gda     gs     gs   blog    gda     fb     gs tiktok     yt   blog \n  0.10   0.30   0.60   0.60   0.09   0.30   0.20   0.60   0.10   0.10   0.09 \n   rtl     yt   blog     gs    gda tiktok    gda     gs     fb    rtl     yt \n  0.05   0.10   0.09   0.60   0.30   0.10   0.30   0.60   0.20   0.05   0.10 \n   gda    rtl     gs   blog     fb    rtl     yt    rtl     gs tiktok    gda \n  0.30   0.05   0.60   0.09   0.20   0.05   0.10   0.05   0.60   0.10   0.30 \n    yt   blog tiktok     gs    rtl   blog tiktok     gs    gda     yt     yt \n  0.10   0.09   0.10   0.60   0.05   0.09   0.10   0.60   0.30   0.10   0.10 \n    yt    gda     fb tiktok    rtl tiktok    gda     yt     gs    rtl    gda \n  0.10   0.30   0.20   0.10   0.05   0.10   0.30   0.10   0.60   0.05   0.30 \n   gda    rtl    gda tiktok     yt tiktok     gs     fb   blog    gda   blog \n  0.30   0.05   0.30   0.10   0.10   0.10   0.60   0.20   0.09   0.30   0.09 \n    yt tiktok     fb    gda    rtl     gs   blog    rtl     fb    gda     fb \n  0.10   0.10   0.20   0.30   0.05   0.60   0.09   0.05   0.20   0.30   0.20 \n   rtl     gs   blog     yt   blog     fb tiktok    gda     gs    gda   blog \n  0.05   0.60   0.09   0.10   0.09   0.20   0.10   0.30   0.60   0.30   0.09 \ntiktok     fb     yt     gs   blog     fb tiktok     gs   blog    gda     yt \n  0.10   0.20   0.10   0.60   0.09   0.20   0.10   0.60   0.09   0.30   0.10 \n   gda     fb   blog    rtl     yt    gda tiktok    gda     yt   blog     fb \n  0.30   0.20   0.09   0.05   0.10   0.30   0.10   0.30   0.10   0.09   0.20 \n   rtl   blog     gs     yt     fb    rtl    gda     fb tiktok     fb   blog \n  0.05   0.09   0.60   0.10   0.20   0.05   0.30   0.20   0.10   0.20   0.09 \n   gda     yt tiktok     fb    rtl     fb     gs    rtl     fb tiktok     yt \n  0.30   0.10   0.10   0.20   0.05   0.20   0.60   0.05   0.20   0.10   0.10 \n    fb     gs    gda     gs     fb    rtl    gda tiktok tiktok     yt    rtl \n  0.20   0.60   0.30   0.60   0.20   0.05   0.30   0.10   0.10   0.10   0.05 \n   rtl     yt    gda     gs tiktok     fb     yt    gda    rtl     gs tiktok \n  0.05   0.10   0.30   0.60   0.10   0.20   0.10   0.30   0.05   0.60   0.10 \n   rtl    rtl     yt tiktok    rtl    rtl tiktok     fb     yt   blog tiktok \n  0.05   0.05   0.10   0.10   0.05   0.05   0.10   0.20   0.10   0.09   0.10 \n   rtl     yt tiktok     fb    gda   blog     yt   blog tiktok     gs     fb \n  0.05   0.10   0.10   0.20   0.30   0.09   0.10   0.09   0.10   0.60   0.20 \n   gda     yt    gda     yt tiktok     gs   blog tiktok     gs    gda    rtl \n  0.30   0.10   0.30   0.10   0.10   0.60   0.09   0.10   0.60   0.30   0.05 \n  blog     yt     gs     fb    gda     gs tiktok    rtl     fb    gda    rtl \n  0.09   0.10   0.60   0.20   0.30   0.60   0.10   0.05   0.20   0.30   0.05 \n    gs    gda   blog     yt     fb    gda   blog     yt   blog tiktok    gda \n  0.60   0.30   0.09   0.10   0.20   0.30   0.09   0.10   0.09   0.10   0.30 \n   rtl     yt tiktok    rtl    rtl tiktok    gda   blog    gda tiktok    rtl \n  0.05   0.10   0.10   0.05   0.05   0.10   0.30   0.09   0.30   0.10   0.05 \n    yt   blog     gs     gs     yt     fb tiktok   blog    rtl     fb    rtl \n  0.10   0.09   0.60   0.60   0.10   0.20   0.10   0.09   0.05   0.20   0.05 \ntiktok     yt     fb     yt    gda   blog     gs    gda tiktok    rtl    rtl \n  0.10   0.10   0.20   0.10   0.30   0.09   0.60   0.30   0.10   0.05   0.05 \n    fb tiktok   blog    rtl     yt     gs     gs     yt   blog tiktok    rtl \n  0.20   0.10   0.09   0.05   0.10   0.60   0.60   0.10   0.09   0.10   0.05 \n    yt    gda    rtl     gs   blog   blog    rtl    gda tiktok    rtl     fb \n  0.10   0.30   0.05   0.60   0.09   0.09   0.05   0.30   0.10   0.05   0.20 \n    yt    gda     fb   blog     gs    rtl tiktok   blog     gs     gs    gda \n  0.10   0.30   0.20   0.09   0.60   0.05   0.10   0.09   0.60   0.60   0.30 \n    gs tiktok     gs   blog     fb    rtl    gda     gs     fb     gs     yt \n  0.60   0.10   0.60   0.09   0.20   0.05   0.30   0.60   0.20   0.60   0.10 \n   rtl tiktok     fb tiktok     yt     fb     gs    rtl tiktok tiktok     yt \n  0.05   0.10   0.20   0.10   0.10   0.20   0.60   0.05   0.10   0.10   0.10 \n   rtl     fb   blog     fb tiktok    gda     yt   blog tiktok     fb    rtl \n  0.05   0.20   0.09   0.20   0.10   0.30   0.10   0.09   0.10   0.20   0.05 \n   gda     gs   blog     yt     gs     yt tiktok    gda   blog     gs    gda \n  0.30   0.60   0.09   0.10   0.60   0.10   0.10   0.30   0.09   0.60   0.30 \n   gda     yt     fb     gs     gs    rtl    gda     yt    gda     fb    gda \n  0.30   0.10   0.20   0.60   0.60   0.05   0.30   0.10   0.30   0.20   0.30 \ntiktok    gda    rtl     fb tiktok     fb     yt    gda    rtl tiktok \n  0.10   0.30   0.05   0.20   0.10   0.20   0.10   0.30   0.05   0.10"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-51",
    "href": "speeding-up-r/slides.html#section-51",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "DT &lt;- data.table(\n  channel_name = touches,\n  outcome = outcome,\n  date = dates,\n  re,\n  value,\n  groups\n)\n\nDT\n\n\n\n      channel_name outcome       date   re    value groups\n   1:       tiktok       1 2023-04-17 0.10 6794.194      1\n   2:         blog       1 2023-02-25 0.09 6794.194      1\n   3:           gs       1 2023-01-24 0.60 6794.194      1\n   4:           fb       1 2023-03-12 0.20 6794.194      1\n   5:          rtl       1 2023-03-09 0.05 6794.194      1\n  ---                                                     \n3009:           fb       1 2023-02-22 0.20 6747.546    999\n3010:           yt       1 2023-04-08 0.10 6747.546    999\n3011:          gda       1 2023-01-21 0.30 3392.976   1000\n3012:          rtl       1 2023-03-09 0.05 3392.976   1000\n3013:       tiktok       1 2023-03-04 0.10 3392.976   1000"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-54",
    "href": "speeding-up-r/slides.html#section-54",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "DT[, re_tot := sum(re, na.rm = TRUE), by = groups]\n\n\n\n      channel_name outcome       date   re    value groups re_tot\n   1:       tiktok       1 2023-04-17 0.10 6794.194      1   1.04\n   2:         blog       1 2023-02-25 0.09 6794.194      1   1.04\n   3:           gs       1 2023-01-24 0.60 6794.194      1   1.04\n   4:           fb       1 2023-03-12 0.20 6794.194      1   1.04\n   5:          rtl       1 2023-03-09 0.05 6794.194      1   1.04\n  ---                                                            \n3009:           fb       1 2023-02-22 0.20 6747.546    999   0.30\n3010:           yt       1 2023-04-08 0.10 6747.546    999   0.30\n3011:          gda       1 2023-01-21 0.30 3392.976   1000   0.45\n3012:          rtl       1 2023-03-09 0.05 3392.976   1000   0.45\n3013:       tiktok       1 2023-03-04 0.10 3392.976   1000   0.45"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-55",
    "href": "speeding-up-r/slides.html#section-55",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "DT[, re_tot := sum(re, na.rm = TRUE), by = groups]\nDT[, `:=`(conversion = outcome * re / re_tot, value = value * re / re_tot)]\n\n\n\n      channel_name outcome       date   re     value groups re_tot conversion\n   1:       tiktok       1 2023-04-17 0.10  653.2879      1   1.04 0.09615385\n   2:         blog       1 2023-02-25 0.09  587.9591      1   1.04 0.08653846\n   3:           gs       1 2023-01-24 0.60 3919.7273      1   1.04 0.57692308\n   4:           fb       1 2023-03-12 0.20 1306.5758      1   1.04 0.19230769\n   5:          rtl       1 2023-03-09 0.05  326.6439      1   1.04 0.04807692\n  ---                                                                        \n3009:           fb       1 2023-02-22 0.20 4498.3638    999   0.30 0.66666667\n3010:           yt       1 2023-04-08 0.10 2249.1819    999   0.30 0.33333333\n3011:          gda       1 2023-01-21 0.30 2261.9841   1000   0.45 0.66666667\n3012:          rtl       1 2023-03-09 0.05  376.9974   1000   0.45 0.11111111\n3013:       tiktok       1 2023-03-04 0.10  753.9947   1000   0.45 0.22222222"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-56",
    "href": "speeding-up-r/slides.html#section-56",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "DT[, re_tot := sum(re, na.rm = TRUE), by = groups]\nDT[, `:=`(conversion = outcome * re / re_tot, value = value * re / re_tot)]\nDT[,.(channel_name, re, conversion, value, date)]\n\n      channel_name   re conversion      value       date\n   1:       tiktok 0.10 0.09615385   62.81614 2023-04-17\n   2:         blog 0.09 0.08653846   50.88108 2023-02-25\n   3:           gs 0.60 0.57692308 2261.38116 2023-01-24\n   4:           fb 0.20 0.19230769  251.26457 2023-03-12\n   5:          rtl 0.05 0.04807692   15.70404 2023-03-09\n  ---                                                   \n3009:           fb 0.20 0.66666667 2998.90918 2023-02-22\n3010:           yt 0.10 0.33333333  749.72730 2023-04-08\n3011:          gda 0.30 0.66666667 1507.98941 2023-01-21\n3012:          rtl 0.05 0.11111111   41.88859 2023-03-09\n3013:       tiktok 0.10 0.22222222  167.55438 2023-03-04\n\n\n\n\n      channel_name outcome       date   re      value groups re_tot\n   1:       tiktok       1 2023-04-17 0.10   62.81614      1   1.04\n   2:         blog       1 2023-02-25 0.09   50.88108      1   1.04\n   3:           gs       1 2023-01-24 0.60 2261.38116      1   1.04\n   4:           fb       1 2023-03-12 0.20  251.26457      1   1.04\n   5:          rtl       1 2023-03-09 0.05   15.70404      1   1.04\n  ---                                                              \n3009:           fb       1 2023-02-22 0.20 2998.90918    999   0.30\n3010:           yt       1 2023-04-08 0.10  749.72730    999   0.30\n3011:          gda       1 2023-01-21 0.30 1507.98941   1000   0.45\n3012:          rtl       1 2023-03-09 0.05   41.88859   1000   0.45\n3013:       tiktok       1 2023-03-04 0.10  167.55438   1000   0.45\n      conversion\n   1: 0.09615385\n   2: 0.08653846\n   3: 0.57692308\n   4: 0.19230769\n   5: 0.04807692\n  ---           \n3009: 0.66666667\n3010: 0.33333333\n3011: 0.66666667\n3012: 0.11111111\n3013: 0.22222222"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-57",
    "href": "speeding-up-r/slides.html#section-57",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "bm &lt;- bench::mark(\n  data.table = {\n    touches &lt;- strsplit(path_data$path, \"&gt;\", fixed = TRUE)\n    lt &lt;- lengths(touches)\n    groups &lt;- rep.int(seq_along(touches), lt)\n    outcome &lt;- rep.int(path_data$leads, lt)\n    value &lt;- rep.int(path_data$value, lt) \n    touches &lt;- unlist(touches)\n    dates &lt;- unlist(strsplit(path_data$dates, \"&gt;\", fixed = TRUE))\n    not_empty &lt;- touches != ''\n    dates &lt;- dates[not_empty] \n    touches &lt;- touches[not_empty]\n    re &lt;- lu[touches]\n    DT &lt;- data.table(\n      channel_name = touches,\n      outcome = outcome,\n      date = dates,\n      re,\n      value,\n      groups\n    )\n    DT[, re_tot := sum(re, na.rm = TRUE), by = groups]\n    DT[, `:=`(conversion = outcome * re / re_tot, value = value * re / re_tot)]\n    DT[,.(channel_name, re, conversion, value, date)]\n  },\n  \n  rust =  data.table::rbindlist(attr_path(\n    path_data$path,\n    path_data$dates,\n    path_data$leads,\n    path_data$value,\n    as.list(lu)\n  ))\n)"
  },
  {
    "objectID": "speeding-up-r/slides.html#section-58",
    "href": "speeding-up-r/slides.html#section-58",
    "title": "Rust goes brrrr",
    "section": "",
    "text": "bm |&gt;\n  dplyr::select(1:5) |&gt; \n  dplyr::mutate(\n    times_faster = as.double(dplyr::lead(median, 1) / median)\n  )\n\n# A tibble: 2 × 6\n  expression      min   median `itr/sec` mem_alloc times_faster\n  &lt;bch:expr&gt; &lt;bch:tm&gt; &lt;bch:tm&gt;     &lt;dbl&gt; &lt;bch:byt&gt;        &lt;dbl&gt;\n1 data.table   1.52ms   1.64ms      603.     912KB         5.97\n2 rust         9.12ms   9.77ms      103.     166KB        NA"
  },
  {
    "objectID": "s3-generics/slides.html#well-cover",
    "href": "s3-generics/slides.html#well-cover",
    "title": "S3 object system",
    "section": "We’ll cover:",
    "text": "We’ll cover:\n\nObjects in R\nAtomic vectors\nthe posers: data.frame, matrix, and factors\nClasses & attributes\nGeneric & non-generic functions\nMethod dispatch"
  },
  {
    "objectID": "s3-generics/slides.html#section-2",
    "href": "s3-generics/slides.html#section-2",
    "title": "S3 object system",
    "section": "",
    "text": "x &lt;- as.factor(c(\"a\", \"b\", \"c\"))\nx\n\n[1] a b c\nLevels: a b c"
  },
  {
    "objectID": "s3-generics/slides.html#types-are-not-classes-.auto-animatetrue",
    "href": "s3-generics/slides.html#types-are-not-classes-.auto-animatetrue",
    "title": "S3 object system",
    "section": "Types are not classes {.auto-animate=true}",
    "text": "Types are not classes {.auto-animate=true}\n\nx &lt;- as.factor(c(\"a\", \"b\", \"c\"))\nx\n\n[1] a b c\nLevels: a b c"
  },
  {
    "objectID": "s3-generics/slides.html#types-are-not-classes-.auto-animatetrue-1",
    "href": "s3-generics/slides.html#types-are-not-classes-.auto-animatetrue-1",
    "title": "S3 object system",
    "section": "Types are not classes {.auto-animate=true}",
    "text": "Types are not classes {.auto-animate=true}\n\nx &lt;- as.factor(c(\"a\", \"b\", \"c\"))\nclass(x)\n\n[1] \"factor\""
  },
  {
    "objectID": "s3-generics/slides.html#types-are-not-classes-.auto-animatetrue-2",
    "href": "s3-generics/slides.html#types-are-not-classes-.auto-animatetrue-2",
    "title": "S3 object system",
    "section": "Types are not classes {.auto-animate=true}",
    "text": "Types are not classes {.auto-animate=true}\n\nx &lt;- as.factor(c(\"a\", \"b\", \"c\"))\ntypeof(x)\n\n[1] \"integer\""
  },
  {
    "objectID": "s3-generics/slides.html#primary-types",
    "href": "s3-generics/slides.html#primary-types",
    "title": "S3 object system",
    "section": "Primary types:",
    "text": "Primary types:\n\ndouble 0.123\ninteger 1L\ncharacter \"hi there\"\nlogical TRUE"
  },
  {
    "objectID": "s3-generics/slides.html#types-are-not-classes-1",
    "href": "s3-generics/slides.html#types-are-not-classes-1",
    "title": "S3 object system",
    "section": "Types are not classes",
    "text": "Types are not classes\n\nx &lt;- as.factor(c(\"a\", \"b\", \"c\"))\nx\n\n[1] a b c\nLevels: a b c"
  },
  {
    "objectID": "s3-generics/slides.html#types-are-not-classes-2",
    "href": "s3-generics/slides.html#types-are-not-classes-2",
    "title": "S3 object system",
    "section": "Types are not classes",
    "text": "Types are not classes\n\nx &lt;- as.factor(c(\"a\", \"b\", \"c\"))\nclass(x)\n\n[1] \"factor\""
  },
  {
    "objectID": "s3-generics/slides.html#types-are-not-classes-3",
    "href": "s3-generics/slides.html#types-are-not-classes-3",
    "title": "S3 object system",
    "section": "Types are not classes",
    "text": "Types are not classes\n\nx &lt;- as.factor(c(\"a\", \"b\", \"c\"))\ntypeof(x)\n\n[1] \"integer\""
  },
  {
    "objectID": "s3-generics/slides.html#section-3",
    "href": "s3-generics/slides.html#section-3",
    "title": "S3 object system",
    "section": "",
    "text": "x &lt;- as.factor(c(\"a\", \"b\", \"c\"))\nclass(x)\n\n[1] \"factor\""
  },
  {
    "objectID": "s3-generics/slides.html#section-4",
    "href": "s3-generics/slides.html#section-4",
    "title": "S3 object system",
    "section": "",
    "text": "x &lt;- as.factor(c(\"a\", \"b\", \"c\"))\ntypeof(x)\n\n[1] \"integer\""
  },
  {
    "objectID": "s3-generics/slides.html#section-6",
    "href": "s3-generics/slides.html#section-6",
    "title": "S3 object system",
    "section": "",
    "text": "S3 is a programming system adopted by R from its predecessor S It is called s3 because it is from the third version of S\nObjects in R Common Base R types Atomic vectors On top of those are data.frames and matrix\nMatrix are just vectors they get their special behavior from two things: first their class and then attributes\nLet’s look at attributes first. Attributes are essentially metadata for any R object.\nView all attributes of objects with attributes() view a specific attribute with attr(x, “attr-name”)\nSet attributes with attr()"
  },
  {
    "objectID": "s3-generics/slides.html#section-7",
    "href": "s3-generics/slides.html#section-7",
    "title": "S3 object system",
    "section": ":::",
    "text": ":::\nS3 is a programming system adopted by R from its predecessor S It is called s3 because it is from the third version of S\nObjects in R Common Base R types Atomic vectors On top of those are data.frames and matrix\nMatrix are just vectors they get their special behavior from two things: first their class and then attributes\nLet’s look at attributes first. Attributes are essentially metadata for any R object.\nView all attributes of objects with attributes() view a specific attribute with attr(x, “attr-name”)\nSet attributes with attr() :::"
  },
  {
    "objectID": "s3-generics/slides.html#section-11",
    "href": "s3-generics/slides.html#section-11",
    "title": "S3 object system",
    "section": ":::",
    "text": ":::\nS3 is a programming system adopted by R from its predecessor S It is called s3 because it is from the third version of S\nObjects in R Common Base R types Atomic vectors On top of those are data.frames and matrix\nMatrix are just vectors they get their special behavior from two things: first their class and then attributes\nLet’s look at attributes first. Attributes are essentially metadata for any R object.\nView all attributes of objects with attributes() view a specific attribute with attr(x, “attr-name”)\nSet attributes with attr() :::"
  },
  {
    "objectID": "s3-generics/slides.html#section-12",
    "href": "s3-generics/slides.html#section-12",
    "title": "S3 object system",
    "section": "",
    "text": "S3 is a programming system adopted by R from its predecessor S It is called s3 because it is from the third version of S\nObjects in R Common Base R types Atomic vectors On top of those are data.frames and matrix\nMatrix are just vectors they get their special behavior from two things: first their class and then attributes\nLet’s look at attributes first. Attributes are essentially metadata for any R object.\nView all attributes of objects with attributes() view a specific attribute with attr(x, “attr-name”)\nSet attributes with attr()"
  },
  {
    "objectID": "s3-generics/slides.html#section-13",
    "href": "s3-generics/slides.html#section-13",
    "title": "S3 object system",
    "section": "",
    "text": "S3 is a programming system adopted by R from its predecessor S It is called s3 because it is from the third version of S\nObjects in R Common Base R types Atomic vectors On top of those are data.frames and matrix\nMatrix are just vectors they get their special behavior from two things: first their class and then attributes\nLet’s look at attributes first. Attributes are essentially metadata for any R object.\nView all attributes of objects with attributes() view a specific attribute with attr(x, “attr-name”)\nSet attributes with attr()"
  },
  {
    "objectID": "s3-generics/slides.html#lists",
    "href": "s3-generics/slides.html#lists",
    "title": "S3 object system",
    "section": "Lists",
    "text": "Lists\n\ncontain anything you want\ncontain other lists\nvector of pointers\n\npoint to other pieces of memory"
  },
  {
    "objectID": "s3-generics/slides.html#section-18",
    "href": "s3-generics/slides.html#section-18",
    "title": "S3 object system",
    "section": "",
    "text": "S3 is a programming system adopted by R from its predecessor S It is called s3 because it is from the third version of S\nObjects in R Common Base R types Atomic vectors On top of those are data.frames and matrix\nMatrix are just vectors they get their special behavior from two things: first their class and then attributes\nLet’s look at attributes first. Attributes are essentially metadata for any R object.\nView all attributes of objects with attributes() view a specific attribute with attr(x, “attr-name”)\nSet attributes with attr()"
  },
  {
    "objectID": "s3-generics/slides.html#section-26",
    "href": "s3-generics/slides.html#section-26",
    "title": "S3 object system",
    "section": "",
    "text": "S3 is a programming system adopted by R from its predecessor S It is called s3 because it is from the third version of S\nObjects in R Common Base R types Atomic vectors On top of those are data.frames and matrix\nMatrix are just vectors they get their special behavior from two things: first their class and then attributes\nLet’s look at attributes first. Attributes are essentially metadata for any R object.\nView all attributes of objects with attributes() view a specific attribute with attr(x, “attr-name”)\nSet attributes with attr()"
  },
  {
    "objectID": "s3-generics/slides.html#section-28",
    "href": "s3-generics/slides.html#section-28",
    "title": "S3 object system",
    "section": "",
    "text": "S3 is a programming system adopted by R from its predecessor S It is called s3 because it is from the third version of S\nObjects in R Common Base R types Atomic vectors On top of those are data.frames and matrix\nMatrix are just vectors they get their special behavior from two things: first their class and then attributes\nLet’s look at attributes first. Attributes are essentially metadata for any R object.\nView all attributes of objects with attributes() view a specific attribute with attr(x, “attr-name”)\nSet attributes with attr()"
  },
  {
    "objectID": "s3-generics/slides.html#section-29",
    "href": "s3-generics/slides.html#section-29",
    "title": "S3 object system",
    "section": "",
    "text": "S3 is a programming system adopted by R from its predecessor S It is called s3 because it is from the third version of S\nObjects in R Common Base R types Atomic vectors On top of those are data.frames and matrix\nMatrix are just vectors they get their special behavior from two things: first their class and then attributes\nLet’s look at attributes first. Attributes are essentially metadata for any R object.\nView all attributes of objects with attributes() view a specific attribute with attr(x, “attr-name”)\nSet attributes with attr()"
  },
  {
    "objectID": "s3-generics/slides.html#data.frames-are",
    "href": "s3-generics/slides.html#data.frames-are",
    "title": "S3 object system",
    "section": "data.frames are:",
    "text": "data.frames are:\n\nnamed lists\nwith named rows\neach list element must be the same length"
  },
  {
    "objectID": "s3-generics/slides.html#section-34",
    "href": "s3-generics/slides.html#section-34",
    "title": "S3 object system",
    "section": "",
    "text": "S3 is a programming system adopted by R from its predecessor S It is called s3 because it is from the third version of S\nObjects in R Common Base R types Atomic vectors On top of those are data.frames and matrix\nMatrix are just vectors they get their special behavior from two things: first their class and then attributes\nLet’s look at attributes first. Attributes are essentially metadata for any R object.\nView all attributes of objects with attributes() view a specific attribute with attr(x, “attr-name”)\nSet attributes with attr()"
  },
  {
    "objectID": "s3-generics/slides.html#review",
    "href": "s3-generics/slides.html#review",
    "title": "S3 object system",
    "section": "Review:",
    "text": "Review:\n\nall objects are vectors\natomic vectors and lists\nother objects are one of these with:\n\nclass attribute\nany other attributes"
  },
  {
    "objectID": "s3-generics/slides.html#section-35",
    "href": "s3-generics/slides.html#section-35",
    "title": "S3 object system",
    "section": "",
    "text": "S3 is a programming system adopted by R from its predecessor S It is called s3 because it is from the third version of S\nObjects in R Common Base R types Atomic vectors On top of those are data.frames and matrix\nMatrix are just vectors they get their special behavior from two things: first their class and then attributes\nLet’s look at attributes first. Attributes are essentially metadata for any R object.\nView all attributes of objects with attributes() view a specific attribute with attr(x, “attr-name”)\nSet attributes with attr()"
  },
  {
    "objectID": "s3-generics/slides.html#section-36",
    "href": "s3-generics/slides.html#section-36",
    "title": "S3 object system",
    "section": "",
    "text": "S3 is a programming system adopted by R from its predecessor S It is called s3 because it is from the third version of S\nObjects in R Common Base R types Atomic vectors On top of those are data.frames and matrix\nMatrix are just vectors they get their special behavior from two things: first their class and then attributes\nLet’s look at attributes first. Attributes are essentially metadata for any R object.\nView all attributes of objects with attributes() view a specific attribute with attr(x, “attr-name”)\nSet attributes with attr()"
  },
  {
    "objectID": "s3-generics/slides.html#section-37",
    "href": "s3-generics/slides.html#section-37",
    "title": "S3 object system",
    "section": "",
    "text": "S3 is a programming system adopted by R from its predecessor S It is called s3 because it is from the third version of S\nObjects in R Common Base R types Atomic vectors On top of those are data.frames and matrix\nMatrix are just vectors they get their special behavior from two things: first their class and then attributes\nLet’s look at attributes first. Attributes are essentially metadata for any R object.\nView all attributes of objects with attributes() view a specific attribute with attr(x, “attr-name”)\nSet attributes with attr()"
  }
]