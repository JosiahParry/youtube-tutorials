[
  {
    "objectID": "simple-features/script.html",
    "href": "simple-features/script.html",
    "title": "GIS fundamentals:",
    "section": "",
    "text": "Hey, fellow programmers and geospatial nerds. Josiah here. It’s been a while since my last video. The subject for this video is one a topic that feels so rudimentary, but is often skipped over. It’s a fundamental that folks like myself don’t truly learn until later in life. It’s got to do with vector data: points lines and polygons.\nI’ve been doing geospatial analysis in some way, shape, or form since 2014. Only recently have I felt I truly understood vector data. We’re going to walk through the simple feature standard from the Open Geospatial Consortium (OGC).\nLet’s think about all the different types of data we can gather about the world around us: locations of cities, roads, UFO sightings, rivers, houses, and quite literally anything that can be observed in the world around us (including things on other planets). All of this data can be represented by simple geometry features such as points, lines, and polygons. The Simple Feature Standard gives us a way to do that. The SF standard makes it easy to describe geometries in a consistent way using geometric primitives so that they can be understood no matter what programming language or software is being used."
  },
  {
    "objectID": "simple-features/script.html#simple-feature-standard",
    "href": "simple-features/script.html#simple-feature-standard",
    "title": "GIS fundamentals:",
    "section": "Simple Feature Standard",
    "text": "Simple Feature Standard\n\n“This standard enumerates the requirements for defining and representing geographic features in geographic information systems, applications and transmittable data formats.”\n\nThe simple feature standard (SF) defines how vector data is recorded and transmitted. Of course data need to be recorded and transmitted, but is a whole standard really necessary? What does it mean to be a standard and why are they important? Well, that gets to the core of why the OGC exists if you ask me.\n\n\nThere could, and maybe should, be a whole video dedicated to the OGC and the work that they do. I’ll provide links in the description and this will be available as a blog on my website.\nOGC standards formalize how something should be built, function, or behave. Because they are generally agreed upon and fairly exhaustive, they ensure that users can expect the same behavior regardless of what tool or language they may be using. Standards are critical for the open source community and commercial entities that rely upon open source. These standards define, in words, how software should behave.\nThe simple feature (SF) standard is broken up into two parts. The first defines the “common architecture” and the second defines how a SQL interface should interact with the simple features. We don’t care about SQL today. Only about the first part.\nWe’re going to get quite specific. So get ready for a journey."
  },
  {
    "objectID": "simple-features/script.html#geometric-primitives",
    "href": "simple-features/script.html#geometric-primitives",
    "title": "GIS fundamentals:",
    "section": "Geometric Primitives",
    "text": "Geometric Primitives\nEvery shape that we work with is composed of other geometric units. These other units are the smallest composible unit we work with. They are called geometric primitives. When working with points, lines, and polygons, there is only one primitive that we use. Points. Points are the building blocks of (almost) every single geometry that we work with.\n\n\nFor the whiz kids out there: I’m referring only to the common geometry objects Point, Line/LineString, Polygon and their Multi-types.\nPoint’s are defined by at least two values and up to four. The first two are the most important: the X and Y coordinates. A simple point looks like Point (X Y). Where X and Y are floating point numbers (they have decimals) representing the respective dimensions. Point have two other optional dimensions Z and M.\nZ is used for 3-dimensional data. It represents the altitude (height) of a point. For example, the peak of Mount Washington is located at Point (-71.3 44.3) but that ignores the height of the peak which is 6,289. If we wanted to record the elevation that might look like Point (-71.3 44.3 6289).\nThe M dimension is for a measurement. Mount Washington is known for being ridiculously cold. This year it broke it’s own previous record and clocked in a -108° F measurement. We can actually encode this into a single point measurement. Point (-71.3 44.3 6289 -108).\nThe Z and M measurements are exceptionally useful, but less common. Though they are seeing increased use as 3-dimensional data becomes more and more available. For the remainder we’ll only consider points in 2 dimensions."
  },
  {
    "objectID": "simple-features/script.html#geometry-objects",
    "href": "simple-features/script.html#geometry-objects",
    "title": "GIS fundamentals:",
    "section": "Geometry Objects",
    "text": "Geometry Objects\nFrom points we can create geometric objects. Geometric objects represent a single thing—like an intersection location, the path of a river, or the shape of a building. These are all represented by a single geometric objects.\nA Point is the most basic geometric object because it is also a geometric primitive.\n\nImage of a point (0, 0)\n\nTwo Points connect to make a Line.\n\nAnimates to connect a line (0, 0), (5, 0).\n\nA Line can only have two points. Whereas the LineString geometric object is defined by two or more points that create a path.\n\nAnimation of adding an additional point\n\n\n\n\n\n\n\nNote\n\n\n\n“A LineString is a Curve with linear interpolation between Points. Each consecutive pair of Points defines a Line segment.” - SFA Part 1: Common Architecture\n\n\n\n\nIt is interpolation and not approximation because the lines must pass through each point.\nLineString paths are defined as a sequence of Points. By adding an increasing number of Points, you can make LineStrings extremely detailed.\n\nAnimation of increasing the number of vertexes in a polygon from 3 to 100 to approximate a circle\n\nNotice how Points compose LineStrings. Likewise, polygons are composed by LineStrings—though not any old LineString. Polygons are closed shapes so they must be defined by a simple and closed line. Simple and closed LineStrings are called LinearRings.\n\nImage of simple vs non-simple linear ring\n\nLineStrings become closed by adding final closing Point at the starting point. So the starting and the closing point must be identical. There will always be one more point than there are vertexes in polygons.\n\nimage of closed LineString\n\nTo be “simple”, the line must not intersect (or cross) itself at any point. Think of the shape of a country’s border.\n\nImage of a countries border (bulgaria)\n\nThe shape of a polygon must define an enclosed space. The inside of the polygon is the area defined by the exterior ring. But get this: the order of the points in the exterior ring of a polygon matter! Just knowing all of the vertexes in a polygon is not enough. You must also know in which order they go.\n\npicture of creating a closed line by randomly shuffling the order of vertexes. Also going clockwise vs counter clockwise\n\nThe exterior ring of a polygon must record each vertex in counter clock-wise order.\n\n\nNote that this is the same rotation of the unit circle. Can anyone confirm if this is intentional?\n\n\n\n\n\n\nTip\n\n\n\nThis is called the winding order.\n\n\nHere’s another quirk. Polygons can also have holes inside of them. Think of a land parcel with a pond in it. Should the body of water be included? Sometimes. Sometimes not. For example if one was interested in only the land area it may be best to include it?\nPolygon holes also must be closed and simple LinearRings. But here’s the catch: they have a different winding order. Interior rings, or holes, are recorded with a clockwise winding.\n\nanimation of creating a polygon with CCW exterior ring and a CW interrior ring"
  },
  {
    "objectID": "simple-features/script.html#multiples",
    "href": "simple-features/script.html#multiples",
    "title": "GIS fundamentals:",
    "section": "Multiples",
    "text": "Multiples\nWe’ve now built up each of the major geometric objects from Points to Polygons and have seen how smaller units build into larger ones. This concept of making one geometry from another extends into the concept of a GeometryCollection.\nGeometryCollections collect multiple geometric objects of any type into one single entity. This alone can be very useful. Though the GeometryCollection actually has three subclasses that are a bit more restrictive.\nGeometryCollection subclasses start with the Multi- prefix indicating that it contains multiple objects. The Multi- geometry collections differ from the more general GeometryCollection in that they can contain only one type of geometric object. Each geometric object—Point, LineString, and Polygon—have a corresponding Multi type—MultiPoint, MultiLineString, and MultiPolygon respectively.\n\n\n\n\n\ngraph BT\n    A[GeometryCollection] \n    MP(MultiPoint) -->  A\n    ML(MultiLineString) --> A\n    MPLY(MultiPolygon) --> A\n    P(Point) --> MP\n    L(LineString) --> ML\n    PLY(Polygon) --> MPLY\n\n\n\n\n\n\n\n\nMultiPoint\nA MultiPoint, for example, is comprised of one ore more points. Say we have three points Point (0 0), Point (1 0), and Point (1 1). Each of these are considered to be a single feature.\n\n\n\n\n\n\nTip\n\n\n\nA feature refers to any “phenomena”, or thing, that exists in the real physical world.\n\n\nBut what if each of these points were related to each other? Perhaps each point indicates an emergency exit for a single building. It could be quite useful to track these exits as a single feature. Particularly when our data set may contain hundreds or thousands of building emergency exits. In this case we would represent the feature as a MultiPoint ((0 0), (1 0), (1 1)).\n\nanimation of 3 points being different colors switching to the same color. perhaps a label of Point() Point() Point() to MultiPoint((), (), ())\n\nMultiLineString\nMaybe geometry collections of LineStrings are more natural to think about. Road networks are a great example where MultiLineStrings can be made useful. Roads are classified into different categories. This is the road network of Grafton County, New Hampshire. Not all of these roads are the same type. Some of them are dirt roads that connect to people’s houses and farms. Others are larger two lane roads that act as main thoroughfares, and there are a few interstates interspersed as well.\n\n\n\n\n\nWhen we symbolize the road network based on the road type, the differences in type become more apparent.\n\n\n\n\n\nThere are few U.S. roads and interstates whereas the vast majority of the region is covered in “common name” roads. It may make sense to collect each of the road types into a single MultiLineString geometry collection. A MultiLineString, like the MultiPoint, is composed of many LineStrings into a single feature.\nMultiPolygon\nMultiPolygons may be the most common type of geometry collection subclass that we encounter naturally. A really common place where we see multiple polygons being part of the same feature is in political boundaries. Island nations are a really great example of this. Take the Philippines for example.\nThe Philippines is an archipelago of over 7,000 islands making up an entire nation. Each island is an enclosed polygon. But the collection of polygons is identified collectively as The Philippines.\n\n\n\n\n\n\nit would be nice to animate each of these to appear one at a time.\n\nCollecting all of these polygons into a single MultiPolygon is a natural decision given that it represents a single feature.\nGeometryCollection\nEach of these subtypes restrict the constituent geometry object types. The general GeometryCollection geometry object has no such limitation.\n\nA GeometryCollection is a geometric object that is a collection of some number of geometric objects.\n\nI think of GeometryCollections as a grab bag of miscellaneous geometry objects. And here’s a fun thing thing. Since GeometryCollections are geometry objects they can contain GeometryCollections which can contain another one so on forever and ever—if you ever found an actual use case for them.\nPersonally, I’ve never found such a use case, or really any uses for a GeometryCollection object other than some intermediate in an analysis.\n\n\nGEOMETRYCOLLECTION (POLYGON ((0 0, 7 0, 7 5, 0 5, 0 0)), LINESTRING (4 6, 6 5, 0 6, 2 8, 2 7), POINT (0 0))"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html",
    "href": "hot-spot-analysis/hot-spot-analysis.html",
    "title": "Hot Spot Analysis",
    "section": "",
    "text": "options(width = 78)"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#lisa-is-going-to-help-us",
    "href": "hot-spot-analysis/hot-spot-analysis.html#lisa-is-going-to-help-us",
    "title": "Hot Spot Analysis",
    "section": "LISA is going to help us",
    "text": "LISA is going to help us\n\nlocal indicators of spatial association (LISA)\ndecompose global statistics to the local level\nThe Local Moran’s I is the most famous"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#which-lisa-for-hot-spots",
    "href": "hot-spot-analysis/hot-spot-analysis.html#which-lisa-for-hot-spots",
    "title": "Hot Spot Analysis",
    "section": "Which LISA for hot spots?",
    "text": "Which LISA for hot spots?\n\nGetis-Ord Gi and Gi*\nLocal versions of the Getis-Ord Global G\n\n\n\nnote: the \\(i\\) subscript is a good hint that a measure is local"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#getis-ord-g",
    "href": "hot-spot-analysis/hot-spot-analysis.html#getis-ord-g",
    "title": "Hot Spot Analysis",
    "section": "Getis-Ord G",
    "text": "Getis-Ord G\n\nG informs of the presence of high-high or low-low clustering\n\n\n\\[\nG = \\frac{\\sum_{i = 1}^{n} \\sum_{j = 1}^{n} w_{ij}x_ix_j}{\\sum_{i = 1}^{n}\\sum_{j = 1}^{n} x_i x_j}\n\\]"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#local-getis-ord-g-g_i",
    "href": "hot-spot-analysis/hot-spot-analysis.html#local-getis-ord-g-g_i",
    "title": "Hot Spot Analysis",
    "section": "Local Getis-Ord G (\\(G_i\\))",
    "text": "Local Getis-Ord G (\\(G_i\\))\n\nMost global statistics are a double sum\n\nfirst over \\(j\\) and then \\(i\\)\n\n\\(G = \\frac{\\sum_{i = 1}^{n} \\sum_{j = 1}^{n} w_{ij}x_ix_j}{\\sum_{i = 1}^{n}\\sum_{j = 1}^{n} x_i x_j}\\)\nDecompose the G into a LISA\n\\(Gi = \\frac{\\sum_j w_{ij} x_j}{\\sum_j x_j}\\)"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#g_i",
    "href": "hot-spot-analysis/hot-spot-analysis.html#g_i",
    "title": "Hot Spot Analysis",
    "section": "\\(G_i\\)",
    "text": "\\(G_i\\)\n\nThe numerator is the spatial lag: \\(\\sum_j w_{ij} x_j\\)\nDenominator is the sum of all x values except \\(x_i\\): \\(\\sum_j x_j\\)\n\\(G_i = \\frac{\\sum_j w_{ij} x_j}{\\sum_j x_j}\\)\n\n\n\n“ratio of the weighted average of the values in the neighboring locations to the sum of all values, not including the value at the location” (GeodaCenter)\n\n\n\n\n\nnote: \\(G_i\\) is often returned as a Z-score"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#example",
    "href": "hot-spot-analysis/hot-spot-analysis.html#example",
    "title": "Hot Spot Analysis",
    "section": "Example",
    "text": "Example"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#example-1",
    "href": "hot-spot-analysis/hot-spot-analysis.html#example-1",
    "title": "Hot Spot Analysis",
    "section": "Example",
    "text": "Example"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#example-data",
    "href": "hot-spot-analysis/hot-spot-analysis.html#example-data",
    "title": "Hot Spot Analysis",
    "section": "Example data",
    "text": "Example data\n\n\nSimple feature collection with 49 features and 1 field\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 0 ymin: 0 xmax: 7 ymax: 7\nCRS:           NA\n# A tibble: 49 × 2\n       x                    geometry\n   <dbl>                   <POLYGON>\n 1 5.70  ((0 0, 1 0, 1 1, 0 1, 0 0))\n 2 4.71  ((1 0, 2 0, 2 1, 1 1, 1 0))\n 3 2.94  ((2 0, 3 0, 3 1, 2 1, 2 0))\n 4 1.87  ((3 0, 4 0, 4 1, 3 1, 3 0))\n 5 2.46  ((4 0, 5 0, 5 1, 4 1, 4 0))\n 6 2.00  ((5 0, 6 0, 6 1, 5 1, 5 0))\n 7 0.408 ((6 0, 7 0, 7 1, 6 1, 6 0))\n 8 3.96  ((0 1, 1 1, 1 2, 0 2, 0 1))\n 9 4.00  ((1 1, 2 1, 2 2, 1 2, 1 1))\n10 1.93  ((2 1, 3 1, 3 2, 2 2, 2 1))\n# … with 39 more rows\n# ℹ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#the-numerator",
    "href": "hot-spot-analysis/hot-spot-analysis.html#the-numerator",
    "title": "Hot Spot Analysis",
    "section": "The numerator",
    "text": "The numerator\n\ngrd_nb <- grd |> \n  mutate(\n    nb = st_contiguity(geometry),\n    wt = st_weights(nb),\n    x_lag = st_lag(x, nb, wt)\n  )"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#the-numerator-1",
    "href": "hot-spot-analysis/hot-spot-analysis.html#the-numerator-1",
    "title": "Hot Spot Analysis",
    "section": "The numerator",
    "text": "The numerator\n\n\nSimple feature collection with 49 features and 5 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 0 ymin: 0 xmax: 7 ymax: 7\nCRS:           NA\n# A tibble: 49 × 6\n                      geometry    id nb        wt            x x_lag\n *                   <POLYGON> <int> <nb>      <list>    <dbl> <dbl>\n 1 ((0 0, 1 0, 1 1, 0 1, 0 0))     1 <int [3]> <dbl [3]> 5.70  4.22 \n 2 ((1 0, 2 0, 2 1, 1 1, 1 0))     2 <int [5]> <dbl [5]> 4.71  3.71 \n 3 ((2 0, 3 0, 3 1, 2 1, 2 0))     3 <int [5]> <dbl [5]> 2.94  3.14 \n 4 ((3 0, 4 0, 4 1, 3 1, 3 0))     4 <int [5]> <dbl [5]> 1.87  2.51 \n 5 ((4 0, 5 0, 5 1, 4 1, 4 0))     5 <int [5]> <dbl [5]> 2.46  1.82 \n 6 ((5 0, 6 0, 6 1, 5 1, 5 0))     6 <int [5]> <dbl [5]> 2.00  1.07 \n 7 ((6 0, 7 0, 7 1, 6 1, 6 0))     7 <int [3]> <dbl [3]> 0.408 0.807\n 8 ((0 1, 1 1, 1 2, 0 2, 0 1))     8 <int [5]> <dbl [5]> 3.96  3.74 \n 9 ((1 1, 2 1, 2 2, 1 2, 1 1))     9 <int [8]> <dbl [8]> 4.00  3.17 \n10 ((2 1, 3 1, 3 2, 2 2, 2 1))    10 <int [8]> <dbl [8]> 1.93  2.84 \n# … with 39 more rows\n# ℹ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#the-numerator-2",
    "href": "hot-spot-analysis/hot-spot-analysis.html#the-numerator-2",
    "title": "Hot Spot Analysis",
    "section": "The numerator",
    "text": "The numerator"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#the-denominator",
    "href": "hot-spot-analysis/hot-spot-analysis.html#the-denominator",
    "title": "Hot Spot Analysis",
    "section": "The denominator",
    "text": "The denominator\n\nthe of sum of all x values\nOR, spatial lag of a complete graph w/ binary weights\n\nst_weights(nb, style = \"B\")\n\nComplete graph: all locations are connected\n\nst_complete_nb(n, diag = FALSE)"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#the-denominator-1",
    "href": "hot-spot-analysis/hot-spot-analysis.html#the-denominator-1",
    "title": "Hot Spot Analysis",
    "section": "The denominator",
    "text": "The denominator\n\n\ncomplete_nb <- st_complete_nb(n = nrow(grd), diag = FALSE)\ncomplete_nb[[1]]\n\n [1]  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n[25] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49\n\n\n\n\n\ndenom <- st_lag(\n  grd_nb$x, \n  complete_nb, \n  st_weights(complete_nb, style = \"B\")\n)\n\ndenom\n\n [1] 92.63630 93.63145 95.40112 96.47070 95.87481 96.33858 97.92817 94.37887\n [9] 94.33532 96.40508 95.16384 96.29836 98.33663 97.91501 95.98179 96.41519\n[17] 96.48203 96.05971 96.01014 98.07216 97.06022 96.37010 96.43836 96.18403\n[25] 98.30599 98.08788 96.49048 95.93543 96.36399 95.82990 96.31504 97.17146\n[33] 96.65137 95.37411 95.97823 97.14021 97.39183 97.05320 95.40683 94.90385\n[41] 96.22288 95.82727 96.27249 96.75152 97.76805 95.96140 97.15449 96.76554\n[49] 96.84677"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#the-denominator-2",
    "href": "hot-spot-analysis/hot-spot-analysis.html#the-denominator-2",
    "title": "Hot Spot Analysis",
    "section": "The denominator",
    "text": "The denominator\n\ngrd_nb |> \n  mutate(\n    complete_nb = st_complete_nb(n()),\n    wt_b = st_weights(complete_nb, style = \"B\"),\n    sum_xj = st_lag(x, complete_nb, wt_b)\n  ) |> \n  select(x, x_lag, sum_xj)\n\n\n\n\nSimple feature collection with 49 features and 3 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 0 ymin: 0 xmax: 7 ymax: 7\nCRS:           NA\n# A tibble: 49 × 4\n       x x_lag sum_xj                    geometry\n   <dbl> <dbl>  <dbl>                   <POLYGON>\n 1 5.70  4.22    92.6 ((0 0, 1 0, 1 1, 0 1, 0 0))\n 2 4.71  3.71    93.6 ((1 0, 2 0, 2 1, 1 1, 1 0))\n 3 2.94  3.14    95.4 ((2 0, 3 0, 3 1, 2 1, 2 0))\n 4 1.87  2.51    96.5 ((3 0, 4 0, 4 1, 3 1, 3 0))\n 5 2.46  1.82    95.9 ((4 0, 5 0, 5 1, 4 1, 4 0))\n 6 2.00  1.07    96.3 ((5 0, 6 0, 6 1, 5 1, 5 0))\n 7 0.408 0.807   97.9 ((6 0, 7 0, 7 1, 6 1, 6 0))\n 8 3.96  3.74    94.4 ((0 1, 1 1, 1 2, 0 2, 0 1))\n 9 4.00  3.17    94.3 ((1 1, 2 1, 2 2, 1 2, 1 1))\n10 1.93  2.84    96.4 ((2 1, 3 1, 3 2, 2 2, 2 1))\n# … with 39 more rows\n# ℹ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#g_i-1",
    "href": "hot-spot-analysis/hot-spot-analysis.html#g_i-1",
    "title": "Hot Spot Analysis",
    "section": "\\(G_i\\)",
    "text": "\\(G_i\\)\n\ngrd_nb |> \n  mutate(\n    complete_nb = st_complete_nb(n()),\n    wt_b = st_weights(complete_nb, style = \"B\"),\n    sum_xj = st_lag(x, complete_nb, wt_b),\n    gi = scale(x_lag / sum_xj)\n  ) |> \n  select(x, x_lag, sum_xj, gi)\n\nSimple feature collection with 49 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 0 ymin: 0 xmax: 7 ymax: 7\nCRS:           NA\n# A tibble: 49 × 5\n       x x_lag sum_xj gi[,1]                    geometry\n   <dbl> <dbl>  <dbl>  <dbl>                   <POLYGON>\n 1 5.70  4.22    92.6  3.22  ((0 0, 1 0, 1 1, 0 1, 0 0))\n 2 4.71  3.71    93.6  2.44  ((1 0, 2 0, 2 1, 1 1, 1 0))\n 3 2.94  3.14    95.4  1.57  ((2 0, 3 0, 3 1, 2 1, 2 0))\n 4 1.87  2.51    96.5  0.681 ((3 0, 4 0, 4 1, 3 1, 3 0))\n 5 2.46  1.82    95.9 -0.235 ((4 0, 5 0, 5 1, 4 1, 4 0))\n 6 2.00  1.07    96.3 -1.25  ((5 0, 6 0, 6 1, 5 1, 5 0))\n 7 0.408 0.807   97.9 -1.62  ((6 0, 7 0, 7 1, 6 1, 6 0))\n 8 3.96  3.74    94.4  2.44  ((0 1, 1 1, 1 2, 0 2, 0 1))\n 9 4.00  3.17    94.3  1.67  ((1 1, 2 1, 2 2, 1 2, 1 1))\n10 1.93  2.84    96.4  1.13  ((2 1, 3 1, 3 2, 2 2, 2 1))\n# … with 39 more rows\n# ℹ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#g_i-vs-g_i",
    "href": "hot-spot-analysis/hot-spot-analysis.html#g_i-vs-g_i",
    "title": "Hot Spot Analysis",
    "section": "\\(G_i\\) vs \\(G_i^*\\)",
    "text": "\\(G_i\\) vs \\(G_i^*\\)\n\nThe only difference is in neighbor matrix\n\\(G_i^*\\) includes the observation \\(i\\) in the calculation\n\\(G_i\\) does not\noften rewritten as \\(G_i = \\frac{\\sum_{j\\ne i} w_{ij} x_j}{\\sum_{j \\ne i} x_j}\\)\nI don’t like this because they’re the same except the nb list"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#g_i-2",
    "href": "hot-spot-analysis/hot-spot-analysis.html#g_i-2",
    "title": "Hot Spot Analysis",
    "section": "\\(G_i^*\\)",
    "text": "\\(G_i^*\\)\n\nincludes the observed value (focal observation)\nuse include_self(nb)"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#g_i-3",
    "href": "hot-spot-analysis/hot-spot-analysis.html#g_i-3",
    "title": "Hot Spot Analysis",
    "section": "\\(G_i^*\\)",
    "text": "\\(G_i^*\\)\n\ngrd |> \n  transmute(\n    nb = include_self(st_contiguity(geometry)), # include the self \n    wt = st_weights(nb), \n    x_lag = st_lag(x, nb, wt), \n    # now we can sum all of x \n    denom = sum(x),\n    gi = scale(x_lag / denom)\n  )\n\nSimple feature collection with 49 features and 5 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 0 ymin: 0 xmax: 7 ymax: 7\nCRS:           NA\n# A tibble: 49 × 6\n   nb        wt        x_lag denom  gi[,1]                    geometry\n * <nb>      <list>    <dbl> <dbl>   <dbl>                   <POLYGON>\n 1 <int [4]> <dbl [4]> 4.59   98.3  3.46   ((0 0, 1 0, 1 1, 0 1, 0 0))\n 2 <int [6]> <dbl [6]> 3.87   98.3  2.50   ((1 0, 2 0, 2 1, 1 1, 1 0))\n 3 <int [6]> <dbl [6]> 3.10   98.3  1.47   ((2 0, 3 0, 3 1, 2 1, 2 0))\n 4 <int [6]> <dbl [6]> 2.40   98.3  0.539  ((3 0, 4 0, 4 1, 3 1, 3 0))\n 5 <int [6]> <dbl [6]> 1.92   98.3 -0.0988 ((4 0, 5 0, 5 1, 4 1, 4 0))\n 6 <int [6]> <dbl [6]> 1.22   98.3 -1.03   ((5 0, 6 0, 6 1, 5 1, 5 0))\n 7 <int [4]> <dbl [4]> 0.707  98.3 -1.72   ((6 0, 7 0, 7 1, 6 1, 6 0))\n 8 <int [6]> <dbl [6]> 3.77   98.3  2.37   ((0 1, 1 1, 1 2, 0 2, 0 1))\n 9 <int [9]> <dbl [9]> 3.26   98.3  1.69   ((1 1, 2 1, 2 2, 1 2, 1 1))\n10 <int [9]> <dbl [9]> 2.74   98.3  0.992  ((2 1, 3 1, 3 2, 2 2, 2 1))\n# … with 39 more rows\n# ℹ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#g_i-g_i-interpretation",
    "href": "hot-spot-analysis/hot-spot-analysis.html#g_i-g_i-interpretation",
    "title": "Hot Spot Analysis",
    "section": "\\(G_i\\) / \\(G_i^*\\) interpretation",
    "text": "\\(G_i\\) / \\(G_i^*\\) interpretation\n\nHigh \\(G_i\\) > 0: location with high value neighborhood\nLow \\(G_i\\) < 0: location with low value neighborhood"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#hypothesis-testing",
    "href": "hot-spot-analysis/hot-spot-analysis.html#hypothesis-testing",
    "title": "Hot Spot Analysis",
    "section": "Hypothesis testing",
    "text": "Hypothesis testing\n\n\\(H_0\\) - observed value is not spatially dependent\n\\(H_1\\) - observed value is spatially dependent\n\\(H_0\\) - we would expect to find this value under complete spatial randomness (CSR)\n\\(H_1\\) - we would not expect to find this value under CSR"
  },
  {
    "objectID": "hot-spot-analysis/hot-spot-analysis.html#resources",
    "href": "hot-spot-analysis/hot-spot-analysis.html#resources",
    "title": "Hot Spot Analysis",
    "section": "resources:",
    "text": "resources:\n\nhttps://geodacenter.github.io/workbook/6a_local_auto/lab6a.html"
  },
  {
    "objectID": "hot-spot-analysis/code-through-ending.html",
    "href": "hot-spot-analysis/code-through-ending.html",
    "title": "Hot Spot Analysis Recap",
    "section": "",
    "text": "Create neighbors\nCreate weights\nCalculate measure\n\nreturns data.frame\n\nunnest results\nvisualize"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#the-spatial-lag",
    "href": "spatial-lag/spatial-lag.html#the-spatial-lag",
    "title": "spatial analysis",
    "section": "The Spatial Lag",
    "text": "The Spatial Lag\n\nThe weighted average of a variable in a neighborhood\n\n\\[Wy_i = \\sum_{j = 1}^{n} W_{ij} * yj\\]\n\nit’s a formula which is tough lets break it down"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#ij",
    "href": "spatial-lag/spatial-lag.html#ij",
    "title": "spatial analysis",
    "section": "\\(ij\\)",
    "text": "\\(ij\\)\n\n\n\\(i\\) is the observed element of a vector (black)\n\\(j\\) is that element’s neighbors in space (white)\n\\(ij\\) the neighbors of element \\(i\\)"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#ij-1",
    "href": "spatial-lag/spatial-lag.html#ij-1",
    "title": "spatial analysis",
    "section": "\\(ij\\)",
    "text": "\\(ij\\)"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#yi",
    "href": "spatial-lag/spatial-lag.html#yi",
    "title": "spatial analysis",
    "section": "\\(yi\\)",
    "text": "\\(yi\\)\n\n\\(yi\\) is the observed value at each location"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#w_ij",
    "href": "spatial-lag/spatial-lag.html#w_ij",
    "title": "spatial analysis",
    "section": "\\(W_{ij}\\)",
    "text": "\\(W_{ij}\\)\n\n\nThe spatial weights\nFor simplicity: row standardized weights\n\\(1 \\div card(i)\\)\n\ncardinality is the number of neighbors\n\n8 neighbors\n\n\n\n\n\n\nCode\ncardi <- 8\nwij <- rep(1, cardi) / cardi\n\nwij\n#> c(0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125)"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#sum_j-1n-w_ij-yj",
    "href": "spatial-lag/spatial-lag.html#sum_j-1n-w_ij-yj",
    "title": "spatial analysis",
    "section": "\\(\\sum_{j = 1}^{n} W_{ij} * yj\\)",
    "text": "\\(\\sum_{j = 1}^{n} W_{ij} * yj\\)\n\nvalues <- c(8.4, 15.5, 6.9, 11.5, 3, 26.8, 5.2, 0.9, 7.9)\n\n# neighbor index\nnbs <- c(1:4, 6:9)\n\n# create neighbor values\nyj <- values[nbs]\n\n# multiply each element\nwij * yj\n\n[1] 1.0500 1.9375 0.8625 1.4375 3.3500 0.6500 0.1125 0.9875\n\n\n\n# the spatial lag\nsum(wij * yj)\n\n[1] 10.3875"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#observed-vs.-lagged",
    "href": "spatial-lag/spatial-lag.html#observed-vs.-lagged",
    "title": "spatial analysis",
    "section": "Observed vs. Lagged",
    "text": "Observed vs. Lagged"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#understanding-the-lag",
    "href": "spatial-lag/spatial-lag.html#understanding-the-lag",
    "title": "spatial analysis",
    "section": "Understanding the lag",
    "text": "Understanding the lag\n\nit is the average value of the neighborhood\n“expected value” of the neighborhood\nsummarizes values of \\(x\\) for an observation \\(i\\)’s neighborhood"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#identifying-neighbors",
    "href": "spatial-lag/spatial-lag.html#identifying-neighbors",
    "title": "spatial analysis",
    "section": "Identifying Neighbors",
    "text": "Identifying Neighbors\n\nsimplest way using st_contiguity()\nrequires sf or sfc object\nQueen contiguity by default\n\nshared sides and corners\n\n\n\n\ndata(guerry, package = \"sfdep\")\n\nnb <- st_contiguity(guerry)\nnb\n\nNeighbour list object:\nNumber of regions: 85 \nNumber of nonzero links: 420 \nPercentage nonzero weights: 5.813149 \nAverage number of links: 4.941176"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#nb-class-objects",
    "href": "spatial-lag/spatial-lag.html#nb-class-objects",
    "title": "spatial analysis",
    "section": "nb class objects",
    "text": "nb class objects\n\nnb class from spdep\n\n\n\nattributes(nb)\n\n$class\n[1] \"nb\"   \"list\"\n\n$region.id\n [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\" \"13\" \"14\" \"15\"\n[16] \"16\" \"17\" \"18\" \"19\" \"20\" \"21\" \"22\" \"23\" \"24\" \"25\" \"26\" \"27\" \"28\" \"29\" \"30\"\n[31] \"31\" \"32\" \"33\" \"34\" \"35\" \"36\" \"37\" \"38\" \"39\" \"40\" \"41\" \"42\" \"43\" \"44\" \"45\"\n[46] \"46\" \"47\" \"48\" \"49\" \"50\" \"51\" \"52\" \"53\" \"54\" \"55\" \"56\" \"57\" \"58\" \"59\" \"60\"\n[61] \"61\" \"62\" \"63\" \"64\" \"65\" \"66\" \"67\" \"68\" \"69\" \"70\" \"71\" \"72\" \"73\" \"74\" \"75\"\n[76] \"76\" \"77\" \"78\" \"79\" \"80\" \"81\" \"82\" \"83\" \"84\" \"85\"\n\n$call\nspdep::poly2nb(pl = x, queen = queen)\n\n$type\n[1] \"queen\"\n\n$sym\n[1] TRUE"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#nb-class-objects-1",
    "href": "spatial-lag/spatial-lag.html#nb-class-objects-1",
    "title": "spatial analysis",
    "section": "nb class objects",
    "text": "nb class objects\n\nsparse matrix (list) of neighbors\neach element is an integer vector\nelements are row position of neighbor\n\n\n\nnb[1:3]\n\n[[1]]\n[1] 36 37 67 69\n\n[[2]]\n[1]  7 49 57 58 73 76\n\n[[3]]\n[1] 17 21 40 56 61 69"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#spatial-weights",
    "href": "spatial-lag/spatial-lag.html#spatial-weights",
    "title": "spatial analysis",
    "section": "spatial weights",
    "text": "spatial weights\n\nst_weights(nb)\nrow standardized by default\nreturns list\neach element is numeric vector with same cardinality as the neighbor list\n\ncontains the weight for the corresponding element in the nb list\nnote: cardinality is the number of neighbors"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#spatial-weights-1",
    "href": "spatial-lag/spatial-lag.html#spatial-weights-1",
    "title": "spatial analysis",
    "section": "spatial weights",
    "text": "spatial weights\n\nwt <- st_weights(nb)\n\nwt[1:3]\n\n[[1]]\n[1] 0.25 0.25 0.25 0.25\n\n[[2]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[3]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#spatial-lag",
    "href": "spatial-lag/spatial-lag.html#spatial-lag",
    "title": "spatial analysis",
    "section": "spatial lag",
    "text": "spatial lag\n\nuse st_lag(x, nb, wt)\n\n\nx <- guerry$crime_pers\n\nst_lag(x, nb, wt)\n\n [1] 23047.50 26919.67 26195.50 14401.25 15038.67 15749.00 22111.67 13672.33\n [9] 22859.20 11475.20 12200.14 13278.67 24734.00 11752.83 17992.60 21974.40\n[17] 26711.00 19344.00 23696.71 25108.67 21643.17 18306.00 24280.00 14451.60\n[25] 21047.67 21421.33 25961.50 10869.83 13415.67 17172.17 20238.25 12504.25\n[33] 26723.00 21772.83 26462.20 19252.00 24683.20 20607.25 24412.00 19373.71\n[41] 16000.20 23993.25 20337.86 16818.67 17113.83 13013.00 22133.00 24093.75\n[49] 25661.67 22190.17 29030.00 16951.00 24509.00 24982.75 19491.50 24176.00\n[57] 27639.67 21274.33 24510.33 30166.00 23459.00 16184.00 18002.00 10910.00\n[65] 16251.25 15572.00 25884.25 23020.60 26495.00 24690.50 17339.00 25522.33\n[73] 18970.00 19701.83 21841.00 24520.40 14025.80 14565.17 13306.67 12579.00\n[81] 21529.50 23474.50 24373.17 19900.50 23373.60"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#spatial-lag-1",
    "href": "spatial-lag/spatial-lag.html#spatial-lag-1",
    "title": "spatial analysis",
    "section": "spatial lag",
    "text": "spatial lag\n\ncalculate by hand using lists\n\n\nij <- nb[[1]]\nwij <- wt[[1]]\nxij <- x[ij]\n\nxij * wij\n\n[1] 4696.25 6555.25 4698.25 7097.75\n\nsum(xij * wij)\n\n[1] 23047.5"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#guerry",
    "href": "spatial-lag/spatial-lag.html#guerry",
    "title": "spatial analysis",
    "section": "Guerry",
    "text": "Guerry\n\ndplyr::glimpse(guerry)\n\nRows: 85\nColumns: 27\n$ code_dept       <fct> 01, 02, 03, 04, 05, 07, 08, 09, 10…\n$ count           <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ ave_id_geo      <dbl> 49, 812, 1418, 1603, 1802, 2249, 3…\n$ dept            <int> 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12…\n$ region          <fct> E, N, C, E, E, S, N, S, E, S, S, S…\n$ department      <fct> Ain, Aisne, Allier, Basses-Alpes, …\n$ crime_pers      <int> 28870, 26226, 26747, 12935, 17488,…\n$ crime_prop      <int> 15890, 5521, 7925, 7289, 8174, 102…\n$ literacy        <int> 37, 51, 13, 46, 69, 27, 67, 18, 59…\n$ donations       <int> 5098, 8901, 10973, 2733, 6962, 318…\n$ infants         <int> 33120, 14572, 17044, 23018, 23076,…\n$ suicides        <int> 35039, 12831, 114121, 14238, 16171…\n$ main_city       <ord> 2:Med, 2:Med, 2:Med, 1:Sm, 1:Sm, 1…\n$ wealth          <int> 73, 22, 61, 76, 83, 84, 33, 72, 14…\n$ commerce        <int> 58, 10, 66, 49, 65, 1, 4, 60, 3, 3…\n$ clergy          <int> 11, 82, 68, 5, 10, 28, 50, 39, 42,…\n$ crime_parents   <int> 71, 4, 46, 70, 22, 76, 53, 74, 77,…\n$ infanticide     <int> 60, 82, 42, 12, 23, 47, 85, 28, 54…\n$ donation_clergy <int> 69, 36, 76, 37, 64, 67, 49, 63, 9,…\n$ lottery         <int> 41, 38, 66, 80, 79, 70, 31, 75, 28…\n$ desertion       <int> 55, 82, 16, 32, 35, 19, 62, 22, 86…\n$ instruction     <int> 46, 24, 85, 29, 7, 62, 9, 77, 15, …\n$ prostitutes     <int> 13, 327, 34, 2, 1, 1, 83, 3, 207, …\n$ distance        <dbl> 218.372, 65.945, 161.927, 351.399,…\n$ area            <int> 5762, 7369, 7340, 6925, 5549, 5529…\n$ pop1831         <dbl> 346.03, 513.00, 298.26, 155.90, 12…\n$ geometry        <MULTIPOLYGON> MULTIPOLYGON (((801150 20…"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#in-one-fell-swoop",
    "href": "spatial-lag/spatial-lag.html#in-one-fell-swoop",
    "title": "spatial analysis",
    "section": "In one fell swoop",
    "text": "In one fell swoop\n\nguerry |> \n  transmute(\n    nb = st_contiguity(geometry),\n    wt = st_weights(nb),\n    crime_lag = st_lag(crime_pers, nb, wt)\n  )\n\nSimple feature collection with 85 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 47680 ymin: 1703258 xmax: 1031401 ymax: 2677441\nCRS:           NA\n# A tibble: 85 × 4\n   nb        wt        crime_lag                    geometry\n * <nb>      <list>        <dbl>              <MULTIPOLYGON>\n 1 <int [4]> <dbl [4]>    23048. (((801150 2092615, 800669 …\n 2 <int [6]> <dbl [6]>    26920. (((729326 2521619, 729320 …\n 3 <int [6]> <dbl [6]>    26195. (((710830 2137350, 711746 …\n 4 <int [4]> <dbl [4]>    14401. (((882701 1920024, 882408 …\n 5 <int [3]> <dbl [3]>    15039. (((886504 1922890, 885733 …\n 6 <int [7]> <dbl [7]>    15749  (((747008 1925789, 746630 …\n 7 <int [3]> <dbl [3]>    22112. (((818893 2514767, 818614 …\n 8 <int [3]> <dbl [3]>    13672. (((509103 1747787, 508820 …\n 9 <int [5]> <dbl [5]>    22859. (((775400 2345600, 775068 …\n10 <int [5]> <dbl [5]>    11475. (((626230 1810121, 626269 …\n# … with 75 more rows\n# ℹ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "spatial-lag/spatial-lag.html#lets-make-something-shall-we",
    "href": "spatial-lag/spatial-lag.html#lets-make-something-shall-we",
    "title": "spatial analysis",
    "section": "Let’s make something, shall we?",
    "text": "Let’s make something, shall we?"
  },
  {
    "objectID": "writing-functions-shorts/functions-intermediate.html",
    "href": "writing-functions-shorts/functions-intermediate.html",
    "title": "functions-intermediate",
    "section": "",
    "text": "dots ...\ns3 methods\nside-effects"
  },
  {
    "objectID": "writing-functions-shorts/understanding-functions.html#functions-rock-because",
    "href": "writing-functions-shorts/understanding-functions.html#functions-rock-because",
    "title": "understanding functions",
    "section": "functions rock because…",
    "text": "functions rock because…\n\nrepeating code is easy\neasier to read\nmakes your code simpler\n(somewhat) easy to share"
  },
  {
    "objectID": "writing-functions-shorts/understanding-functions.html#function-arguments-1",
    "href": "writing-functions-shorts/understanding-functions.html#function-arguments-1",
    "title": "understanding functions",
    "section": "function arguments",
    "text": "function arguments\n\nadd <- function(x, y) {\n  x + y \n}\n\nadd(10, 2)\n\n[1] 12"
  },
  {
    "objectID": "writing-functions-shorts/understanding-functions.html#functions",
    "href": "writing-functions-shorts/understanding-functions.html#functions",
    "title": "understanding functions",
    "section": "functions:",
    "text": "functions:\n\nare objects\nthat take inputs (arguments)\nreturn an output\ncontain valid R code"
  },
  {
    "objectID": "writing-functions-shorts/understanding-functions.html#make-good-functions-by",
    "href": "writing-functions-shorts/understanding-functions.html#make-good-functions-by",
    "title": "understanding functions",
    "section": "make good functions by:",
    "text": "make good functions by:\n\nhandle missing arguments\nexiting the function early\nchecking types"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#for-loops",
    "href": "getting-away-with-for-loops/index.html#for-loops",
    "title": "for loops in R",
    "section": "for loops",
    "text": "for loops\n\na way to repeat code a set number of times\nextremely common in every other programming language\n\n\nfor loops are a way to repeat a piece of code a set number of times they’re very common in other programming languages. but in R they’re not always recommended and for reasons we’ll get into"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#for-loops-1",
    "href": "getting-away-with-for-loops/index.html#for-loops-1",
    "title": "for loops in R",
    "section": "for loops",
    "text": "for loops\n\nstart by defining a loop with for keyword\n\n\n# what you are iterating through\nfor () {\n}\n\nto write a for loop we start by declaring it with the keyword for the parenthesis will be used to definie what we’re iterating through and the brackets are going to contain the code that will be repeated"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#for-loops-2",
    "href": "getting-away-with-for-loops/index.html#for-loops-2",
    "title": "for loops in R",
    "section": "for loops",
    "text": "for loops\n\niterate through an index\n\n\n# what you are iterating through\nfor (i in 1:length(x)) {\n}\n\nthere are two common ways we can iterate. the first is to iterate through a sequence of indexes in this loop the value i will take the value from 1, 2, 3, and so on until we reach the length of x meaning if there are 10 values in x i will take on the value 1, 2, 3, 4, 5, 6, 7, 8, 9, and 100"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#for-loops-3",
    "href": "getting-away-with-for-loops/index.html#for-loops-3",
    "title": "for loops in R",
    "section": "for loops",
    "text": "for loops\n\niterate through values\n\n\n# what you are iterating through\nfor (val in x) {\n}\n\nalternatively, we can iterate through each value in x. at each iteration the placeholder val will take on that value of x so, the first iteration val will have the first value of x the second will have the second value of x, and so on"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#for-loops-4",
    "href": "getting-away-with-for-loops/index.html#for-loops-4",
    "title": "for loops in R",
    "section": "for loops",
    "text": "for loops\n\nindexes are used to subset typically\n\n\n\n\n\n\nmost helpful for subsetting multiple things\n\n\ni like using the i in … format. this is clearest to me. and it’s often used for subsetting objects at each step in the for loop"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#for-loops-5",
    "href": "getting-away-with-for-loops/index.html#for-loops-5",
    "title": "for loops in R",
    "section": "for loops",
    "text": "for loops\n\nor use values directly\n\n\nfor (val in x) {\n  \n  result <- fx(val) |>\n    do_another_thing()\n    \n}\n\ntaking the values at each iteration is useful when you have only one object you’re iterating through and you do not need to keep track of the iteration number"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#humans-are-fallible",
    "href": "getting-away-with-for-loops/index.html#humans-are-fallible",
    "title": "for loops in R",
    "section": "humans are fallible",
    "text": "humans are fallible\n\n\n\nhttps://xkcd.com/1739/\n\nThere are some really valid and good reasons why for loops don’t get all that much love. Often, for loops are pretty slow. And I think it mostly boils down to us asking too much of them. And, that’s our fault."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#section-4",
    "href": "getting-away-with-for-loops/index.html#section-4",
    "title": "for loops in R",
    "section": "",
    "text": "Botticelli’s illustration of Dante’s Divine Comedy (1481)\n\nWhat are we doing wrong when we write for loops? For loops pained Patrick Burns so much that he dedicated a special place in hell for them. Two places actually. The second and third circles of hell can be traced back to for loops."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#walk-with-me-through-hell",
    "href": "getting-away-with-for-loops/index.html#walk-with-me-through-hell",
    "title": "for loops in R",
    "section": "Walk with me through hell",
    "text": "Walk with me through hell\n\n\n\nWalk with me in hell for a moment, will you?"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#section-5",
    "href": "getting-away-with-for-loops/index.html#section-5",
    "title": "for loops in R",
    "section": "",
    "text": "The R Inferno - Patrick Burns\nhttps://www.burns-stat.com/pages/Tutor/R_inferno.pdf\n\nR is pretty good at a lot of things. Most cases of bad for loops are because you tried to do something that R can do better. You most likely did something each time in a loop that can be done only once with a vectorized function. Vectorize functions?? Well, I’m so glad you asked."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#the-powerhouse-of-r",
    "href": "getting-away-with-for-loops/index.html#the-powerhouse-of-r",
    "title": "for loops in R",
    "section": "the powerhouse of R",
    "text": "the powerhouse of R\n\nLike the mitochondria is the powerhouse of the cell. Vectors are the power house of R"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#vectors-1",
    "href": "getting-away-with-for-loops/index.html#vectors-1",
    "title": "for loops in R",
    "section": "vectors",
    "text": "vectors\n\nthe basic unit in R\natomic and lists\n4 main types of atomic vectors"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#vectors-2",
    "href": "getting-away-with-for-loops/index.html#vectors-2",
    "title": "for loops in R",
    "section": "vectors",
    "text": "vectors\n\n\nChapter 3, Vectors (Advanced R, Hadley Wickham)\nhttps://adv-r.hadley.nz/vectors-chap.html\n\nthe basic unit in R is the vector there are two types. atomic and lists atomic vectors are what we think of when we say vector there are 4 main types of them logical, integer, double, and character (or string)"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#vectors-3",
    "href": "getting-away-with-for-loops/index.html#vectors-3",
    "title": "for loops in R",
    "section": "vectors",
    "text": "vectors\n\nare composed of elements\nelements are of the same type\ncreated with c()\nc(TRUE, FALSE, NA)\n\n3 elements\n\n\n\nAtomic vectors store only one type of data at a time and are created with c(). Every vector is composed of n elements. this is a logical vector with 3 elements."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#circle-3",
    "href": "getting-away-with-for-loops/index.html#circle-3",
    "title": "for loops in R",
    "section": "Circle 3",
    "text": "Circle 3\n\nfind sum of the natural log of x\n\n\n\n\n\n\nx <- runif(10)\n\nlsum <- 0\n\nfor (i in 1:length(x)) {\n  lsum <- lsum + log(x[i])\n}\n\nlsum\n\n[1] -5.71996\n\n\n\nLet’s take the example straight out of the book!\nThe objective? Take the natural logarithm of each element and then add them all up.\nCalculates the log of \\(x_i\\) and adds it the the lsum object which grows until the list ends."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#vectorized-solution",
    "href": "getting-away-with-for-loops/index.html#vectorized-solution",
    "title": "for loops in R",
    "section": "vectorized solution",
    "text": "vectorized solution\n\n\nsum(log(x))\n\n\nlog() applied to each element\n\n\n\n\nlog(x)\n\n [1] -0.10903704 -1.32610781 -0.98852842 -0.55712551 -0.09628208 -1.60106342\n [7] -0.10715136 -0.05691404 -0.41430740 -0.46344273\n\n\n\nsum() applied to all elements\n\n\n\n\nsum(log(x))\n\n[1] -5.71996\n\n\n\nlog and sum are both vectorized functions but they are vectorized in different ways log() is vectorized in the way that it does something to each element. sum() is vectorized in the way that it takes an entire vector and does operation on the entire thing.\nlog applies the natural log to every element at once and sum sums it all up!"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#vectorized-solutions",
    "href": "getting-away-with-for-loops/index.html#vectorized-solutions",
    "title": "for loops in R",
    "section": "vectorized solutions",
    "text": "vectorized solutions\n\nyou should use them\ncleaner\nfaster\nmore effective\n\n\nyou should always look for vectorized solutions they are clearer always faster and since they’re faster, they’re more effective"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#another-example",
    "href": "getting-away-with-for-loops/index.html#another-example",
    "title": "for loops in R",
    "section": "another example",
    "text": "another example\n\nrow means of Anscombe’s Quartet\n\n\n\nanscombe <- as.matrix(datasets::anscombe)\nanscombe\n\n      x1 x2 x3 x4    y1   y2    y3    y4\n [1,] 10 10 10  8  8.04 9.14  7.46  6.58\n [2,]  8  8  8  8  6.95 8.14  6.77  5.76\n [3,] 13 13 13  8  7.58 8.74 12.74  7.71\n [4,]  9  9  9  8  8.81 8.77  7.11  8.84\n [5,] 11 11 11  8  8.33 9.26  7.81  8.47\n [6,] 14 14 14  8  9.96 8.10  8.84  7.04\n [7,]  6  6  6  8  7.24 6.13  6.08  5.25\n [8,]  4  4  4 19  4.26 3.10  5.39 12.50\n [9,] 12 12 12  8 10.84 9.13  8.15  5.56\n[10,]  7  7  7  8  4.82 7.26  6.42  7.91\n[11,]  5  5  5  8  5.68 4.74  5.73  6.89\n\n\n\nlet’s take another example using anscombes quartet and calculating the average of each row"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#another-example-1",
    "href": "getting-away-with-for-loops/index.html#another-example-1",
    "title": "for loops in R",
    "section": "another example",
    "text": "another example\nusing a loop\n\nfor (i in 1:nrow(anscombe)) {\n  row <- anscombe[i,]\n  print(mean(row))\n}\n\n[1] 8.6525\n[1] 7.4525\n[1] 10.47125\n[1] 8.56625\n[1] 9.35875\n[1] 10.4925\n[1] 6.3375\n[1] 7.03125\n[1] 9.71\n[1] 6.92625\n[1] 5.755\n\n\n\nthis can be accomplished fairly simply using a for loop in which we subset the matrix by its row number then calculate the mean for that row"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#vectorized",
    "href": "getting-away-with-for-loops/index.html#vectorized",
    "title": "for loops in R",
    "section": "vectorized",
    "text": "vectorized\nusing an existing vectorized function\n\nrowMeans(anscombe)\n\n [1]  8.65250  7.45250 10.47125  8.56625  9.35875 10.49250  6.33750  7.03125\n [9]  9.71000  6.92625  5.75500\n\n\n\nbut since there is an already vectorized function rowMeans() we should use that instead."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#growing-objects",
    "href": "getting-away-with-for-loops/index.html#growing-objects",
    "title": "for loops in R",
    "section": "growing objects",
    "text": "growing objects\n\nR only allocated what it needed with results <- c()\nc(results, log(x[i])) needs to\n\nmove the data,\nmake space,\nand check types each time\n\n\n\nwhen you create an object in R R only stores the amount of memory necessary for it at that time and when you want to amke it bigger, R needs to move the data, figure out how much space to make, and check the types of data that are being squished every. single. time. and while this is bad…."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#section-6",
    "href": "getting-away-with-for-loops/index.html#section-6",
    "title": "for loops in R",
    "section": "",
    "text": "“How to rbind dataframes in a for loop”\nAsked Jan 23, 2019\nSolution:\n\ni=1\ntable_page_all  <- data.frame()\nfor (page in as.character(df$website)){\n\n  keywordA <- data.frame(matrix(page))\n  keywordB <- data.frame(matrix(\"REVIEW\"))\n  keywordC <- data.frame(df$keyword_page[i])\n\n   i <- i +1\n   table_page_all  <- rbind(table_page_all, \n                            data.frame(keywordA, keywordB, keywordC))\n}\n\ncolnames(table_page_all) <- c(\"KEYWORD A\", \"KEYWORD B\", \"KEYWORD C\")\n\n\n\nhttps://stackoverflow.com/questions/54328512/how-to-rbind-dataframes-in-a-for-loop\n\nthis is a really great example of what not to do when writing a for loop It’s an accepted answer for a stack overflow question from 2019. the challenges arise from line 2 and the rbind statement when we want to fill an object using a for loop we should always make sure there is room for it"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#preallocating-vectors",
    "href": "getting-away-with-for-loops/index.html#preallocating-vectors",
    "title": "for loops in R",
    "section": "preallocating vectors",
    "text": "preallocating vectors\n\ngrowing objects is slow\nif R knows the size, it is okay\n\n\n\nresults <- numeric(length(x))\n\nfor (i in 1:length(x)) {\n  \n  results[i] <- log(x)[i]\n  \n}\n\n\nmake sure that R knows how big an object is going to be we don’t want it figuring it out more than once"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#benchmarking-pre-allocation",
    "href": "getting-away-with-for-loops/index.html#benchmarking-pre-allocation",
    "title": "for loops in R",
    "section": "benchmarking pre-allocation",
    "text": "benchmarking pre-allocation\n\n\nthese are still bad because they don’t take advantage of the vectorization of log()\n\nx <- runif(1000)\n\nbench::mark(\n  not_allocated = {\n    results <- c()\n    for (i in 1:length(x)) results <- c(results, log(x[i]))\n  },\n  allocated = {\n    results <- numeric(length(x))\n    for (i in 1:length(x)) results[i] <- log(x[i])\n  }\n)\n\n# A tibble: 2 × 6\n  expression         min   median `itr/sec` mem_alloc `gc/sec`\n  <bch:expr>    <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl>\n1 not_allocated   2.08ms   2.45ms      406.    3.88MB     32.0\n2 allocated     747.72µs 815.43µs     1166.   25.37KB     41.0\n\n\n\nlets compare the differences in runtime memory and speed when we preallocate our vectors preallocation is sooooo much faster and soooo much more memory efficient"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#a-new-example",
    "href": "getting-away-with-for-loops/index.html#a-new-example",
    "title": "for loops in R",
    "section": "a new example",
    "text": "a new example\n\n\n\n\nmy_df <- data.frame()\n\nfor (i in 1:10) {\n  \n  n_samples <- rbinom(1, 100, runif(1))\n  \n  index <- sample.int(nrow(iris), size = n_samples, replace = TRUE)\n  \n  my_df <- rbind(my_df, iris[index,])\n  \n}\n\ndim(my_df)\n\n[1] 451   5\n\n\n\nsince the stack over flow example isn’t reproducible let’s make a new one. we’ll take a random number of rows from the iris dataset and then append it to an empty data frame 10 times\nfirst we create an empty data frame get a random number of rows to sample then we sample random integers, with replacement, as an index to subset the iris dataset then we squish it onto the my_df object"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#example-but-better",
    "href": "getting-away-with-for-loops/index.html#example-but-better",
    "title": "for loops in R",
    "section": "example but better",
    "text": "example but better\n\n\n\n\n\nresults <- vector(mode = \"list\", length = 10)\n\nfor (i in 1:10) {\n\n  n_samples <- rbinom(1, 100, runif(1))\n  \n  index <- sample.int(nrow(iris), size = n_samples, replace = TRUE)\n  \n  results[[i]] <- iris[index,]\n  \n}\n\nmy_df <- do.call(rbind, results)\n\ndim(my_df)\n\n[1] 451   5\n\n\n\nyou might be thinking “if i don’t know how many rows im going to have, how can i preallocate a dataframe of a determined size?”\nim going to say “don’t do that” and tell you to use a list lists are so flexible and so useful.\neach element of a list can hold whatever the hell we want lets take advantage of that\non each iteration let’s store the subset into a list then at the end we can squish them all together using an arcane incantation of do.call() and rbind()"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#example-but-better-1",
    "href": "getting-away-with-for-loops/index.html#example-but-better-1",
    "title": "for loops in R",
    "section": "example but better",
    "text": "example but better\n\n\n\n\nresults <- vector(mode = \"list\", length = 10)\n\nfor (i in 1:10) {\n\n  n_samples <- rbinom(1, 100, runif(1))\n  \n  index <- sample.int(nrow(iris), size = n_samples, replace = TRUE)\n  \n  results[[i]] <- iris[index,]\n  \n}\n\nmy_df <- dplyr::bind_rows(results)\n\ndim(my_df)\n\n\na more contemporary solution would be to use dplyr’s bind rows function and honestly, yah do that."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#section-7",
    "href": "getting-away-with-for-loops/index.html#section-7",
    "title": "for loops in R",
    "section": "",
    "text": "as florian privé wrote in his wonderful blog post “bullshit” hey, i didn’t say it. they did"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#section-8",
    "href": "getting-away-with-for-loops/index.html#section-8",
    "title": "for loops in R",
    "section": "",
    "text": "Why loops are slow in R - Florian Privé\nhttps://privefl.github.io/blog/why-loops-are-slow-in-r/"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#apply-functions",
    "href": "getting-away-with-for-loops/index.html#apply-functions",
    "title": "for loops in R",
    "section": "apply() functions",
    "text": "apply() functions\n\nare nothing more than an internal C loop\nthey do their part in preallocating\nvapply() for example is type-safe\nroughly the same speed as for loops\n\n\nlet us not be misled. apply functions are not vectorized they are no more than an internal c loop they do their part in preallocating so they probably get right what you dont vapply() is even fancier in that it is type safe but if you wanted that you’d use rust since they’re just loop they’re roughly the same speed as a for loop"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#section-9",
    "href": "getting-away-with-for-loops/index.html#section-9",
    "title": "for loops in R",
    "section": "",
    "text": "they’re idiomatic\ncan be easier to read\nfewer lines of code (typically)\n\n\nthey’re idiomatic they can be easy to read (most of the time) and typically end up in fewer lines of code."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#scenario-simulated-p-values",
    "href": "getting-away-with-for-loops/index.html#scenario-simulated-p-values",
    "title": "for loops in R",
    "section": "Scenario: simulated p-values",
    "text": "Scenario: simulated p-values\n\ncalculate a statistic once (observed)\ncreate replicates with random samples (reps)\ncount how many times the observed was more extreme than the reps\nthe ratio is the simulated p-value\n\n\n\\[\np_{sim} = \\frac{M + 1}{R + 1}\n\\]\n\nthe problem was with how i was calculating simulated p-values simulated p-values are calculated by calculating an observed statistic then calculating the same measure but using random samples of your data after which you count how many times your statistic was more extreme than the replications then the ratio is the simulated p-value"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#my-previous-approach",
    "href": "getting-away-with-for-loops/index.html#my-previous-approach",
    "title": "for loops in R",
    "section": "my previous approach",
    "text": "my previous approach\n\ncalculate a statistic once\nabstract the calculation for all inputs using *apply()\nrepeat nsim times replicate()\n\n\nthe way i would do this was to first create a function that calculated the statistic then i’d abstract that to handle a vector of inputs using apply and then id repeat it a number of times with replicate()"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#set-contstants",
    "href": "getting-away-with-for-loops/index.html#set-contstants",
    "title": "for loops in R",
    "section": "set contstants",
    "text": "set contstants\n\nnsim = 999"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#set-contstants-1",
    "href": "getting-away-with-for-loops/index.html#set-contstants-1",
    "title": "for loops in R",
    "section": "set contstants",
    "text": "set contstants\n\nnsim = 999\nn = 100"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#set-contstants-2",
    "href": "getting-away-with-for-loops/index.html#set-contstants-2",
    "title": "for loops in R",
    "section": "set contstants",
    "text": "set contstants\n\nnsim = 999\nn = 100\nk = 10\n\n\nfirst, specify the number of simulations then the number of observations then the number or neighbors for each location"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#calculate-observed-observations",
    "href": "getting-away-with-for-loops/index.html#calculate-observed-observations",
    "title": "for loops in R",
    "section": "calculate “observed” observations",
    "text": "calculate “observed” observations\n\nsampling from a random normal distribution\n\n\n\n\n\n\nobs <- rnorm(n, sd = 0.5)\n\nobs\n\n  [1]  0.631477142 -0.163116680  0.664899631  0.636214661  0.207320717\n  [6] -0.769975021 -0.464283517 -0.147360223 -0.002883586  1.202326694\n [11]  0.381796731 -0.399504624 -0.573828505 -0.144730787 -0.149607559\n [16] -0.205755416  0.126111724 -0.445960564  0.217841650 -0.618769211\n [21] -0.112133943  0.188697823  0.066668180  0.402094755 -0.028553387\n [26]  0.251803986  0.542884681 -0.345476920 -0.642299677  0.023363086\n [31] -0.117853278 -0.271444128 -0.216655159 -0.324735823  0.363375374\n [36]  0.575955877  0.496080183 -0.214756555  0.619152050 -0.139673141\n [41]  0.878951545  0.280373045 -0.226391986 -0.416021648 -0.583285274\n [46] -0.532795290 -0.781891026  0.578268499  0.416023564 -0.113664346\n [51]  0.133068681 -0.188351359  1.220682314 -0.397669559 -0.027438737\n [56]  0.125070661  0.309121647 -0.086311751 -1.111950137 -0.631807192\n [61]  0.179364448 -0.005522739 -0.470324581 -0.057912661 -0.407484354\n [66]  0.121131740 -0.712549197  0.182970562  0.124206324  0.032644091\n [71]  0.009578196  0.128669189 -0.324505039 -0.059584381  0.332067850\n [76]  0.550484551  0.071885740 -0.058876799 -0.456034183 -0.718793120\n [81] -0.398544763  0.627041553  0.386071093 -0.109757813 -0.212405142\n [86] -0.209490050  0.498493430 -0.137889015  0.628009409  0.323337195\n [91]  0.649656151 -0.436631056  0.004185480 -0.440435862  0.298129508\n [96]  0.059858821 -0.141086939  0.727994201  0.114509795  0.498271964\n\n\n\nfor the sake of example, our “observed” statistic can be values from a random normal distribution"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#calculate-statistic-once",
    "href": "getting-away-with-for-loops/index.html#calculate-statistic-once",
    "title": "for loops in R",
    "section": "calculate statistic once",
    "text": "calculate statistic once\n\nin this case the “statistic” is the mean of 10 random values\n\n\n\n# calculate the statistic for one location i\nstat_calc <- function(k) mean(rnorm(k))\n\n# for example\nstat_calc(10)\n\n[1] 0.04043044\n\n\n\nand our statistic that we’re comparing to is the average of our K (10) random neighbors also from a normal distribution this super simple function takes a number k and return the average"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#generalize-for-a-vector",
    "href": "getting-away-with-for-loops/index.html#generalize-for-a-vector",
    "title": "for loops in R",
    "section": "generalize for a vector",
    "text": "generalize for a vector\n\n# write a function that abstracts to all [i, n]\nsimulate_stat <- function(n, k) {\n  sapply(1:n, \\(x) stat_calc(k))\n}\n\nsimulate_stat(100, 5)\n\n  [1] -0.602426248  0.180523489 -0.581355766  0.420786234  0.309852115\n  [6] -0.984980320 -0.323278982 -0.608887758  0.664531573 -0.184549005\n [11]  0.989520068 -0.060102461 -0.180402211 -0.619058037  0.084000646\n [16]  0.045911613  0.485379980 -0.027356989  0.139386703  0.289302386\n [21]  0.230713467 -0.193438400  0.505530631 -0.011872220 -0.232747564\n [26]  0.213136531 -0.359344537 -0.119056287  0.444854189 -0.035327755\n [31]  0.386681023 -0.421645796  0.012669832  0.034845254  0.267658962\n [36]  0.007010214  0.063571445  0.122497711  0.740724507 -0.438614539\n [41] -0.563525411  0.032876173 -0.117340632  0.243906716  0.328789406\n [46] -0.158480434  0.008116015  0.170851993  0.060778903  0.008736812\n [51]  0.554868167 -0.544664664 -0.309598599 -0.201443222 -0.464309605\n [56]  0.926308862  0.447793632 -0.661267617  0.105239385  0.221594856\n [61] -0.103155849  0.809794906 -0.182043467  0.224180365 -0.618556134\n [66] -0.528179300  1.295211844 -1.426050988 -0.730956717 -0.396441256\n [71]  0.340642931  0.249105897  0.235976457 -0.076725380 -0.325395579\n [76]  0.262193847 -0.181470216 -0.146240529 -0.002595019  0.741887602\n [81]  0.282080191  0.297974565 -0.547104399  0.345812861 -0.092270604\n [86] -1.024169669 -0.557661169  0.138645106 -0.034226969  0.267966054\n [91]  0.742224673 -0.484139695 -0.453993114 -0.601421471 -0.445290774\n [96] -0.225143093 -0.615895628  0.545072926  0.301983915  0.065925835\n\n\n\nnext i would generalize this with an apply statement here we just run stat_calc() n number of times and return a vector"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#repeat-it",
    "href": "getting-away-with-for-loops/index.html#repeat-it",
    "title": "for loops in R",
    "section": "repeat it",
    "text": "repeat it\n\nreps <- replicate(\n  nsim,\n  simulate_stat(n, k)\n)\n\ndim(reps)\n\n[1] 100 999\n\nhead(reps)\n\n            [,1]        [,2]       [,3]        [,4]        [,5]        [,6]\n[1,] -0.51496777  0.29583067  0.6894046  0.04918726 -0.06896474 -0.53336917\n[2,] -0.13294636 -0.05158104 -0.2760196 -0.12651346 -0.09521819 -0.40149901\n[3,]  0.27473581 -0.53347829 -0.1057627 -0.08760898  0.36259658  0.07924616\n[4,]  0.31285567  0.48388171  0.1803423 -0.39903375 -0.15918647  0.31204464\n[5,] -0.03997914  0.66098633 -0.1636986  0.32377374 -0.13679592  0.33498244\n[6,]  0.10334729 -0.03532271  0.1945962  0.06642699 -0.17377821  0.40564122\n            [,7]       [,8]         [,9]       [,10]       [,11]       [,12]\n[1,]  0.34012633  0.4005306  0.559637297  0.49998663  0.45360477  0.05615078\n[2,] -0.01284181  0.2098793 -0.145470491 -0.26382365 -0.66841145 -0.28629961\n[3,]  0.08982928  0.5663737  0.074783535  0.07636215  0.08100392  0.02399229\n[4,]  0.25381872  0.5745468 -0.504780466  0.16502864 -0.01446454 -0.24073511\n[5,]  0.06172193 -0.8106437  0.075693791 -0.06586965 -0.22560754  0.12203599\n[6,]  0.25752125  0.4646712 -0.007005765  0.17270922 -0.13355804 -0.34226180\n           [,13]       [,14]        [,15]       [,16]       [,17]       [,18]\n[1,]  0.30919951 -0.18666514 -0.004617855  0.22588216 -0.43072723 -0.35201667\n[2,] -0.14381761  0.03132988  0.010082080  0.61897661 -0.56387470  0.13482791\n[3,]  0.06252011  0.20768389 -0.123951733 -0.14289170  0.12214798 -0.20814741\n[4,] -0.20219959  0.09914978  0.187758260  0.29275300 -0.31477807  0.03833962\n[5,]  0.14921663 -0.29571802 -0.036870085  0.74644521 -0.13867711  0.35541212\n[6,] -0.15836088  0.22196708  0.231465381  0.05421817 -0.06124467 -0.26784378\n           [,19]       [,20]        [,21]       [,22]       [,23]       [,24]\n[1,] -0.25216013  0.05932977  0.006404654 -0.39544075 -0.41839762  0.12051720\n[2,] -0.14141965  0.60729505 -0.410638346 -0.03604191  0.16822926 -0.01168733\n[3,] -0.35940543 -0.49587228  0.325431071 -0.07413386 -0.49504685 -0.51907586\n[4,] -0.12408119 -0.21614148  0.198587380 -0.20967646  0.05446210  0.32511777\n[5,] -0.34789087 -0.09957614  0.037904025 -0.04800270  0.67820402 -0.06083854\n[6,]  0.04196668 -0.11945251  0.030837751  0.07143987  0.05397694  0.13102876\n           [,25]      [,26]      [,27]       [,28]      [,29]       [,30]\n[1,] -0.36114551  0.4917656 -0.5129156 -0.38946609 -0.2078415  0.19885502\n[2,] -0.43095853 -0.4961883  0.6464689  0.25264921  0.8703092  0.30947698\n[3,]  0.46399919  0.5841361  0.1645994 -0.82740740 -0.4993384 -0.24997107\n[4,]  0.53418614  0.2858982 -0.3079700  0.09474611  0.1622631  0.06750515\n[5,] -0.14585366  0.4259941  0.1442553 -0.40614958  0.7447625  0.41714973\n[6,]  0.01830265  0.4057847  0.2269353  0.45904261  0.4266509  0.06025433\n           [,31]       [,32]       [,33]      [,34]        [,35]       [,36]\n[1,] -0.38565056  0.20163456  0.12047162 -0.1686046 -0.008522827 -0.16309530\n[2,]  0.24216570  0.33589454 -0.80807232 -0.1006614  0.254964416  0.01418675\n[3,]  0.06670266  0.03336345 -0.56981498 -0.2393054  0.390157188  0.11616957\n[4,]  0.14078894 -0.67035012 -0.40068295  0.4996056  0.032957979 -0.16244167\n[5,]  0.22062709  0.35033993 -0.01477433  0.5616152  0.611629813  0.02018557\n[6,] -0.68283218  0.09260788  0.04409432  0.4171718 -0.460268048  0.35723917\n          [,37]       [,38]        [,39]       [,40]       [,41]        [,42]\n[1,] -0.1993621 -0.03829284  0.191597939 -0.02285408  0.01089519 -0.377068570\n[2,] -0.4211381  0.15408889  0.134312384 -0.23847683  0.49433687  0.234508269\n[3,]  0.9548491 -0.19296683 -0.002375535  0.28836337 -0.13524257 -0.006363107\n[4,] -0.2531325  0.31542961  0.426021808  0.35636894  0.32695001 -0.380906274\n[5,] -0.6057257  0.50512706 -0.531360687 -0.72548089  0.01287447  0.214207251\n[6,]  0.2549436  0.31886224 -0.002732059 -0.12157162 -0.25039524  0.057464349\n          [,43]       [,44]       [,45]       [,46]      [,47]      [,48]\n[1,]  0.3098685  0.89388453  0.26913997  0.07854172  0.7197595  0.7431758\n[2,]  0.2983027 -0.04839929 -0.11725951 -0.31318810  0.1775069  0.2092706\n[3,] -0.2778185  0.61832258  0.22214085  0.43464439  0.5291206 -0.1157195\n[4,]  0.2978624 -0.02275456  0.15232645 -0.57560762 -0.1113488  0.2437632\n[5,]  0.1448592 -0.12100974  0.03851727  0.27006394  0.2426246 -0.1839891\n[6,]  0.2994346  0.04489344 -0.64894696 -0.19002949  0.1662315  0.4883923\n         [,49]      [,50]      [,51]       [,52]       [,53]       [,54]\n[1,] 0.4541345  0.1690603 -0.3175250 -0.07499836  0.13240957 -0.31834132\n[2,] 0.3633764 -0.1747268  0.3697134 -0.23978869  0.47824260  0.27963047\n[3,] 0.1912132 -0.2419545  0.7875248  0.19015981  0.09348095 -0.28275898\n[4,] 0.6997756 -0.2710890  0.1692130  0.19469030 -0.07776197  0.58103819\n[5,] 0.1013837  0.1576790  0.0300594 -0.32315572 -0.18106873  0.29026811\n[6,] 0.3652599  0.1197155  0.1560979  0.41575054  0.11877140 -0.00419979\n            [,55]      [,56]      [,57]       [,58]       [,59]       [,60]\n[1,] -0.205638154  0.5945895  0.2501387  0.19298550 -0.23958476  0.05205367\n[2,] -0.057431442  0.2238074 -0.1889901 -0.08806125 -0.20864200  0.27758503\n[3,]  0.006160391  0.2915204  0.1365372 -0.12492269 -0.66075956  0.12054776\n[4,] -0.075129748 -0.1340137 -0.7110547  0.12477085  0.13143104 -0.08398255\n[5,] -0.038894406  0.1286849 -0.1800076  0.30065726 -0.01577549  0.29183138\n[6,]  0.227581184 -0.3894915  0.1619258 -0.06330361  0.50408131 -0.04339876\n           [,61]       [,62]      [,63]       [,64]        [,65]       [,66]\n[1,]  0.47790860  0.06066022  0.4088132  0.08161260  0.201106649  0.26065515\n[2,] -0.45668773  0.18285414  0.1516047  0.47710860  0.644341979  0.46694268\n[3,]  0.33600356 -0.03468124 -0.1507738 -0.27196683 -0.210157405  0.28566832\n[4,]  0.09719675 -0.20192089 -0.3952859 -0.07099785  0.003520747  0.12004320\n[5,] -0.29388894 -0.50395487  0.2640612  0.02550520  0.006675474 -0.44416958\n[6,]  0.39454269  0.24875452 -0.1029660  0.15251211 -0.469379164  0.05121025\n          [,67]       [,68]       [,69]       [,70]       [,71]      [,72]\n[1,]  0.6749891 -0.09619021  0.29139570 -0.20432493 -0.08025688  0.1645395\n[2,]  0.4151347 -0.13511791 -0.11591383 -0.58210447 -0.13940796  0.2564241\n[3,] -0.1701387  0.06432416 -0.31151599 -0.02059541  0.22341244  0.5691127\n[4,]  0.2209303 -0.28258173 -0.32738062 -0.10787235  0.05110671  0.1125893\n[5,]  0.1116928  0.01574254  0.58376340  0.10510574  0.13488920  0.1412790\n[6,]  0.1666152 -0.26204110 -0.07957735  0.03655788 -0.03211792 -0.3340783\n            [,73]       [,74]      [,75]       [,76]       [,77]       [,78]\n[1,] -0.247565114  0.40518858 -0.3806428 -0.46445524 -0.35432809  0.07521995\n[2,]  0.282862902 -0.34019810  0.1985671 -0.30762877 -0.54033928  0.38752657\n[3,]  0.003613628 -0.08150022 -0.1346725 -0.09151010  0.38693452  0.02405683\n[4,] -0.400069775  0.47296010  0.5271406  0.18208489 -0.07531307  0.06264377\n[5,]  0.418314897 -0.22622178  0.2243401  0.00711069 -0.12022228 -0.24287045\n[6,]  0.399396813  0.44335779 -0.1429270 -0.01265987 -0.31749625  0.04284685\n           [,79]       [,80]       [,81]        [,82]        [,83]       [,84]\n[1,] -0.04005815 -0.04767865 -0.17963555 -0.311184905  0.518614742 -0.03338581\n[2,]  0.07925653 -0.05458927  0.26023668 -0.105343727 -0.110364551  0.27636463\n[3,] -0.09406211  0.17369797 -0.07062201  0.185766648 -0.016806645  0.03129255\n[4,]  0.15525923 -0.14301724  0.12838375 -0.352054750 -0.002793731  0.06663838\n[5,]  0.02657600 -0.79081577  0.02014986  0.426928054 -0.003637414  0.13050498\n[6,]  0.60345605 -0.16416651 -0.30227700 -0.001653791 -0.077689521  0.02579147\n           [,85]       [,86]       [,87]      [,88]       [,89]      [,90]\n[1,]  0.46584251  0.01071760 -0.14376190  0.1005222 -0.26359121  0.1312087\n[2,] -0.98405780 -0.10373773  0.01672711 -0.1955776  0.18991696  0.1677682\n[3,]  0.22733740  0.03805034  0.33737557  0.4098596 -0.39518103 -0.1564946\n[4,]  0.05505626 -0.09261122  0.13025228  0.3330306 -0.56285394  0.3856186\n[5,] -0.12258958  0.17797493 -0.38719005  0.2023579 -0.06466657  0.3179036\n[6,] -0.41851913  0.14804088  0.15569819 -0.3306315  0.16381039  0.3765377\n           [,91]      [,92]       [,93]      [,94]        [,95]       [,96]\n[1,]  0.03114589 -0.4379956  0.12416759  0.1644524 -0.338147803 -0.11835749\n[2,] -0.30299555 -0.7956639  0.59813458 -0.1301600  0.125251645 -0.27848067\n[3,]  0.19555601 -0.1524930  0.19717900 -0.5509186  0.399259957  0.01268418\n[4,]  0.01446853  0.1079070 -0.12189451 -0.5502657 -0.025835611 -0.16888419\n[5,]  0.27339301 -0.3229302  0.25506567  0.5105540 -0.006367967  0.20277859\n[6,]  0.05954728  0.1738164  0.07213237 -0.4071221 -0.190461128  0.52840311\n           [,97]       [,98]       [,99]      [,100]      [,101]      [,102]\n[1,]  0.08907654  0.41699156 -0.05137094  0.27574629 -0.37856960 -0.05881549\n[2,]  0.00263289 -0.10469203 -0.01906331  0.78354422 -0.01184569  0.55830852\n[3,] -0.20776635  0.37287279  0.39001431  0.32225500  0.40995222  0.51444345\n[4,] -0.10523968 -0.28872693  0.19933431  0.22610743  0.17535856 -0.21337626\n[5,]  0.41769739 -0.06967248 -0.10105337 -0.04952475 -0.06369735 -0.08486079\n[6,] -0.20550759 -0.10108347 -0.04901355  0.28673876  0.46134203 -0.37934635\n          [,103]      [,104]      [,105]      [,106]     [,107]      [,108]\n[1,]  0.07998623  0.24052151  0.02124482  0.20231986 0.09737834 -0.01251451\n[2,] -0.16568164  0.19275729 -0.30522595 -0.21217341 0.07830599 -0.05638935\n[3,] -0.13237687  0.07999936 -0.22773889  0.07012252 0.09921312  0.33843381\n[4,]  0.43127975 -0.03692194  0.23128625  0.17675268 0.13421788 -0.01111016\n[5,]  0.35140891  0.34304242  0.49188699 -0.35291748 0.03646319  0.20500994\n[6,] -0.21268433  0.13996509 -0.48662370  0.08578167 0.19046483 -0.49692464\n         [,109]      [,110]      [,111]     [,112]     [,113]      [,114]\n[1,]  0.3196991 -0.75055880  0.11149735 -0.1718741 -0.2701093 -0.29841538\n[2,]  0.0214736 -0.26242490 -0.22176122  0.6630349 -0.5348378 -0.02097985\n[3,]  0.1234662  0.06247894  0.29079798  0.1247118 -0.1747623 -0.20770946\n[4,] -0.7077374  0.43235357 -0.09825469  0.2197409  0.0738736  0.30489580\n[5,] -0.2475654 -0.28032945 -0.19363665 -0.3842612  0.6389058  0.16120591\n[6,]  0.5251831  0.34053135 -0.31610835 -0.3146257 -0.1767507 -0.20702967\n          [,115]     [,116]     [,117]        [,118]      [,119]      [,120]\n[1,]  0.02566214 0.16070428  0.2352991  0.1062474641  0.37685315 -0.07426108\n[2,]  0.08139194 0.20847570 -0.1639809  0.0718039370 -0.20179148 -0.67012377\n[3,]  0.24318408 0.26113782 -0.4679509 -0.0592133889 -0.08160505 -0.09592748\n[4,] -0.37132739 0.09643558  0.0330706 -0.0001296273  0.50163365  0.45865443\n[5,] -0.10421518 0.01794710  0.2836286  0.3009871084  0.32635136  0.19480889\n[6,]  0.28346041 0.13434612  0.2583342 -0.0334763075  0.07900864 -0.37951447\n          [,121]      [,122]      [,123]      [,124]     [,125]       [,126]\n[1,]  0.67661210 -0.14702784 -0.09240761  0.05369508 -0.1730627  0.097240466\n[2,]  0.18647245 -0.40254320  0.39921482  0.01256342  0.2180293 -0.587649933\n[3,]  0.05619297 -0.08676255 -0.14204297  0.13887854  0.4353370 -0.008937031\n[4,]  0.02472606  0.21078734  0.03284713 -0.33595550 -0.2132423 -0.323010092\n[5,] -0.40697990 -0.10580466 -0.11898944  0.16981414 -0.2442862 -0.223479069\n[6,] -0.18404727 -0.03738464  0.60275711  0.33038533  0.4147564  0.074834338\n          [,127]      [,128]        [,129]      [,130]     [,131]      [,132]\n[1,] -0.03544734 -0.45255812  0.4341703425  0.20059179  0.0264295  0.34445913\n[2,]  0.24214245  0.13548831 -0.2784007172  0.31517680 -0.2468703  0.06271889\n[3,]  0.07876653  0.51198902 -0.3259981114  0.01948984 -0.3557472 -0.00531022\n[4,]  0.28087000  0.44552999 -0.0004794803 -0.62667121 -0.1933706  0.25683786\n[5,]  0.37859184  0.15283037  0.3476818099  0.63538132  0.2918755 -0.22047934\n[6,] -0.04076022 -0.01165899  0.2575556072 -0.28202782  0.2475470 -0.32338680\n          [,133]      [,134]      [,135]      [,136]      [,137]      [,138]\n[1,] -0.24868929 -0.53184426  0.36090565 -0.35139296 -0.47251384  0.03003811\n[2,] -0.13304056 -0.53038971 -0.25651383 -0.01862317  0.03589266 -0.15891035\n[3,]  0.04427159  0.33783051 -0.49142413  0.04448394  0.73469766  0.13883693\n[4,]  0.09390231 -0.04583197 -0.39731912  0.18167407 -0.30345696  0.14596347\n[5,] -0.22478329  0.13001196  0.09718603  0.35581485  0.41416520 -0.17254885\n[6,] -0.08587639  0.08417227  0.12508659 -0.12673771  0.13413005  0.04804610\n          [,139]      [,140]      [,141]     [,142]      [,143]      [,144]\n[1,] -0.09840264 -0.08276381 -0.03641869  0.1102107 -0.13248786  0.19383813\n[2,]  0.12891407 -0.49622019 -0.07022943 -0.1201232 -0.15393060 -0.16164298\n[3,] -0.12748957 -0.01122559  0.07902150 -0.1390136 -0.12966954 -0.54263835\n[4,] -0.25563414  0.32825614 -0.22056688  0.1106293  0.12318647  0.04741405\n[5,]  0.22208157  0.29528865 -0.55543715  0.3703098  0.09815616 -0.16957631\n[6,]  0.47950378  0.38181838  0.31234037 -0.2301352  0.20507920 -0.13336090\n          [,145]     [,146]      [,147]       [,148]      [,149]     [,150]\n[1,]  0.21604577  0.2724162  0.27321021  0.090172991  0.41054666 -0.1685871\n[2,] -0.29709635 -0.1382186  0.43892694 -0.209543362 -0.33255407 -0.1107152\n[3,]  0.44867582  0.2690576  0.07530388  0.116419680  0.03662097 -0.3064979\n[4,]  0.10055396  0.4242063  0.23296820  0.003775349 -0.53158628  0.1991016\n[5,] -0.46066600  0.2991094  0.27516333  0.308666824  0.31679403  0.4931368\n[6,]  0.02025905 -0.2269778 -0.32070605 -0.493111263  0.36828251 -0.3204407\n          [,151]      [,152]      [,153]      [,154]     [,155]      [,156]\n[1,] -0.33772060  0.09104796  0.21311339  0.43348167 -0.2122639 -0.23082795\n[2,]  0.01371973  0.55717894 -0.29564299 -0.50887723  0.1037492  0.07082691\n[3,]  0.17880067  0.10316466 -0.40025060  0.03038997  0.4565141 -0.02727471\n[4,] -0.10382681  0.11466328  0.12351268 -0.08641971 -0.1279099 -0.33256904\n[5,]  0.06798737 -0.02880777 -0.02966342  0.06418877 -0.0164606  0.18132531\n[6,]  0.57383797  0.03893307  0.08477902 -0.05858530  0.2573035 -0.29312382\n          [,157]      [,158]      [,159]       [,160]      [,161]      [,162]\n[1,] -0.05760366  0.60036787  0.91615291 -0.004068247  0.18745570  0.27031375\n[2,] -0.07005677  0.06184669  0.27143083 -0.169700341  0.15896729  0.34625368\n[3,]  0.33301630 -0.26665815 -0.02714895 -0.335125558 -0.63707539 -0.06027264\n[4,]  0.03878025 -0.12900785 -0.34042047 -0.361193456  0.02464986  0.46511051\n[5,] -0.53918404  0.32957129 -0.12953561  0.079844471 -0.31765895  0.26788535\n[6,] -0.23130645  0.19181499 -0.59746582 -0.005884803 -0.18195633  0.28279609\n          [,163]       [,164]      [,165]     [,166]      [,167]     [,168]\n[1,]  0.24897311  0.013310533 -0.05475684 0.11628772 -0.07145987 -0.2620769\n[2,]  0.06878027 -0.006509185 -0.25925662 0.11363719  0.21922909 -0.1656778\n[3,] -0.22057501  0.150921180 -0.51786655 0.54637246  0.16065825 -0.1354462\n[4,]  0.17640832  0.309518517 -0.10703029 0.22106639  0.42320910 -0.1179704\n[5,] -0.51365877  0.112282317  0.25290814 0.02184504 -0.02243014 -0.1028867\n[6,]  0.11705215  0.190352950 -0.06634886 0.12398997  0.14420890 -0.2629912\n          [,169]      [,170]     [,171]      [,172]     [,173]      [,174]\n[1,]  0.24878888 -0.27696358  0.2903099 -0.29596996 0.63373736  0.15982853\n[2,]  0.01699296  0.09407324 -0.1380069  0.27816420 0.09517327 -0.22214094\n[3,] -0.32730318 -0.05443997 -0.1054329 -0.15412814 0.50599437 -0.45279581\n[4,]  0.06850036 -0.50974929  0.3850953 -0.20507095 0.12894216  0.07542852\n[5,]  0.41600957  0.31228558  0.1129408 -0.08172014 0.07175750 -0.11160141\n[6,] -0.30684505 -0.23846082 -0.1356184  0.26592373 0.56680885 -0.40361879\n         [,175]      [,176]     [,177]       [,178]      [,179]      [,180]\n[1,] -0.1260085  0.19619499 -0.3769492  0.019177744 -0.18330676 -0.03281073\n[2,] -0.1176825  0.22298408 -0.6465713 -0.440198891  0.19082529  0.05487320\n[3,] -0.1960603 -0.03450015  0.3236228  0.044061345  0.04735194 -0.71439416\n[4,]  0.4298621  0.39219343 -0.2252700  0.006917698 -0.32361452 -0.27175163\n[5,] -0.3381917  0.03613306  0.1163166  0.307365235 -0.79425394  0.04578629\n[6,] -0.1276330 -0.01587694 -0.1183579 -0.521322944 -0.08415145 -0.40259584\n          [,181]      [,182]      [,183]       [,184]     [,185]      [,186]\n[1,]  0.02467613  0.01896842  0.15832256 -0.002083879 -0.1255552 -0.03453561\n[2,] -0.39830620 -0.11366161 -0.07852769  0.096471867  0.1736268 -0.11371125\n[3,] -0.66881543  0.22189145  0.25675091  0.313317042  0.1999895 -0.55248507\n[4,]  0.12544733 -0.02011782 -0.60429934 -0.164379355 -0.1569230 -0.07171592\n[5,]  0.28418410 -0.06137830 -0.11486407 -0.366863234 -0.4455983  0.25806368\n[6,]  0.35166295 -0.59141815 -0.07710377  0.313189682  0.4827346 -0.20120594\n          [,187]     [,188]      [,189]      [,190]      [,191]      [,192]\n[1,]  0.07517741  0.3469990 -0.12566223 -0.33351082 -0.15575606 -0.09256326\n[2,]  0.39033262  0.1684334 -0.02614352 -0.01840284  0.20627984  0.09958466\n[3,] -0.33335870 -0.3119430 -0.61756087  0.21057666  0.21377055 -0.14221838\n[4,]  0.64974891 -0.1263220  0.20702300 -0.22269139  0.20487372  0.11903870\n[5,]  0.23283702  0.4127805  0.10167940  0.25273722  0.32619763 -0.18767807\n[6,]  0.24332780  0.7906886  0.27931176  0.30212861 -0.04488623  0.38932896\n         [,193]      [,194]      [,195]      [,196]      [,197]      [,198]\n[1,]  0.1783881 -0.20169499 -0.20341052 -0.04951387 -0.17557782 -0.06401391\n[2,] -0.3247861  0.94008667 -0.34783257  0.38449163  0.12095395 -0.36605019\n[3,]  0.4687286 -0.13782203 -0.14351267  0.43380937  0.08177479  0.12387867\n[4,] -0.3725658  0.37226182  0.09672991 -0.09813513 -0.15009420  0.07783471\n[5,] -0.3061092 -0.25444675 -0.56923510  0.08031812 -0.73584860  0.16592921\n[6,]  0.2893635  0.03746593  0.34051910 -0.15495556  0.49885823 -0.35684347\n           [,199]      [,200]     [,201]     [,202]      [,203]      [,204]\n[1,] -0.788729266 -0.08855345  0.1438645 0.59100121 -0.05418581  0.22045079\n[2,]  0.009117062  0.26185863  0.1807247 0.44086358  0.37764595 -0.82303798\n[3,]  0.111970089 -0.12249229 -0.8846151 0.15753553  0.10152958  0.27085435\n[4,]  0.127451372  0.34662749  0.2179595 0.34211866 -0.28085422  0.06319672\n[5,]  0.476691671 -0.38242966 -0.2433138 0.43690686  0.09263637 -0.41804373\n[6,] -0.387864478  0.20628265  0.4262885 0.09213592  0.22942686  0.31626202\n          [,205]      [,206]      [,207]       [,208]       [,209]       [,210]\n[1,] -0.52477055 -0.18409506 -0.17475440 -0.003923209 -0.003494141 -0.042136344\n[2,]  0.54250640  0.34108727  0.16531572  0.070021748  0.004158838  0.028432761\n[3,] -0.12774455  0.04951616  0.13618357 -0.020725620 -0.698916463  0.345942317\n[4,] -0.20257207 -0.19019998  0.11712829 -0.066569169  0.263077789 -0.005889938\n[5,] -0.44562343 -0.55635599 -0.02209073 -1.191122430 -0.390353960  0.136490846\n[6,] -0.01061633 -0.53563667 -0.25325602  0.014257734 -0.056647711  0.013302394\n          [,211]      [,212]      [,213]     [,214]      [,215]     [,216]\n[1,] -0.50654977  0.43677573 -0.56486553 0.66860664  0.29656222 -0.1616451\n[2,]  0.02762911  0.10181671 -0.17841445 0.25224507  0.47363596  0.3618334\n[3,]  0.30702243 -0.32389774 -0.18256383 0.51900953  0.09617023  0.8278041\n[4,] -0.01496451 -0.36215534 -0.06362646 0.07919467 -0.34743199  0.1750812\n[5,] -0.38442062  0.14765728 -0.21534205 0.08264555 -0.65314868  0.5361200\n[6,]  0.04650486  0.04186063  0.15101658 0.60189844 -0.11537778 -0.2086058\n          [,217]      [,218]      [,219]      [,220]      [,221]      [,222]\n[1,]  0.43306502 -0.48007059  0.58529267  0.08017197 -0.07881244 -0.10667939\n[2,]  0.42478111 -0.06980584 -0.50946261  0.28821388  0.07033099  0.15719949\n[3,] -0.67292439  0.16088978  0.25032607 -0.16624124  0.60018933  0.03154508\n[4,]  0.11089807  0.29103564 -0.30699237 -0.03949639 -0.44415852 -0.30586527\n[5,] -0.06849822 -0.44071257  0.06859542  0.29108047 -0.18406077 -0.27111870\n[6,]  0.10717618  0.20194950  0.11374507  0.16127025 -0.17276728 -0.21694855\n         [,223]     [,224]      [,225]      [,226]     [,227]      [,228]\n[1,]  0.1480555  0.7442470  0.04250587 -0.14335915 -0.3225607 -0.32813479\n[2,] -0.0737734 -0.1532441 -0.47838007 -0.06465120 -0.1235594 -0.19154545\n[3,]  0.0998858 -0.2080213  0.24449458 -0.06805462  0.3099673 -0.08829082\n[4,]  0.1362090 -0.5909163 -0.09972801 -0.76286593  0.1853374 -0.30196029\n[5,]  0.5853967 -0.1813828 -0.19080325  0.37727598 -0.1929059 -0.14751192\n[6,] -0.1430237  0.1991270  0.05366406 -0.27970012 -0.1639546  0.27810337\n          [,229]      [,230]      [,231]      [,232]     [,233]      [,234]\n[1,] -0.31909559  0.25234817 -0.50567325 -0.83877698 -0.2664388 -0.32378560\n[2,]  0.03835881  0.21092153  0.01830782  0.09323278  0.2330347 -0.43134648\n[3,] -0.36556057 -0.39485921  0.91555180 -0.13768585  0.3958869  0.02831702\n[4,] -0.23291791 -0.14384532  0.25973778 -0.02513104 -0.3374738 -0.23690773\n[5,]  0.35377505  0.01834415  0.16028120 -0.43723467 -0.1005713 -0.45049385\n[6,] -0.72299250  0.27943514  0.07465925 -0.66021464  0.0636950  0.02475576\n          [,235]     [,236]      [,237]      [,238]     [,239]      [,240]\n[1,]  0.53720734  1.0164129  0.11494715 -0.02842599  0.4121183 -0.21719367\n[2,] -0.41005229 -0.3507893 -0.02847593 -0.48529645 -0.5107249 -0.11597008\n[3,]  0.11561822 -0.3448054 -0.05020314  0.15723519  0.5776321 -0.01952338\n[4,] -0.09256436 -0.4154472 -0.19323397 -0.41749386 -0.4273707 -0.24032595\n[5,]  0.10403367  0.2579695 -0.05109292 -0.46584594 -0.1789494 -0.11248582\n[6,]  0.30986465 -0.4568700 -0.11900553 -0.02186569  0.1015657  0.14662964\n           [,241]      [,242]      [,243]      [,244]       [,245]     [,246]\n[1,]  0.096802543 -0.01517874 -0.08768147  0.36813400 -0.102300170 -0.1980573\n[2,] -0.087925214 -0.45435798  0.09945324 -0.41053707  0.284826020 -0.2616851\n[3,]  0.008930464 -0.51257499  0.15501923 -0.10643443  0.001799029  0.2500382\n[4,] -0.147431268 -0.10703347 -0.32606832 -0.11863655  0.612728606  0.6110435\n[5,]  0.260062028  0.06881588 -0.73177778  0.05258622  0.558541880  0.1125311\n[6,] -0.006282530  0.36683784  0.16714235  0.24181833  0.705031005  0.3473981\n           [,247]      [,248]      [,249]      [,250]      [,251]       [,252]\n[1,] -0.101576991 -0.27327332  0.48550970  0.04337648  0.14244315 -0.115704610\n[2,]  0.002000728 -0.30662999 -0.38556461  0.07452792  0.06838067 -0.009807564\n[3,]  0.640674339 -0.04358837 -0.06201677 -0.06856601 -0.13130266 -0.222874838\n[4,]  0.170797616  0.03117837 -0.19509786  0.60282863  0.10569154  0.202516788\n[5,]  0.148271495 -0.02210876  0.55869080  0.24841431  0.32067772  0.163903907\n[6,]  0.454676653 -0.06535293 -0.22599115  0.29862469 -0.09727494 -0.253572602\n           [,253]      [,254]      [,255]     [,256]      [,257]      [,258]\n[1,]  0.296745254 -0.05764645 -0.12755720  0.2892895  0.13532583 -0.37122365\n[2,]  0.004255602 -0.52789549  0.70635235 -0.3328534 -0.10095393 -0.16974928\n[3,] -0.061603968  0.23095625 -0.01337549 -0.1072212 -0.29647178 -0.08246317\n[4,]  0.015764726  0.24903803 -0.54986382 -0.3337167  0.26756945  0.50182603\n[5,] -0.495102591  0.33838826 -0.31728045  0.1304718 -0.01914749 -0.02547675\n[6,]  0.147744827  0.16816486 -0.06772342 -0.2276464 -0.50171833  0.26585637\n         [,259]      [,260]      [,261]      [,262]      [,263]     [,264]\n[1,] -0.4862092 -0.17816313 -0.08784331  0.26743699 -0.25145854  0.4554261\n[2,] -0.4680933 -0.26205184 -0.17499649  0.19104421 -0.07681937  0.2414988\n[3,]  0.4524011 -0.10251490  0.20296942  0.25040238  0.28227142 -0.6537011\n[4,] -0.6006814 -0.29246266 -0.10095709 -0.05590851  0.24944488 -0.8766273\n[5,]  0.1074564 -0.11249310  0.25518083 -0.27502954  0.18098598  0.2369385\n[6,] -0.3891637 -0.09607579 -0.30076274 -0.69757666  0.20196185  0.1554259\n          [,265]     [,266]       [,267]       [,268]     [,269]       [,270]\n[1,] -0.06482482  0.8648402 -0.231523329 -0.006787629  0.2498502  0.887349861\n[2,] -0.15076787 -0.2638881 -0.497163370  0.231141034  0.3523787 -0.007648399\n[3,]  0.31832128  0.1534566 -0.402644366  0.146918173 -0.1277053 -0.068329551\n[4,]  0.22239491 -0.2976861 -0.268370892 -0.052804065  0.2594258 -0.115829655\n[5,] -0.08796049  0.1203056 -0.009108267  0.793205390  0.3175205  0.133050302\n[6,]  0.27328647  0.0546354 -0.374083184  0.076217424 -0.1607805  0.389079846\n         [,271]     [,272]      [,273]     [,274]      [,275]     [,276]\n[1,] -0.2224045 -0.3707098  0.42585336 0.06879911 -0.04447817 -0.1379224\n[2,]  0.1754499 -0.3209892 -0.10341428 0.54741973 -0.14219526 -0.1838556\n[3,] -0.0910849  0.5044084  0.32567749 0.11366407  0.22157172 -0.4242306\n[4,]  0.2287471  0.4289593  0.18021546 0.43878690  0.05385335 -0.2099052\n[5,] -0.1762037 -0.3940521 -0.01545397 0.10707747 -0.14016768  0.1791234\n[6,] -0.2931440 -0.1185173 -0.08250692 0.23473626 -0.09298443  0.2439402\n          [,277]      [,278]      [,279]     [,280]      [,281]       [,282]\n[1,] -0.08950364  0.35485360  0.01939733  0.2707463  0.37116597  0.345225020\n[2,]  0.05580144 -0.07398764  0.20518205 -0.3358479  0.01971120  0.537770173\n[3,]  0.11884004  0.22986474  0.15397488 -0.1630819 -0.05337157  0.081011309\n[4,]  0.59468749  0.16806904 -0.21909879  0.5496074  0.17519282  0.250022039\n[5,]  0.16261498  0.20956751  0.23146070  0.5726557  0.31365664  0.009216743\n[6,]  0.31709483  0.11133015 -0.50855546 -0.2508987 -0.28601405 -0.210681054\n          [,283]       [,284]      [,285]      [,286]      [,287]      [,288]\n[1,] -0.12083573 -0.204012205  0.36471742  0.20553508  0.26148878  0.18958020\n[2,] -0.31520676  0.004205493  0.26796820 -0.09741049  0.10053094 -0.02533303\n[3,] -0.01035097 -0.136852580 -0.20216689  0.15187457  0.15065208 -0.02525320\n[4,]  0.07742170  0.091655275 -0.20564674 -0.13001702  0.03298439  0.31328788\n[5,]  0.30236875  0.263870141 -0.58634872 -0.38555493 -0.14561591 -0.81380613\n[6,]  0.20543964  0.045681154 -0.04635294  0.02202945 -0.29883231 -0.32934066\n         [,289]     [,290]      [,291]     [,292]      [,293]      [,294]\n[1,]  0.3557190 -0.4973362 -0.02782911 -0.3163782 -0.14412749  0.05264305\n[2,] -0.3015703 -0.3795308 -0.27388574  0.1364845 -0.20813735 -0.10176857\n[3,]  0.2435900  0.4643752 -0.05324333 -0.1923259  0.08179124  0.12217650\n[4,] -0.2318989  0.9641496  0.32204030 -0.1023540 -0.42641458 -0.37453108\n[5,] -0.1655141  0.1191137 -0.01212967  0.2104382  0.37227830  0.39520394\n[6,]  0.3766527  0.4919740 -0.30204668 -0.1047697 -0.03484757 -0.17295135\n         [,295]      [,296]      [,297]      [,298]     [,299]     [,300]\n[1,]  0.1984170  0.10122172  0.89610036 -0.20254820  0.2575176 -0.0588413\n[2,] -0.3595251  0.11753553  0.26273822 -0.38106489  0.5315644 -0.1106813\n[3,]  0.2778470 -0.19361706  0.49724560 -0.21018304 -0.1485324  0.4973120\n[4,] -0.3092686 -0.03430054  0.23152611 -0.38514177 -0.0768688 -0.2665689\n[5,] -0.5658736 -0.07776771 -0.17862769  0.19436120 -0.4468992  0.1959817\n[6,]  0.1457221 -0.26260583  0.01468597  0.04137145 -0.1435991  0.2589896\n          [,301]      [,302]      [,303]      [,304]      [,305]     [,306]\n[1,] -0.55908910  0.38353793  0.03616726  0.46559917 -0.54502058 -0.1630005\n[2,]  0.06324324  0.34586708 -0.02805880  0.19462603  0.24009453 -0.1408090\n[3,]  0.49295238  0.47656826  0.03940042  0.29121593 -0.07218776 -0.0219068\n[4,]  0.01868009 -0.11345823 -0.56796023 -0.22586443  0.14986802  0.1249621\n[5,]  0.50312525  0.27176726 -0.19563325 -0.01422309 -0.27630567  0.0452833\n[6,] -0.02292727  0.01891159  0.38782538  0.02170871  0.62215445  0.1532040\n          [,307]      [,308]      [,309]      [,310]      [,311]      [,312]\n[1,]  0.08654481 -0.02544354  0.67969985  0.94193096  0.29706118 -0.50973969\n[2,]  0.06209786  0.39627236 -0.38596202  0.31870261  0.11732956  0.45107174\n[3,]  0.45325711  0.08804495  0.20267058 -0.30675999 -0.90872281  0.40096634\n[4,]  0.24543343  0.22000812 -0.04444801  0.17605495  0.12047834 -0.08452725\n[5,] -0.21727248  0.58058536 -0.31591223  0.28942669 -0.02735415  0.23830976\n[6,] -0.11460015 -0.14605746 -0.01349595 -0.02161532  0.24960834  0.21105470\n          [,313]      [,314]      [,315]      [,316]      [,317]      [,318]\n[1,]  0.46528064  0.11932983 -0.49503184 -0.48326428 -0.37453057  0.01353718\n[2,] -0.51892300  0.50548720  0.05242995  0.05850332  0.06479772 -0.02294212\n[3,]  0.09843793  0.27619840 -0.93020787  0.25104936  0.06221467  0.04340551\n[4,] -0.30434690 -0.20171049 -0.02014022  0.07176219 -0.44537771 -0.01808776\n[5,]  0.55783411 -0.15171906  0.09424310 -0.02987368  0.07241716  0.05213072\n[6,]  0.09262141  0.01426311  0.05621738 -0.15900742  0.38836762  0.27793910\n          [,319]      [,320]      [,321]      [,322]      [,323]      [,324]\n[1,] -0.07810620 -0.52102751 -0.39635212  0.35827401  0.02202253  0.02751020\n[2,]  0.10276310  0.43520983  0.31442942  0.19060242  0.22155723 -0.03199369\n[3,]  0.17479046  0.03796178  0.38623569  0.36741943 -0.34081913  0.14195847\n[4,] -0.02504708 -0.02485715  0.34147365  0.59382765  0.19959967  0.04792705\n[5,] -0.09001182 -0.27746523  0.12500303  0.09038307  0.46030088  0.08841197\n[6,]  0.09696579 -0.14191013 -0.08810397 -0.42007458 -0.20119172 -0.06438059\n          [,325]      [,326]      [,327]      [,328]     [,329]      [,330]\n[1,] -0.28672177  0.05823396  0.47561601 -0.00622391  0.2153794  0.02402516\n[2,] -0.17606457 -0.20218484 -0.09357823  0.01755688  0.3639336  0.34404676\n[3,]  0.07533245 -0.14514050  0.04950537  0.53957515 -0.8404329  0.59828524\n[4,] -0.24550347  0.14085126 -0.34110455 -0.14156136 -0.3368064 -0.16316290\n[5,] -0.30642832  0.20744839 -0.47659876 -0.07600850 -0.1578640 -0.59677863\n[6,]  0.01903903 -0.02702308  0.52137471 -0.27548428 -0.4562401 -0.24519184\n           [,331]      [,332]      [,333]      [,334]      [,335]      [,336]\n[1,] -0.180766294 -0.17216744  0.39625362  0.04958605  0.09143289 -0.17043515\n[2,] -0.120469687 -0.56395622 -0.06893176 -0.56554480 -0.41078585  0.18949726\n[3,] -0.004030575 -0.06163562  0.22114167 -0.55379810  0.50581656  0.30321380\n[4,]  0.318327251  0.22886650 -0.47114589  0.33017629  0.73267521 -0.03742665\n[5,]  0.236898784 -0.05592420 -0.52241300  0.28536531  0.71543351 -0.14814862\n[6,] -0.293055903  0.06246513  0.37636670  0.36180584 -0.03075846 -0.41773075\n          [,337]      [,338]      [,339]     [,340]      [,341]      [,342]\n[1,]  0.15262773  0.08410244  0.16828832  0.0558011 -0.09071545 -0.09872352\n[2,]  0.01994438  0.12691739 -0.40197885 -0.2954351 -0.22941833  0.15984408\n[3,] -0.13985380 -0.03305568 -0.40406006  0.6510945 -0.08521939 -0.33417435\n[4,]  0.34862557  0.29544290 -0.08888572  0.3998920  0.03764052  0.28230340\n[5,]  0.08059040  0.16988339  0.10353193  0.2420476  0.39469627  0.20986916\n[6,]  0.80546360  0.42187469 -0.63189770 -0.2960664  0.09043648  0.08392291\n          [,343]      [,344]      [,345]      [,346]      [,347]      [,348]\n[1,] -0.23893318 -0.08569299 -0.41947525  0.36415873 -0.12117052  0.02099978\n[2,] -0.02590983  0.37294175 -0.21116130 -0.14579653  0.02273199  0.03687371\n[3,] -0.11343233  0.35063586 -0.80193714  0.34946386 -0.44346793 -0.33873844\n[4,] -0.07812354 -0.04556296 -0.27946410 -0.09996636 -0.13528909 -0.40310954\n[5,]  0.25178948 -0.39738555 -0.06756623  0.19163460  0.40976361 -0.07719342\n[6,] -0.34963988  0.07004076  0.17343345  0.09818249 -0.09038020  0.50696124\n          [,349]      [,350]       [,351]      [,352]       [,353]       [,354]\n[1,] -0.11904524  0.34478287 -0.135709105  0.20719312 -0.235454287 -0.001943308\n[2,]  0.15785918  0.11874015 -0.023313740  0.16260865 -0.166231654 -0.216865390\n[3,] -0.43718339 -0.67930885  0.009786124  0.06108403 -0.336526688  0.067212048\n[4,] -0.09614078 -0.28010095  0.257108605 -0.23521217 -0.006609384 -0.331351012\n[5,]  0.28869049 -0.07833284  0.078827060 -0.45203397 -0.242884680 -0.228645978\n[6,]  0.36162330  0.42957125  0.287994330  0.24488015 -0.262578825  0.189537105\n          [,355]      [,356]     [,357]      [,358]     [,359]       [,360]\n[1,] -0.12108308  0.07270538 -0.1991119  0.22016338  0.1934036 -0.386848621\n[2,] -0.50759838 -0.08563225 -0.1423216  0.39421037  0.0385825 -0.007588379\n[3,] -0.13979912  0.22727341 -0.1436249  0.07718922 -0.3815053 -0.320164043\n[4,] -0.32978412  0.22618292 -0.5121838  0.26900951 -0.2850657 -0.766096135\n[5,]  0.07858572 -0.39141130  0.3431703 -0.15828028  0.3309060  0.335467051\n[6,] -0.30528563  0.03654795  0.1284586  0.02262186  0.0965491  0.893029789\n         [,361]     [,362]      [,363]      [,364]     [,365]     [,366]\n[1,]  0.1270666  0.2874422  0.20228678  0.35416008  0.3343923 -0.4172170\n[2,] -0.1105976 -0.1042193 -0.12930898  0.14080639 -0.3192441 -0.2688258\n[3,]  0.1512736  0.6668281 -0.13728884 -0.71675613  0.1935546  0.7205244\n[4,] -0.2778838  0.1106169  0.09932407  0.32651308  0.4941151  0.3698245\n[5,] -0.0953357  0.1718259  0.20884105 -0.09524714  0.1996434 -0.4427955\n[6,]  0.4486085  0.6150578 -0.74089569  0.05003565  0.1870943 -0.3900015\n          [,367]      [,368]      [,369]     [,370]     [,371]      [,372]\n[1,]  0.17136394  0.01486145 -0.16404042 -0.3702804  0.1525510 -0.27203927\n[2,]  0.21782391  0.19637431 -0.09873834  0.3694562 -0.2832218 -0.02005864\n[3,]  0.34921534  0.45141083 -0.08544331 -0.2123703  0.2202819  0.48460927\n[4,] -0.03460419 -0.23792104 -0.46585689  0.3520054  0.1074481 -0.06017427\n[5,]  0.52038496 -0.14042838  0.54634764 -0.4868619  0.3982630  0.37231688\n[6,]  0.06209068  0.02968562  0.18082903  0.3565038 -0.2514634 -0.59118982\n          [,373]      [,374]      [,375]      [,376]      [,377]      [,378]\n[1,]  0.08590915 -0.59436916 -0.12503741 -0.18251974  0.01229705 -0.09803513\n[2,] -0.39981204 -0.35455538  0.56532348 -0.11884537  0.02217829  0.46848786\n[3,]  0.14228042 -0.23389701  0.14262093  0.04255654 -0.49861073  0.08225080\n[4,] -0.01861648  0.16671401  0.32030134 -0.16941212 -0.66201831 -0.15706514\n[5,] -0.31618082  0.07393994  0.04944227  0.52310454  0.11344578 -0.32748028\n[6,]  0.14541019  0.58676608 -0.15723526 -0.04527442 -0.35423205 -0.07563252\n          [,379]      [,380]      [,381]      [,382]      [,383]     [,384]\n[1,]  0.18997873 -0.04039059 -0.03409434 -0.22532376 -0.34893533  0.5310446\n[2,]  0.06419988  0.31178024  0.13337016  0.05228216 -0.22371738 -0.6648214\n[3,] -0.20643924 -0.03944470 -0.67993453 -0.24538687 -0.41492105 -0.1172485\n[4,] -0.49523365 -0.14420102 -0.12014321 -0.69603956  0.45950234 -0.4373850\n[5,] -0.08622509 -0.42939292  0.36332751 -0.05443710  0.01513745 -0.1140039\n[6,] -0.20592945  0.30260273  0.35532961  0.05496190 -0.38592658 -0.8611695\n          [,385]      [,386]     [,387]      [,388]       [,389]     [,390]\n[1,] -0.12678240 -0.20469315  0.2246877 -0.44382298 -0.868173861  0.2489340\n[2,] -0.38962653  0.20344485 -0.1560382  0.04877028 -0.079558211  0.1334184\n[3,]  0.19292564  0.09758139 -0.1900989  0.40426119 -0.033110221 -0.7605776\n[4,]  0.15841388  0.29795428  0.5523953  0.61132284 -0.003995128 -0.3550463\n[5,] -0.06353585 -0.06801936  0.1930796  0.12641002  0.575790500 -0.5474381\n[6,]  0.25115215  0.32002158  0.1049670 -0.31636788 -0.414181770 -0.3773210\n          [,391]      [,392]      [,393]      [,394]      [,395]      [,396]\n[1,]  0.06520607 -0.57908735 -0.01048255 -0.70907593  0.07002794 -0.16897561\n[2,] -0.31527870  0.19354908 -0.10949287 -0.56544104  0.03334153 -0.41923420\n[3,]  0.03933011  0.56327992 -0.18766015  0.15374179  0.07041464  0.23807775\n[4,] -0.29421131 -0.16047062 -0.05672059 -0.05994981 -0.55931372 -0.20038356\n[5,] -0.44445554  0.06065739  0.14360665  0.44178605  0.07930177  0.03008896\n[6,] -0.25637259 -0.28363035  0.07907430  0.08832997 -0.12201386  0.58020588\n           [,397]     [,398]      [,399]      [,400]     [,401]      [,402]\n[1,] -0.460031855 -0.1717405 -0.26850430 -0.10576106  0.5927612 -0.01652435\n[2,]  0.003927032  0.6355305 -0.18017066 -0.18948300 -0.4128911 -0.46684501\n[3,]  0.173619457  0.3306740  0.10426913  0.14669490 -0.2320758 -0.02272399\n[4,] -0.012309008 -0.2711482  0.02698542  0.11129326  0.3067006 -0.21657365\n[5,] -0.013584783 -0.2678473 -0.09980918 -0.03784434 -0.2166127  0.11792444\n[6,]  0.460465265  0.3643314 -0.08138057  0.01082324  0.1768173  0.42770871\n          [,403]      [,404]      [,405]      [,406]      [,407]       [,408]\n[1,] -0.15202678 -0.06445769  0.01785783 -0.73171015 -0.37037464 -0.431306469\n[2,] -0.40199011  0.31527744  0.59591829 -0.02243327 -0.12541671  0.005019165\n[3,] -0.27909226  0.42109755  0.42215281 -0.05601329 -0.52253760  0.140401308\n[4,] -0.01607514  0.29062208 -0.04445835 -0.68914025  0.19473260 -0.488789349\n[5,]  0.32201745 -0.38306041 -0.06337666  0.05544417  0.05060087 -0.491755898\n[6,] -0.09297370  0.53997475  0.39453904 -0.05034610  0.02727751  0.549616665\n          [,409]     [,410]        [,411]      [,412]      [,413]     [,414]\n[1,]  0.13562343 -0.3425252  0.1000060990 -0.16778120  0.11179961  0.6763484\n[2,]  0.02125144  0.0548219  0.1584947792  0.51091983  0.14467276  0.2952366\n[3,]  0.00628632  0.1868796  0.0218901263  0.26723598 -0.46286019  0.2116933\n[4,] -0.11940137  0.5506835 -0.4705516067 -0.04561539  0.41471266  0.4096488\n[5,]  0.03111906 -0.1058748 -0.0006392585  0.17152797 -0.32090512  0.1864479\n[6,] -0.07831728  0.5763687  0.5145981410  0.16606109  0.06779242 -0.3842250\n          [,415]      [,416]     [,417]      [,418]       [,419]      [,420]\n[1,] -0.47612356  0.26810017 -0.4112034  0.16621748 -0.005705564 -0.08396981\n[2,]  0.29489943  0.33640943 -0.2064435 -0.13832968  0.165421524 -0.10123117\n[3,]  0.09760409  0.37490723  0.1515735 -0.56682398  0.385204600 -0.13409005\n[4,] -0.04278414  0.66854802  0.2814347 -0.06841825  0.045452689 -0.26768325\n[5,] -0.21027636 -0.06621377 -0.3023150 -0.20403085 -0.255871847  0.12318588\n[6,]  0.57256914  0.29920874  0.5953263  0.03191436 -0.398792453  0.31799706\n          [,421]       [,422]      [,423]      [,424]     [,425]      [,426]\n[1,]  0.20653109  0.102170923  0.08990579 -0.09428611  0.1866321  0.18056980\n[2,] -0.02765698  0.009483447 -0.16598444  0.09767317 -0.1577062  0.07919953\n[3,] -0.28879557  0.052107032 -0.32024551  0.11989732 -0.4372349 -0.33354404\n[4,]  0.46758045  0.249840551  0.04979111 -0.33117372 -0.3750579 -0.36771812\n[5,] -0.25311282 -0.184745460  0.07094934  0.26892854 -0.1205040 -0.40938436\n[6,]  0.27251690  0.029617579  0.05810013  0.10431322  0.4664503  0.02997118\n          [,427]      [,428]      [,429]        [,430]      [,431]      [,432]\n[1,] -0.38019126 -0.29979987 -0.02231279 -0.1008024974 -0.45742276 -0.17159994\n[2,] -0.10388188  0.19636013  0.27296389 -0.1587751421  0.07551861  0.05184164\n[3,] -0.03602556 -0.49882869  0.51802429  0.1119884690  0.08350058 -0.24123079\n[4,] -0.10440830 -0.04187737  0.15891297  0.0005480273  0.12301323 -0.38748505\n[5,] -0.09219326  0.28795616 -0.34785084  0.0920628715  0.06761922  0.26946926\n[6,]  0.14724129  0.01087140  0.15011991  0.4090068670  0.13348763  0.54364396\n          [,433]     [,434]     [,435]     [,436]      [,437]     [,438]\n[1,]  0.51430757  0.7294772 -0.1146830  0.1946885 -0.37293206  0.1497019\n[2,] -0.63637976  0.3117007  0.2738385  0.3047910  0.32126121  0.4567863\n[3,]  0.53926596  0.2335182 -0.3456248 -0.4456803  0.15909499 -0.1388235\n[4,]  0.35006751  0.3317292 -0.2432458 -0.4270104  0.10985361  0.2898999\n[5,] -0.36877289 -0.1909717  0.4210998 -0.3648321  0.05626772  0.1384923\n[6,] -0.09777117  0.2623737 -0.4766396  0.3654136 -0.02194745  0.1245863\n          [,439]      [,440]      [,441]      [,442]        [,443]      [,444]\n[1,]  0.59701019 -0.17842664  0.06484315 -0.01326565 -0.2979023682 -0.38481366\n[2,] -0.39808368 -0.01274426 -0.35868046  0.51323686 -0.0002652848 -0.10866064\n[3,]  0.07813605 -0.17658030 -0.08108867 -0.70192780  0.0645926571  0.47443567\n[4,]  0.31377142 -0.14056714  0.27587613 -0.19319000  0.3389203689  0.23180745\n[5,] -0.03278973 -0.23960506 -0.24101893 -0.22444448  0.0679675372  0.07285968\n[6,] -0.22227486 -0.43246161  0.21247840 -0.43147721 -0.3420082838  0.63018713\n           [,445]      [,446]      [,447]     [,448]     [,449]      [,450]\n[1,] -0.557542056  0.08756943  0.22588721  0.2108959  0.2421134 -0.03148753\n[2,] -0.357867732 -0.52786951 -0.02718941  0.2726673  0.3501583  1.32382859\n[3,]  0.140451916  0.44636618 -0.48044567  0.7852886 -0.4911932  0.14173195\n[4,]  0.063286884  0.69923223  0.21055753 -0.2725821  0.1410523 -0.34681076\n[5,] -0.177758015 -0.14283337 -0.16984468  0.2124864 -0.4101778  0.25180836\n[6,]  0.002008818  0.07800827  0.06700246  0.3607260 -0.3462320 -0.10576105\n            [,451]      [,452]     [,453]      [,454]      [,455]      [,456]\n[1,] -0.3537788927  0.22184777  0.4631605  0.07997679 -0.21020152 -0.23676385\n[2,]  0.4808586532  0.09739731  0.3110433  0.52170039 -0.34550994 -0.48350826\n[3,]  0.0002807364 -0.20615301  0.3046474 -0.41014812  0.06412067 -0.04363582\n[4,]  0.7264445577 -0.40268196 -0.1608286 -0.18897485 -0.37953971  0.75110819\n[5,] -0.4380663843  0.39903050 -0.1093095 -0.12318177  0.02799362  0.38221238\n[6,]  0.0078768142  0.25361071  0.2992730  0.15581731 -0.19524204 -0.17168404\n          [,457]      [,458]     [,459]      [,460]      [,461]      [,462]\n[1,]  0.73753850 -0.20911765 -0.2329159 -0.22529337 -0.14947090 -0.57075789\n[2,]  0.03429263 -0.73677472 -0.0351492  0.38239051 -0.13314020  0.64377156\n[3,] -0.55587619  0.29147157 -0.1190712 -0.14923896 -0.49831720 -0.02703229\n[4,] -0.05645878  0.37318299  0.0659379 -0.11252775  0.07813355  0.38967150\n[5,]  0.19338427  0.17817558 -0.8158899  0.06034941  0.15072492 -0.06185814\n[6,]  0.51927385  0.06692231  0.7195762  0.60626365  0.50904233  0.26292618\n          [,463]       [,464]     [,465]      [,466]     [,467]      [,468]\n[1,]  0.38686726  0.427314020 -0.2526092 -0.21025057  0.1323393 -0.30589672\n[2,]  0.67507639 -0.310121901 -0.3714107  0.24311122 -0.1749678 -0.15236195\n[3,] -0.29472324  0.001760877  0.3738489  0.03518998 -0.6331248 -0.08833285\n[4,] -0.09423193 -0.179336965  0.4466165 -0.45396227 -0.2222434 -0.47933152\n[5,]  0.01708414 -0.752952234 -0.4152743 -0.47710130 -0.7114625  0.37496298\n[6,] -0.18566731 -0.325402059 -0.4993718  0.17311787 -0.3273760  0.29423611\n          [,469]      [,470]     [,471]      [,472]     [,473]      [,474]\n[1,]  0.11254132  0.15406935  0.4814986  0.39249177  0.2984528  0.05253844\n[2,] -0.09938599  0.63858548  0.1881910  0.30219395 -0.3694761  0.34854410\n[3,] -0.26425984 -0.17896219 -0.5077206  0.59164767  0.6989132  0.18431193\n[4,]  0.19654948  0.59306018 -0.3451847  0.18212271  0.3304450 -0.28759449\n[5,]  0.45785155 -0.01524817 -0.1367250  0.34138409  0.1904130 -0.88713673\n[6,]  0.04924947 -0.33825871  0.2109675 -0.02335246  0.2862773 -0.35808640\n          [,475]       [,476]      [,477]      [,478]     [,479]        [,480]\n[1,] -0.05911753  0.540896963  0.37820152  0.37977810 0.36055419  0.1856465769\n[2,]  0.10843808 -0.209325141 -0.71515564 -0.03464941 0.57356947 -0.0121416848\n[3,] -0.31176849 -0.159264411 -0.18586071  0.30317695 0.07115385 -0.2055430862\n[4,]  0.21819653 -0.291824004 -0.48325755  0.09760624 0.43323554 -0.0003150309\n[5,]  0.03733031 -0.097270821 -0.71845246  0.22549691 0.29144781  0.2580765160\n[6,] -0.69298571  0.001296756 -0.04770297  0.18938816 0.68169758 -0.1339076052\n          [,481]     [,482]       [,483]      [,484]       [,485]       [,486]\n[1,] -0.18431341 -0.4944663 -0.455584517  0.45166635  0.354865498  0.297160286\n[2,] -0.01486940 -0.1026563  0.278326949 -0.12253940  0.280185026  0.103780956\n[3,] -0.06340334 -0.8459582 -0.351974433  0.17950665  0.612131355  0.693636335\n[4,] -0.17102138  0.2174059 -0.096814046 -0.31620209  0.055413091 -0.009697685\n[5,]  0.59815449 -0.2406182  0.272553718 -0.04648781  0.253672857  0.327161325\n[6,] -0.05426193  0.1399019 -0.009987263  0.35643189 -0.008211332 -0.046248716\n         [,487]     [,488]     [,489]     [,490]      [,491]      [,492]\n[1,]  0.1110773  0.0341099 -0.1883385  0.1919568 -0.06823721  0.16587837\n[2,] -0.5202498 -0.2158285  0.3628673  0.3908094 -0.65874178  0.19510062\n[3,] -0.3473153  0.0517154  0.1335384  0.1358368 -0.17825757  0.28637784\n[4,] -0.2924125  0.0748904  0.3619884 -0.1391993  0.09192500 -0.41093913\n[5,]  0.5322261  0.7969036 -0.5268194  0.1503623 -0.16019413  0.15673991\n[6,] -0.4184006 -0.1956835  0.2110287 -0.3635931 -0.21212146 -0.02613751\n          [,493]      [,494]      [,495]      [,496]      [,497]     [,498]\n[1,] -0.60681797 -0.09692481  0.07077402 -0.01742983 -0.06347092 -0.1159154\n[2,]  0.45373617 -0.51318126  0.57811588  0.31646569 -0.22195256 -0.1902982\n[3,] -0.09478260  0.08840698  0.45856872 -0.15747204 -0.27788247  0.2920483\n[4,]  0.01214098  0.27744895 -0.61213007  0.22549327 -0.39561827 -0.3976728\n[5,]  0.34984502  0.12694317  0.86820682 -0.43792118 -0.18848771 -0.5484061\n[6,] -0.01816589  0.15336864 -0.30984549  0.03702601  0.11204292 -0.1918288\n          [,499]      [,500]     [,501]      [,502]       [,503]      [,504]\n[1,]  0.06786624  0.43686410  0.2343687  0.22201987 -0.214681415 -0.14572353\n[2,] -0.21447311 -0.01521177 -0.3052207  0.05345088  0.169921221 -0.19390352\n[3,] -0.10879173 -0.66522135 -0.3364155 -0.45903349  0.335881614  0.36813653\n[4,]  0.34683631 -0.60803038  0.3815464 -0.05022207 -0.007747593 -0.06414013\n[5,] -0.24109123 -0.48160675 -0.2332325 -0.46800934 -0.288448961  0.09319399\n[6,]  0.23421668 -0.04368893  0.2353618  0.08222640 -0.327244550  0.21546210\n          [,505]      [,506]      [,507]      [,508]      [,509]      [,510]\n[1,] -0.30702955 -0.11515080  0.19541058  0.41910595 -0.46705011  0.41063678\n[2,] -0.45701637  0.22857954 -0.32028325 -0.23388360  0.31298334 -0.47979347\n[3,] -0.28461618 -0.06061915 -0.24011757 -0.06977114 -0.42583606  0.04524885\n[4,] -0.18980978 -0.15551719  0.08454181  0.18971790  0.12295753 -0.58451795\n[5,] -0.31668107 -0.20385634  0.58059533  0.23084653 -0.01182655 -0.06737222\n[6,] -0.09248798  0.49487762 -0.41822225 -0.73242205  0.03553146 -0.80273414\n          [,511]       [,512]      [,513]      [,514]      [,515]     [,516]\n[1,] -0.32217497 -0.796860124 -0.05673925  0.28387258  0.38036880  0.0971856\n[2,]  0.45778618  0.041212004 -0.11469479  0.26847140  0.59432445 -0.2077396\n[3,] -0.01038586  0.084134148  0.32574282 -0.05443216  0.19045143  0.4147241\n[4,]  0.01855526  0.006592487  0.23622455 -0.08224195  0.04456854 -0.3226824\n[5,] -0.10641498 -0.349511938 -0.10104148 -0.38094080 -0.14404081 -0.3010055\n[6,]  0.26732982  0.234095016  0.12109701  0.15946951 -0.54143808 -0.1950341\n          [,517]      [,518]     [,519]     [,520]     [,521]      [,522]\n[1,]  0.04422212 -0.42182186  0.2214855 -0.3074026  0.4326662 -0.21947122\n[2,] -0.19098043  0.05179651 -0.4318614  0.3779699 -0.1975806 -0.14708845\n[3,]  0.10832195  0.52240700  0.3992250 -0.2336062 -0.2792358 -0.23268314\n[4,]  0.35292013 -0.16997020 -0.2261346  0.3409197 -0.3070115 -0.18359299\n[5,]  0.30163052 -0.29016221 -0.3124632  0.1470260  0.4690835 -0.36428342\n[6,]  0.40176518 -0.02029650 -0.2909309 -0.3093442  0.3367011 -0.04682464\n          [,523]      [,524]       [,525]       [,526]      [,527]      [,528]\n[1,]  0.21478937  0.17458810 -0.255558884 -0.008320695  0.13804503 -0.04476702\n[2,] -0.21582779 -0.06451469  0.130805594  0.311496469  0.30335185 -0.22872852\n[3,]  0.09578445 -0.05528670 -0.493686438  0.239102330 -0.26659132  0.41948634\n[4,] -0.28586457 -0.03963148  0.199248046  0.157874039 -0.10281439 -0.14044805\n[5,] -0.23834680  0.04698742  0.003530091 -0.430594136  0.40037344 -0.10085379\n[6,]  0.47203917  0.10046919  0.226232473  0.216887428 -0.06812282 -0.24816291\n           [,529]     [,530]      [,531]      [,532]      [,533]       [,534]\n[1,]  0.657473898  0.3380609 -0.25138702  0.11261030 -0.17972819 -0.510420283\n[2,]  0.110089220  0.2224392 -0.20852746 -0.31387934 -0.55105697  0.389178885\n[3,] -0.112291339 -0.2424182 -0.06485872 -0.34090837  0.42141277 -0.177036781\n[4,]  0.001902467  0.2211415  0.08568682 -0.49748890  0.07918719 -0.063593468\n[5,]  0.046414622  0.1188610 -0.24391205  0.38740381 -0.07306558  0.074776124\n[6,] -0.047551890 -0.1684219  0.20341299 -0.03759684  0.32424477  0.001326059\n          [,535]      [,536]      [,537]     [,538]       [,539]      [,540]\n[1,]  0.10006341 -0.13003064 -0.05122102  0.3118528  0.531047647 -0.07704179\n[2,]  0.01868674  0.22947355 -0.61162076 -0.0479353 -0.374790799  0.38133902\n[3,] -0.02515101 -0.07252174 -0.08771391 -0.6742679  0.032642224 -0.55230224\n[4,] -0.25165518 -0.08252036 -0.60138251  0.2541104  0.371989450 -0.50863237\n[5,] -0.21864377  0.20951483 -0.12625840 -0.4102460  0.112612997 -0.22539034\n[6,]  0.28711306  0.28224369  0.97132663  0.4109884 -0.008497267 -0.11550076\n          [,541]     [,542]      [,543]     [,544]      [,545]      [,546]\n[1,]  0.35547005  0.5239986  0.16016781  0.1804126  0.06895628 -0.08900948\n[2,] -0.15788106 -0.2660451  0.44363223  0.2848005  0.13789795  0.55341309\n[3,] -0.07838234  0.3475581  0.07418316  0.4171709 -0.05238170  0.49178661\n[4,] -0.03423310  0.1966533  0.09725735 -0.3916995 -0.35004324 -0.44229616\n[5,] -0.05558831  0.1019728 -0.19631091  0.2695402  0.14893391 -0.16783966\n[6,]  0.09503509 -0.3050194 -0.01201814  0.9737991  0.03467088 -0.50762079\n          [,547]     [,548]     [,549]      [,550]      [,551]      [,552]\n[1,] -0.04931468 -0.2561999 0.01880408 -0.43903894  0.21547146 -0.28659071\n[2,] -0.54244077  0.2593199 0.40982968  0.31273857 -0.14493967 -0.10145343\n[3,]  0.04583279 -0.4655111 0.39503831 -0.20221173 -0.28676178  0.21679388\n[4,]  0.20963778 -0.7617875 0.60257388  0.04115639 -0.42570695 -0.09498657\n[5,] -0.15338307 -0.9613529 0.06324548 -0.13114167  0.03417026  0.59229173\n[6,] -0.22850786 -0.5571972 0.01739018  0.54648269 -0.40455731  0.17459616\n           [,553]       [,554]      [,555]      [,556]      [,557]     [,558]\n[1,] -0.423147848  0.361626477 -0.13995681  0.02727235  0.21102103  0.1500395\n[2,]  0.078678329  0.050995189 -0.02328470 -0.06689428 -0.36720993 -0.2509729\n[3,]  0.687272975 -0.446622584  0.84808105  0.05206990 -0.04182861 -0.0455005\n[4,]  0.002002581 -0.007450377  0.27588210 -0.39563736  0.03014985  0.3256925\n[5,] -0.156890994  0.532372306 -0.63779451 -0.05648462  0.24988536  0.0119157\n[6,] -0.257789735  0.297900773  0.08637743  0.29182474  0.01376031  0.1360523\n         [,559]      [,560]       [,561]     [,562]     [,563]      [,564]\n[1,]  0.1069510 -0.57457931 -0.251824998 -0.1120578 -0.3473721 -0.05655036\n[2,] -0.2002890 -0.31133015 -0.003100951 -0.6307264 -0.5501258  0.07931756\n[3,]  0.4690047 -0.09208055  0.254907601  0.5158715 -0.6570666  0.20365478\n[4,]  0.1628667 -0.20622817 -0.002456666  0.1309886 -0.1991904 -0.30323210\n[5,]  0.2486152 -0.09560924 -0.408741046 -0.0517305  0.3090741  0.11357015\n[6,] -0.1373482  0.49928848 -0.254822779 -0.1197610 -0.1134363 -0.54623460\n            [,565]       [,566]     [,567]      [,568]      [,569]       [,570]\n[1,] -0.1102654210  0.351518280 -0.3685814 -0.40398355  0.08158743  0.090307349\n[2,] -0.3673222844  0.003008438  0.4989169  0.24725510 -0.27122580 -0.069121272\n[3,] -0.0004045228  0.092648251 -0.1695308  0.05793871  0.07919279  0.334112737\n[4,]  0.0328395389 -0.214255798  0.5045710  0.15565366  0.12064310 -0.002972905\n[5,] -0.0524158697  0.018408590  0.7042535 -0.12081879  0.55765551 -0.009576705\n[6,] -0.0678710275  0.081584567 -0.0028367 -0.15404331 -0.16884554  0.108288286\n         [,571]      [,572]      [,573]     [,574]      [,575]     [,576]\n[1,]  0.1021754 -0.31493175 -0.23763410 -0.2356964 -0.14666078  0.2159747\n[2,]  0.3127978 -0.01955838  0.18423359 -0.1832260 -0.04021197  0.4134444\n[3,] -0.4381178  0.15246726 -0.29947548 -0.6245624 -0.07035252 -0.2469688\n[4,]  0.3707004  0.09111639 -0.26931340  0.1062775  0.02929816  0.1155611\n[5,]  0.1016502  0.06333600 -0.17645404 -0.6649058 -0.24650835  0.3974669\n[6,] -0.3336380  0.35828074 -0.07243131 -0.1385432 -0.13887956 -0.1811757\n          [,577]      [,578]      [,579]      [,580]      [,581]      [,582]\n[1,]  0.06141004  0.55777960 -0.26803447 -0.17444906  0.50953076  0.03100814\n[2,] -0.53642294  0.46546258 -0.02464078 -0.07676114 -0.04572445  0.21684919\n[3,]  0.14759961 -0.04360153 -0.23932807  0.30815845  0.16676546  0.08943849\n[4,]  0.59768040 -0.34377971 -0.47138455 -0.09809591  0.06882402  0.04606305\n[5,]  0.07304730  0.36620946  0.32708211  0.03318574  0.13663515 -0.20288803\n[6,]  0.22628494  0.14867566 -0.37109134 -0.49218571 -0.29472377 -0.83178126\n         [,583]      [,584]      [,585]      [,586]      [,587]      [,588]\n[1,] -0.3854748  0.26931486 -0.03398922  0.09561808  0.07002125 -0.21304139\n[2,]  0.6385797  0.32396390  0.36685966  0.50853273  0.29877038  0.73633621\n[3,]  0.1458300  0.50972121  0.16929522 -0.20068698  0.66259755 -0.04542857\n[4,]  0.3129732 -0.11235583 -0.09227134  0.10457003  0.12271833  0.32504870\n[5,] -0.1647398  0.19765815 -0.08559158 -0.05253529  0.22757702 -0.01260020\n[6,]  0.2910565  0.01705804  0.30897422  0.24127753 -0.18749291 -0.07887805\n           [,589]     [,590]       [,591]      [,592]      [,593]     [,594]\n[1,] -0.050019448 -0.3266944  0.173348950  0.34382582  0.35425561  0.3447510\n[2,] -0.001734670  0.6936942 -0.127368150  0.54124745 -0.01198434 -0.6328451\n[3,] -0.007118852  0.2190098  0.190449164  0.41912624 -0.14565054 -0.2104186\n[4,] -0.171426552  0.1467240 -0.406950661  0.18773515 -0.09942373 -0.2340925\n[5,]  0.445584713  0.1455118  0.209501125 -0.22789972 -0.53816486 -0.4711068\n[6,]  0.167777989 -0.3454764  0.004492143 -0.06026715  0.06758798  0.7347656\n          [,595]      [,596]      [,597]      [,598]      [,599]      [,600]\n[1,]  0.07964180  0.08414630  0.61992037 -0.28420054 -0.47236984 -0.04845636\n[2,] -0.76535476  0.07911255  0.11552011  0.04042891  0.15929628 -0.37300863\n[3,]  0.04553456  0.37012655  0.07477506 -0.42678183 -0.31022799 -0.69280153\n[4,] -0.31451388  0.07250942 -0.48941632  0.40236769  0.16162389 -0.62448160\n[5,] -0.13256262 -0.40429151  0.30362842 -0.25534415  0.46592618 -0.06835387\n[6,]  0.05520652  0.04355634  0.30573381 -0.38479971  0.07287303 -0.02435195\n         [,601]      [,602]      [,603]      [,604]        [,605]      [,606]\n[1,]  0.4553517 -0.08359264 -0.24375238  0.33907660 -6.300834e-05  0.10199302\n[2,]  0.7345551 -0.09612456  0.08764218 -0.42559452 -3.199095e-01 -0.10964277\n[3,]  0.2654573 -0.02952814  0.05628434 -0.28250122  3.114084e-01 -0.09536187\n[4,]  0.2307790 -0.56079890  0.23287042 -0.48968575 -2.190560e-01 -0.16877021\n[5,]  0.3908463 -0.23176438 -0.43660917  0.04964101 -2.854902e-01 -0.19787328\n[6,] -0.3891086  0.08386422  0.17186756  0.58586399  5.277736e-01  0.39081058\n          [,607]     [,608]      [,609]       [,610]       [,611]     [,612]\n[1,]  0.24110202 -0.1852803 -0.50393014 -0.157868583 -0.005439201  0.6133956\n[2,]  0.15877804 -0.2316798 -0.08709650 -0.247858869  0.104627525 -0.6004315\n[3,]  0.36945164  0.2708595 -0.11356414  0.342271492  0.440247836  0.1680949\n[4,]  0.37454961 -0.3089183  0.08560533  0.639719815  0.070164336 -0.3467941\n[5,] -0.06628182  0.1951190  0.06147034  0.004808195 -0.208331466  0.2989094\n[6,] -0.11501500 -0.4671641  0.11890647 -0.006796670  0.121246426 -0.7243389\n          [,613]      [,614]     [,615]      [,616]      [,617]      [,618]\n[1,]  0.33796648  0.39518872 -0.2217410 -0.05342671 -0.08561213 -0.03324316\n[2,] -0.21120769 -0.07507081  0.2078200 -0.56250827 -0.18581153  0.27382124\n[3,]  0.21543765  0.29967686  0.1085626  0.58341696 -0.04311695  0.28726762\n[4,]  0.03588860 -0.05578078 -0.4050777  0.77533122 -0.11417332 -0.46033775\n[5,] -0.05294394  0.14849402 -0.3882749 -0.10232975  0.04282011  0.09088152\n[6,] -0.02268811  0.09972612 -0.3457270 -0.04048581  0.43383240 -0.44031886\n          [,619]       [,620]      [,621]      [,622]      [,623]     [,624]\n[1,] -0.38580484 -0.113161822  0.47266838  0.45606152  0.34654956  0.0870018\n[2,]  0.18190919 -0.294163844 -0.11568945 -0.42117318  0.29362119  0.1561241\n[3,]  0.14051253  0.280742039 -0.59800442 -0.27788744  0.10149020  0.3356282\n[4,]  0.13208505 -0.006873022  0.18576168 -0.07901751 -0.04204649 -0.1876718\n[5,] -0.05777608 -0.071361475  0.22645664  0.23389417  0.12642623 -0.6103176\n[6,] -0.21841822 -0.417289946  0.05289681  0.03237302  0.18476311  0.2462910\n           [,625]     [,626]      [,627]      [,628]       [,629]      [,630]\n[1,]  0.049745213 -0.2229075 -0.02249464 -0.31983992  0.008838464 -0.29920679\n[2,]  0.306288476 -0.2278275  0.02876487 -0.15271889  0.224446284  0.09438772\n[3,] -0.009953495  0.3062618 -0.59343060  0.35220549 -0.628198044 -0.01443779\n[4,]  0.125895492 -0.4928207  0.07316572  0.49603670  0.113946273 -0.44552448\n[5,] -0.279447379 -0.2728661  0.18009073  0.18672113  0.326285431  0.01685139\n[6,]  0.096131024 -0.5183007  0.21980802  0.06882949  0.294273322 -0.43610552\n         [,631]       [,632]     [,633]     [,634]      [,635]      [,636]\n[1,]  0.7926366 -0.330739619 -0.2944930 -0.2428669  0.50318785 -0.07495033\n[2,] -0.3328429 -0.186120939  0.1593312  0.5507064 -0.22415867 -0.26769670\n[3,]  0.9788629  0.315120161 -0.2547986  0.0142139 -0.55008461 -0.17440822\n[4,] -0.5226098  0.164471343  0.3097238  0.2030663 -0.19125215  0.04319933\n[5,] -0.3986450  0.189944657 -0.5732559  0.2060189  0.22276360 -0.27892152\n[6,]  0.2059827  0.009352586  0.2459596 -0.1581782 -0.01382543 -0.20153410\n         [,637]      [,638]      [,639]      [,640]     [,641]      [,642]\n[1,]  0.4137448  0.24407301 -0.03279017  0.47216467 -0.3496431 -0.58438065\n[2,]  0.1801718  0.78295053 -0.35492353  0.03895605  0.1239859 -0.17344719\n[3,] -0.3174980 -0.24988197 -0.28379257  0.16717943 -0.4645169 -0.12858583\n[4,]  0.2912637 -0.45614209  0.13796200  0.18845956 -0.1630745 -0.28908354\n[5,] -0.1501789  0.06754271  0.05251834 -0.25096343  0.6534082 -0.01749221\n[6,]  0.1658156 -0.18415778 -0.28324840 -0.40643956 -0.2899701  0.13347325\n         [,643]      [,644]      [,645]      [,646]      [,647]       [,648]\n[1,] -0.1317508  0.64271774  0.30895151 -0.22356045  0.39644313 -0.347240836\n[2,] -0.1360519  0.46700364 -0.17783869  0.17365722 -0.10367696 -0.227421485\n[3,] -0.3010768 -0.03457544 -0.18148694 -0.07072899 -0.44766442 -0.005620386\n[4,] -0.2944260  0.01851617 -0.50126243  0.05431665 -0.03684192  0.555604679\n[5,]  0.1569930 -0.04042020 -0.08586797 -0.01072609 -0.57147443 -0.087220837\n[6,] -0.1331867 -0.38927999 -0.03942399  0.85363716  0.42053231  0.353671137\n           [,649]      [,650]      [,651]     [,652]      [,653]      [,654]\n[1,]  0.005562341 -0.19540924  0.19571726 -0.1081672 -0.16000002 -0.22602694\n[2,] -0.074830924 -0.55820963  0.14986586 -0.3258350 -0.02879080 -0.16096130\n[3,] -0.147637645  0.15403709 -0.09587155 -0.2786709 -0.35388695  0.06546127\n[4,]  0.461052542 -0.23111787 -0.45380044  0.3857387 -0.29631925  0.08960303\n[5,]  0.391861451 -0.25854896 -0.00148444 -0.5325848 -0.02110959  0.37795851\n[6,]  0.146723550 -0.05609325 -0.11607827  0.1262215 -0.08660282 -0.49644942\n          [,655]       [,656]      [,657]      [,658]     [,659]      [,660]\n[1,] -0.02887448  0.286390471  0.17036589 -0.17429780  0.5129170 -0.10116289\n[2,] -0.14277746 -0.558447669  0.53666288  0.55259614  0.1197066 -0.26062253\n[3,] -0.05803880 -0.276924851 -0.17375252 -0.09388074 -0.2206450 -0.31885203\n[4,] -0.15672254 -0.333657002  0.19892416 -0.04099448 -0.5328783  0.23203954\n[5,] -0.73896391 -0.008335323  0.07008501 -0.09904878 -0.3174589  0.27930920\n[6,]  0.34101074 -0.022608818 -0.58189905 -0.02801949  0.5654453 -0.02433052\n            [,661]      [,662]      [,663]     [,664]      [,665]      [,666]\n[1,] -0.2479959068 -0.05973182 -0.28481768  0.1291056  0.33473261 -0.19508369\n[2,]  0.1595051296 -0.78599933  0.08514238  0.3856220  0.37470851 -0.57041945\n[3,]  0.0007202495 -0.42433288 -0.03509737 -0.1894898  0.09911249 -0.05029394\n[4,] -0.1458194766  0.40998475  0.12305287 -0.7435243  0.06463607 -0.25352194\n[5,] -0.2590985973 -0.54750590  0.30623392  0.1004649 -0.23363807 -0.02955971\n[6,]  0.1053539858 -0.45926913  0.13650739  0.2998725  0.04715705 -0.01732202\n          [,667]       [,668]      [,669]      [,670]      [,671]      [,672]\n[1,]  0.50983418 -0.037758245  0.13060792 -0.13496441 -0.27568852 -0.34540675\n[2,] -0.04617195 -0.267938635 -0.26069390 -0.30873659 -0.11463697  0.05450932\n[3,]  0.31060278  0.061389082 -0.06630817  0.12372586 -0.12067007  0.86529709\n[4,] -0.35611811  0.069368998  0.26465294  0.53715636  0.07874532  0.04130664\n[5,] -0.29887194  0.003499803  0.08197061 -0.03903872  0.70700495 -0.21329547\n[6,] -0.14236225  0.257278155  0.26511567  0.18052147 -0.01072298  0.14155338\n          [,673]      [,674]      [,675]      [,676]      [,677]       [,678]\n[1,] -0.08838027  0.72430241 -0.07146727  0.19002158  0.40694892 -0.267960127\n[2,] -0.40089580 -0.49999877 -0.20700793 -0.36402141  0.23595972 -0.390506897\n[3,] -0.28699086  0.04477845 -0.18401955 -0.39806942  0.23460069 -0.431818591\n[4,] -0.14023968  0.72617702 -0.13032977 -0.16277422  0.01544636 -0.579160384\n[5,]  0.04256688  0.33703760 -0.37902480  0.04524686  0.11992946  0.009952342\n[6,] -0.21054914  0.43902706 -0.26274074 -0.17971246 -0.53498230 -0.048760761\n          [,679]      [,680]      [,681]      [,682]      [,683]      [,684]\n[1,] -0.05939528 -0.07167077  0.08555376 -0.11913813  0.32406083  0.27337835\n[2,]  0.63899961 -0.14379016 -0.05490515 -0.14502882  0.09343072 -0.09450551\n[3,]  0.13111923  0.36472224 -0.21684572  0.02730738  0.02203934 -0.74095726\n[4,] -0.64058818 -0.80323345 -0.16703979 -0.29518312 -0.40901182 -0.16405157\n[5,]  0.75347091  0.23230331  0.26907027 -0.20478703  0.49689359  0.86320010\n[6,]  0.57385416  0.38507260  0.04713732 -0.01064391  0.33017439  0.49395260\n          [,685]      [,686]      [,687]     [,688]      [,689]      [,690]\n[1,] -0.03211326  0.49312539 -0.01609690 -0.4148169  0.02315483  0.27496074\n[2,] -0.29095694 -0.58531222  0.57379647  0.2002697  0.09568214  0.10359561\n[3,] -0.29193354 -0.24445143  0.09407467 -0.4587420  0.18761668 -0.08921189\n[4,] -0.06444544  0.38974627 -0.44115761 -0.1138303 -0.12019588  0.07234242\n[5,] -0.57377770  0.09983073  0.74742450  0.2396244  0.34970654 -0.30337746\n[6,] -0.10668605  0.30603941 -0.57354276 -0.2748165 -0.25593728  0.24130743\n          [,691]     [,692]      [,693]      [,694]       [,695]     [,696]\n[1,]  0.26591078  0.1957665 -0.14405582 -0.54878492  0.245341665  0.4024176\n[2,] -0.05371187 -0.1738611 -0.15025403 -0.38758052 -0.165263603  0.4297455\n[3,] -0.37146870  0.1487995 -0.30255786 -0.28559129 -0.007867781 -0.1956531\n[4,] -0.71476541  0.0525283 -0.79586901 -0.09702792 -0.143100189 -0.1425339\n[5,] -0.14288161 -0.2168595  0.07135683 -0.77643817 -0.031426732 -0.5642963\n[6,] -0.34444506  0.3877462 -0.61529787  0.28507058  0.173166279 -0.1773296\n           [,697]      [,698]     [,699]       [,700]      [,701]      [,702]\n[1,] -0.050648788  0.03240191 -0.1157801  0.009326621 -0.19974371 -0.07307282\n[2,] -0.218261428  0.11539364 -0.1761815  0.175104559 -0.11033223  0.25248796\n[3,]  0.088445524 -0.09864674 -0.2369939 -0.155544254 -0.35814940  0.09561825\n[4,] -0.003632179 -0.10324922  0.5859257  0.583415203  0.29460504  0.24028036\n[5,]  0.031406038 -0.27234945 -0.1086836  0.340880943 -0.33920315  0.04580851\n[6,]  0.755093655 -0.38770422 -0.7533251  0.101498341 -0.04657349  0.08523010\n         [,703]      [,704]      [,705]      [,706]     [,707]     [,708]\n[1,]  0.0641291  0.14620143 -0.15747221  0.04013915 -0.5163814 -0.1186518\n[2,]  0.1631940 -0.10813934 -0.04821866 -0.22366821 -0.3613355  0.2645081\n[3,]  0.1153083  0.03089643  0.22964808  0.02563022 -0.3387153  0.1035164\n[4,] -0.1219216  0.18266703 -0.08668648 -0.30324883  0.1651312 -0.3032828\n[5,]  0.3620837 -0.14185593 -0.44208452 -0.60994069 -0.2425108 -0.1287503\n[6,] -0.1641797 -0.25187663 -0.01089505 -0.04542459  0.1973926  0.1502801\n          [,709]     [,710]      [,711]      [,712]     [,713]      [,714]\n[1,]  0.36998872  0.1175090 -0.22782926  0.08644807  0.4819364 -0.32616196\n[2,] -0.17827239 -0.6628689  0.36150535  0.03389601 -0.2334615  0.44133624\n[3,] -0.19919123 -0.4653095  0.51646242 -0.03288847  0.1972978  0.24413900\n[4,] -0.04885615  0.4228951  0.25230195 -0.09148907  0.3944344  0.42698479\n[5,] -0.01976342  0.3082081 -0.08721571 -0.34846158 -0.1217724 -0.11647448\n[6,] -0.11582758  0.1386511  0.33318932 -0.01126129 -0.3578690 -0.01047388\n          [,715]     [,716]      [,717]      [,718]     [,719]      [,720]\n[1,]  0.71590390  0.3681433 -0.22533738 -0.01342129 0.27545540 -0.54679262\n[2,] -0.11671735 -0.2952664 -0.22287013  0.12540519 0.43285708 -0.37934607\n[3,]  0.01466354  0.1061106 -0.05908411  0.91302435 0.05436042  0.07276830\n[4,]  0.09131234  0.4450066 -0.12312120  0.42208016 0.11794549 -0.05095548\n[5,] -0.10425185 -0.5719189  0.02840419  0.02140189 0.41063420  0.42068987\n[6,]  0.10155267 -0.1240041 -0.39188716  0.07135459 0.12523843 -0.30921119\n          [,721]      [,722]      [,723]      [,724]      [,725]      [,726]\n[1,]  0.23608949 -0.52617741 -0.34097197 -0.28782200 -0.37451097 -0.34952239\n[2,] -0.29509371  0.27329726 -0.05406200  0.09399716 -0.81895721  0.05535531\n[3,] -0.26596701  0.41763951 -0.08822308 -0.38029506 -0.49978366 -0.72514884\n[4,] -0.10496544 -0.05691853  0.21541717  0.66814153  0.08062230  0.47803721\n[5,]  0.01326274  0.12749296  0.58509356 -0.12830459 -0.08883894 -0.18423867\n[6,]  0.53558662  0.49797799 -0.18627401  0.37815293 -0.72482111 -0.20995309\n          [,727]      [,728]      [,729]     [,730]      [,731]      [,732]\n[1,] -0.59598135  0.24176523 -0.33662200 -0.5884542  0.36027591  0.13229369\n[2,]  0.56344444 -0.01015645  0.06232853 -0.5518973  0.01533844 -0.31023113\n[3,] -0.06634151 -0.43218175  0.58753333 -0.4169715  0.19971864 -0.25374750\n[4,]  0.61017235  0.69567396  0.21506141  0.2375045  0.09382049  0.06488215\n[5,] -0.22614158 -0.22922515 -0.03521350 -0.1153993  0.20149104  0.49537820\n[6,]  0.05093362 -0.42889422  0.49476581  0.1181615 -0.19919684 -0.45507276\n          [,733]      [,734]      [,735]      [,736]      [,737]      [,738]\n[1,]  0.20437701  0.05203781  0.49490909  0.31160324  0.09514175  0.05444307\n[2,] -0.52358957  0.28652134  0.23219686  0.10264791 -0.28877298  0.12346658\n[3,]  0.04150331  0.57329527 -0.52124697 -0.15227369  0.09045755  0.08775919\n[4,]  0.40086145 -0.20726313 -0.39121222 -0.04235166  0.54453835 -0.45444801\n[5,]  0.09702086 -0.13985805 -0.34908364 -0.35860060  0.53663313 -0.39676585\n[6,] -0.15486362  0.76282808 -0.01993162 -0.10487993  0.31733929 -0.36240684\n          [,739]      [,740]     [,741]      [,742]      [,743]      [,744]\n[1,]  0.27981900 -0.07096133 -0.4784315  0.66517803 -0.19289862  0.08629504\n[2,]  0.09601641  0.53338792  0.2053575 -0.03001310 -0.30799949  0.07343333\n[3,] -0.14552015  0.06591336  0.3888378  0.19720517 -0.26101007 -0.06323148\n[4,] -0.06538154 -0.43489596 -0.1113351 -0.13054944  0.15214992  0.12249756\n[5,] -0.13667315 -0.19367614  0.3326097 -0.19633159  0.01642466 -0.02296640\n[6,]  0.09781382  0.11094244 -0.5492458 -0.06575614  0.24736870  0.49555292\n          [,745]      [,746]      [,747]      [,748]      [,749]       [,750]\n[1,]  0.13312537  0.01533670 -0.15163966 -0.07607806 -0.05910454 -0.351092042\n[2,]  0.05350924  0.48403226  0.28819131 -0.40904226 -0.28175816  0.101619080\n[3,] -0.11340582  0.04288237  0.24165144  0.27911829  0.20847034 -0.272479248\n[4,] -0.30477591  0.30023948  0.31396015  0.29088805  0.32706905  0.057803034\n[5,]  0.70674400  0.19266358 -0.04307437 -0.06576952 -0.30666204 -0.001147126\n[6,] -0.39409352 -0.26167054  0.33450815 -0.26173913  0.24022919 -0.249305095\n          [,751]      [,752]      [,753]      [,754]      [,755]      [,756]\n[1,] -0.21286409 -0.06238798  0.06214587  0.09024138  0.25196122 -0.18701478\n[2,] -0.12264452  0.31478828  0.55093334 -0.27893041 -0.17801001  0.04541173\n[3,]  0.19696603  0.40104135 -0.03997897  0.12056805 -0.13704124 -0.55611966\n[4,] -0.04944882 -0.15564910 -0.17869199  0.48293818  0.00867633 -0.19903414\n[5,]  0.09725815  0.06648926 -0.12537198  0.16294237  0.48473888  0.36284434\n[6,] -0.07948407 -0.38028564 -0.28510661 -0.59019708  0.01484060  0.07356224\n          [,757]     [,758]      [,759]      [,760]      [,761]     [,762]\n[1,]  0.01571477 -0.0275442 -0.02670737 -0.30325320 -0.11691628  0.2430555\n[2,]  0.25773367 -0.3752802  0.16423640  0.24901632 -0.08614271  0.7512257\n[3,] -0.35398243 -0.6679938 -0.13419701 -0.09077981  0.44723808  0.1641602\n[4,] -0.04736989  0.1546447 -0.49186963 -0.46233014  0.09997943 -0.2701464\n[5,]  0.05340559 -0.0251253  0.11120789  0.62108649  0.37473201  0.2156832\n[6,]  0.79443656 -0.3866704  0.06485681 -0.18493828 -0.69676847  0.5008552\n          [,763]      [,764]     [,765]      [,766]      [,767]      [,768]\n[1,] -0.32180435 -0.39087474  0.5572537 -0.12120575  0.01990296  0.37458994\n[2,]  0.05345742 -0.04631410 -0.2080097  0.15886002  0.04691769  0.26482474\n[3,]  0.15053381 -0.13938692  0.6492183 -0.09373402  0.20017147 -0.09764338\n[4,]  0.30730861  0.20013821  0.1724859  0.04661836  0.11861106  0.16830594\n[5,]  0.43605915  0.05713011 -0.1992022  0.38071559 -0.11443830  0.14564601\n[6,]  0.36030787 -0.10911873  0.2674815  0.09331399 -0.28505735 -0.20016109\n          [,769]      [,770]     [,771]      [,772]     [,773]       [,774]\n[1,] -0.07698102 -0.14588523 -0.1701688 -0.13673593 0.11464316  0.402303767\n[2,] -0.55442453  0.08723151  0.1551522 -0.15357825 0.09074881  0.255554988\n[3,]  0.33239609  0.11631592 -0.1014504  0.13953872 0.03657087  0.025553688\n[4,] -0.16026565 -0.34639279 -0.1499909  0.17300708 0.27449296 -0.157198205\n[5,] -0.04580387 -0.22766644  0.4245902  0.02043079 0.11277552 -0.005587812\n[6,] -0.10613742 -0.01782266 -0.1878873 -0.41100483 0.46995692 -0.010485290\n          [,775]      [,776]      [,777]      [,778]      [,779]      [,780]\n[1,]  0.08504068 -0.16499678  0.72704589 -0.08340320 -0.06788195  0.09770488\n[2,]  0.42340913 -0.14865702  0.19686775  0.25813210 -0.05138050  0.01868630\n[3,]  0.31774095 -0.09592184 -0.11062877  0.06015952 -0.25259644  0.25965601\n[4,] -0.27455301 -0.16660496 -0.06700725  0.20956578 -0.21783639 -0.07157332\n[5,] -0.08720599 -0.15714075  0.30149690  0.11125779  0.16364511  0.04193012\n[6,] -0.02898514  0.03885249 -0.80046746 -0.19787253  0.08664562 -0.28270373\n          [,781]      [,782]      [,783]     [,784]      [,785]       [,786]\n[1,] -0.53662602  0.50203861 -0.36876132 -0.2149850 -0.18655716  0.061426508\n[2,]  0.54845735  0.06453865  0.08230341  0.6508388  0.43245330 -0.008026302\n[3,]  0.03062870  0.44390525  0.24378088  0.7574203  0.07152984 -0.200341582\n[4,] -0.05160702  0.27464622 -0.08616433 -0.3499677  0.01660597  0.064728251\n[5,] -0.31631157 -0.42322562  0.46935859  0.2626024  0.65990909  0.070856076\n[6,]  0.48498916  0.51826254 -0.49454592 -0.6943482  0.32467378 -0.323208377\n           [,787]      [,788]      [,789]      [,790]      [,791]      [,792]\n[1,] -0.048951417  0.28581927 -0.06920729  0.10416141 -0.26103689 -0.33184967\n[2,] -0.150883871  0.25806739  0.03179268  0.68611745  0.04392090 -0.67387010\n[3,]  0.374015348 -0.30716285  0.08329041 -0.35006087 -0.07900104 -0.15855718\n[4,] -0.259978812 -0.26547953 -0.60102494  0.23471847 -0.14683017 -0.08465532\n[5,]  0.007925326  0.04914259  0.18332472 -0.02186943 -0.17950987 -0.13653027\n[6,]  0.403671405  0.16114850 -0.42488311 -0.37555887  0.07912382 -0.39278256\n        [,793]     [,794]      [,795]     [,796]       [,797]     [,798]\n[1,] 0.1892908  0.3725262 -0.26311315 -0.2773312 -0.452171919 -0.2462929\n[2,] 0.4556962 -0.7475739  0.09314962  0.1988916 -0.387356664  0.2957615\n[3,] 0.3036683 -0.1950489 -0.17550871 -0.1510814 -0.135067281  0.1725584\n[4,] 0.3311618 -0.1232280  0.01009321  0.6806001 -0.119376373 -0.3659831\n[5,] 0.1629801 -0.1013562 -0.26875354  0.3285210  0.008686766  0.7863684\n[6,] 0.3412810 -0.2358859  0.13371848 -0.3428728  0.714993186 -0.3918277\n         [,799]      [,800]     [,801]      [,802]      [,803]     [,804]\n[1,] -0.2432686  0.07846436 -0.1338014  0.07925698 -0.08337619  0.5719539\n[2,] -0.2082982  0.09829025  0.2821215  0.06798954  0.14952421  0.3905057\n[3,] -0.2982448  0.21402713 -0.3604891 -0.48809990 -0.02892441  0.2284858\n[4,] -0.4694978  0.22283988  0.2903271 -0.34015524  0.34103824  0.4325925\n[5,]  0.3701103  0.19190209  0.2221522  0.09431947 -0.37259579  0.2120126\n[6,] -0.2507091 -0.68136958  0.1586120 -0.16014729  0.55725968 -0.2226418\n          [,805]      [,806]      [,807]      [,808]      [,809]     [,810]\n[1,]  0.07466853 -0.27318188 -0.11910219  0.05432763  0.01226958  0.1075140\n[2,]  0.12571521  0.17358422  0.02629308 -0.28416887 -0.17770565 -0.4213680\n[3,]  0.06885894  0.12085031 -0.47481935 -0.49444943  0.05160901  0.4981369\n[4,] -0.42679305 -0.51545756  0.24079777 -0.37736935  0.53229197  0.2855510\n[5,] -0.15821309  0.22149437 -0.52752189  0.47128026 -0.22499045  0.1164766\n[6,] -0.31971808  0.05577134  0.08316917  0.18264769 -0.34839948  0.5412797\n         [,811]      [,812]     [,813]      [,814]      [,815]       [,816]\n[1,] -0.4368085  0.49665233 -0.1143276  0.27756719 -0.13934631  0.285536141\n[2,] -0.1089931 -0.19218051 -0.1788569 -0.31892797 -0.04775952  0.440623512\n[3,]  0.1886945 -0.23881149 -0.2982498 -0.08312655 -0.11788774  0.022115468\n[4,] -0.3022087 -0.33298693 -0.3401383 -0.26974722  0.33429298  0.480411533\n[5,] -0.1639126 -0.02004375 -0.1429543 -0.60029146 -0.34304560 -0.008392757\n[6,] -0.1408318  0.74689894  0.3637695 -0.07700249 -0.23318004 -0.049213957\n           [,817]      [,818]      [,819]      [,820]      [,821]      [,822]\n[1,]  0.719125494 -0.08373038  0.25354778 -0.02444596  0.11041058 -0.63523171\n[2,] -0.414390795  0.03956377  0.55690788  0.24086084 -0.19217502  0.10945998\n[3,] -0.305662752 -0.47738505  0.44528617 -0.53814129 -0.20716912 -0.22277930\n[4,] -0.253747505  0.21289107  0.22211265  0.26002956  0.17712586 -0.17983788\n[5,] -0.323882831  0.60558852  0.06332142 -0.38642961 -0.07465909  0.06317947\n[6,] -0.008865601 -0.37520902 -0.22385693  0.97914620 -0.02757669 -0.11033236\n          [,823]      [,824]       [,825]      [,826]      [,827]      [,828]\n[1,] -0.33361564 -0.44931285  0.096080587  0.08842451  0.14610161 -0.16893409\n[2,]  0.65250264  0.27279090  0.028403836 -0.15098354  0.51094262  0.03813488\n[3,] -0.09598469 -0.14617371  0.310971589  0.16610321  0.29927845 -0.45265755\n[4,]  0.54821646 -0.06132150  0.558496255 -0.01271004 -0.28019938 -0.16991729\n[5,]  0.29067296  0.20237235  0.301173863 -0.21649216  0.21661751 -0.03706019\n[6,] -0.13960029  0.05910008 -0.005590394 -0.12939876 -0.03497599 -0.12528873\n          [,829]      [,830]     [,831]       [,832]     [,833]      [,834]\n[1,]  0.11536785  0.22119234  0.1508108 -0.135431967 -0.1932604 -0.01915329\n[2,]  0.17816752 -0.14117662  0.1404419  0.427008345 -0.1521904 -0.31015495\n[3,]  0.26430185  0.15088478 -0.1980811  0.198680391  0.1409894  0.20500049\n[4,] -0.37232964 -0.20189323 -0.2896696  0.070279136 -0.5088881  0.44452239\n[5,] -0.11628373 -0.20858092 -0.3666008 -0.006161958 -0.6836049 -0.24782002\n[6,] -0.07340568 -0.07111901 -0.6042973  0.549962018  0.1357398 -0.24830753\n         [,835]      [,836]      [,837]     [,838]      [,839]       [,840]\n[1,] -0.2462113  0.18743223 -0.18320698 -0.2417331 -0.03563394  0.043017526\n[2,] -0.1296634 -0.11640129  0.09472557 -0.2052609  0.66657977 -0.007158551\n[3,] -0.5671236  0.24175205  0.29669131  0.4466031 -0.04823559 -0.163735898\n[4,] -0.5051669  0.05297871 -0.09812853 -0.3758354  0.03614266 -0.418162689\n[5,] -0.1105394 -0.01779952 -0.39678197 -0.5569888 -0.03834041 -0.198337973\n[6,] -0.2943218 -0.05447046  0.18653858 -0.1075598 -0.47068300  0.193256492\n         [,841]      [,842]      [,843]      [,844]      [,845]     [,846]\n[1,] 0.24902307  0.26027238  0.47559230 -0.26753727 -0.58251403  0.1652761\n[2,] 0.03388313 -0.12585433 -0.59921173 -0.02997862  0.11808275 -0.2748289\n[3,] 0.12187629  0.18123436 -0.01045299  0.30739870 -0.17936496  0.2982113\n[4,] 0.09750084  0.46464599 -0.26963561 -0.04351588  0.08899911  0.3453864\n[5,] 0.19079902 -0.48320526  0.11242055 -0.17329842  0.23140837 -0.2172050\n[6,] 0.26894497 -0.03099345  0.57282036 -0.08724143  0.25496409  0.2225319\n         [,847]     [,848]      [,849]     [,850]      [,851]      [,852]\n[1,]  0.8219842  0.1494788 -0.08953080  0.4362768  0.09548553  0.06179425\n[2,] -0.4962605 -0.6145939  0.24834565 -0.3180961 -0.19724711  0.59328927\n[3,]  0.2820021 -0.2348118  0.02121582  0.4227307  0.17907000 -0.32099549\n[4,] -0.1615674  0.2174002  0.22066840  0.8499906  0.12934799  0.17798351\n[5,] -0.3703301 -0.4768345 -0.04698199  0.1662322 -0.11756927 -0.21970905\n[6,] -0.2790931 -0.1093638 -0.21345038 -0.2177936  0.02876895  0.62108848\n          [,853]      [,854]      [,855]      [,856]       [,857]      [,858]\n[1,]  0.11179629  0.51698770 -0.27110196 -0.02376466 -0.357639183  0.04555926\n[2,]  0.33481599  0.07490505  0.29679340  0.03364364  0.281174089 -0.19499873\n[3,]  0.64228041  0.50119375 -0.13852591  0.70089536  0.188752002  0.58823281\n[4,] -0.29477200 -0.15477526 -0.08068927 -0.40934180 -0.122487108 -0.14862640\n[5,]  0.81209043  0.22774343  0.17952274  0.17370835 -0.009886951  0.07924818\n[6,]  0.04204986  0.29128673 -0.48389341 -0.18201595  0.155664274 -0.08192451\n          [,859]      [,860]      [,861]      [,862]      [,863]     [,864]\n[1,] -0.13645688  0.32853267 -0.48414287  0.24959359 -0.21006659  0.3731771\n[2,] -0.41887686 -0.09046479 -0.05432290 -0.09382596 -0.18099835 -0.0755182\n[3,] -0.27279275 -0.11973487  0.04270741  0.14862575 -0.17907764 -0.4676968\n[4,]  0.31047553  0.37493446 -0.04384645  0.40718837  0.26496631  0.3426030\n[5,]  0.01628821  0.36848719 -0.58475623  0.28362953 -0.01511324 -0.4377592\n[6,]  0.59825600  0.46273439  0.24038991  0.61843813 -0.12579669  0.3958842\n          [,865]      [,866]      [,867]      [,868]      [,869]     [,870]\n[1,] -0.17290828 -0.65191379  0.00416770  0.25862578 -0.50178375  0.2654832\n[2,] -0.13428007  0.55087853  0.39950359  0.39935384 -0.25039008 -0.4598319\n[3,]  0.10620249 -0.36854756  0.66387634  0.04278323 -0.46375458  0.4641614\n[4,]  0.16858550 -0.20915878 -0.06539713 -0.14472446  0.24769019  0.2372273\n[5,]  0.06278013  0.03253165 -0.18257878 -0.10799500  0.06738845 -0.2298985\n[6,] -0.27178960  0.20793372  0.15619543 -0.06738018  0.59155887 -0.3012237\n           [,871]      [,872]     [,873]      [,874]      [,875]      [,876]\n[1,] -0.412286979 -0.32644905  0.1453208  0.36089245  0.09869452 -0.39185965\n[2,]  0.132291121 -0.05301806  0.2996545 -0.02620367 -0.39809013  0.29240624\n[3,]  0.803854097 -0.77334002  0.9414221 -0.10235384 -0.03837881 -0.25156982\n[4,]  0.356803929 -0.24955370 -0.3091243  0.48259055 -0.12982330  0.08830335\n[5,]  0.407081070  0.25588873 -0.2567913 -0.42064593 -0.28076151  0.25904722\n[6,] -0.009413105  0.49539338 -0.4786372 -0.41906506  0.07400656 -0.19841420\n         [,877]     [,878]       [,879]      [,880]      [,881]      [,882]\n[1,]  0.7290518  0.4794035  0.112642420 -0.22592077 -0.43460726  0.21458564\n[2,]  0.4976018  0.1974835 -0.662086876  0.01738467 -0.72139072  0.26063541\n[3,] -0.3061016 -0.1565685  0.073265515  0.39025466 -0.30946265  0.01503905\n[4,] -0.5020212  0.3646635 -0.244978676  0.02319471  0.34229361  0.26768270\n[5,]  0.1691960 -0.2761949  0.636608640  0.55297455 -0.11099663 -0.36191523\n[6,]  0.4844151 -0.3635070 -0.005256264  0.06645868 -0.09853508  0.24918825\n          [,883]      [,884]     [,885]     [,886]     [,887]      [,888]\n[1,] -0.26718493 -0.07893581  0.1179071  0.1689124  0.1479693 -0.03285166\n[2,]  0.22320356  0.32233784 -0.1459172  0.6325499 -0.4071787  0.10303445\n[3,]  0.13168199 -0.25026838  0.4245326  0.2556966  0.3119581 -0.21015967\n[4,] -0.01846982  0.26815388  0.1743022  0.1560005 -0.2419715 -0.12489019\n[5,]  0.33939644 -0.10309532 -0.1489843  0.2254972  0.2727824  0.33289808\n[6,] -0.47314009  0.32536175  0.3759270 -0.2063313  0.1557392 -0.44743904\n          [,889]      [,890]     [,891]       [,892]      [,893]      [,894]\n[1,] -0.16536941 -0.41790231  0.1754295 -0.001704142 -0.18078540 -0.32197282\n[2,]  0.15873035 -0.19262087 -0.1141561  0.675711352 -0.05994546  0.26392369\n[3,]  0.19626724  0.14520934  0.5559003 -0.626783476 -0.04418669  0.02492520\n[4,]  0.26294165 -0.25169506 -0.2306770 -0.563966815  0.16532410 -0.01667899\n[5,] -0.13072269 -0.43948527  0.3585306  0.121011762  0.30355573 -0.12043970\n[6,]  0.09073255  0.03219285  0.1181160  0.106121787 -0.04902406  0.24357443\n         [,895]       [,896]      [,897]       [,898]      [,899]     [,900]\n[1,] -0.3691198 -0.280209476 -0.54439419  0.233013082  0.44231124 0.28559655\n[2,]  0.5001718 -0.586704875 -0.24666601  0.052213827  0.15289769 0.30829232\n[3,] -0.2307113  0.009401566 -0.10692468 -0.019650551 -0.08323701 0.02949387\n[4,]  0.5322414  0.032713167 -0.33805307  0.096376907 -0.15300593 0.01629213\n[5,] -0.1720184  0.232326814  0.04076512 -0.006465998 -0.41593397 0.30214948\n[6,] -0.2688628  0.178866007  0.27333554  0.677708054  0.33684325 0.24493574\n          [,901]      [,902]      [,903]     [,904]     [,905]       [,906]\n[1,]  0.26770398  0.12223633 -0.62004856 -0.4502904 -0.3792223  0.041941088\n[2,] -0.31041253 -0.16136485 -0.27750220 -0.1600813  0.2963689 -0.154081362\n[3,]  0.21123425 -0.42285529  0.58665505 -0.5125996  0.5306936 -0.054397065\n[4,]  0.01083481 -0.04983589 -0.07103916  0.1049823 -0.3340820 -0.125011710\n[5,] -0.08323693  0.19211371 -0.35402314  0.4992988  0.1105118  0.005140023\n[6,]  0.04822162  0.34922416  0.46241391  0.4732494 -0.1101320  0.270285750\n          [,907]        [,908]     [,909]      [,910]      [,911]      [,912]\n[1,] -0.57159409  0.3919195479  0.4124648 -0.07324872  0.08243536 -0.34743618\n[2,]  0.04074436 -0.1447963635  0.2982075  0.62236684 -0.14685298  0.31024647\n[3,]  0.20863440 -0.0008203137  0.4853664  0.26492050 -0.39583959  0.06929511\n[4,]  0.48779222 -0.3668558689 -0.2409824 -0.03970574 -0.07062899 -0.27545679\n[5,] -0.06501335  0.1066198461 -0.3320804 -0.05044880 -0.32897938  0.36172253\n[6,]  0.53201119 -0.4360803508  0.1753395 -0.18438425  0.07579942 -0.06459068\n           [,913]      [,914]       [,915]      [,916]     [,917]       [,918]\n[1,]  0.219540349 -0.16651324 -0.145732947 -0.52264749  0.1595272  0.107689327\n[2,]  0.004375029 -0.19566702 -0.088420690 -0.42111299 -0.4015019  0.860065295\n[3,]  0.271369690 -0.05800588 -0.295962825 -0.28608627  0.2604436 -0.204413621\n[4,] -0.321812052 -0.14082784 -0.134589609 -0.06806348  0.3951529 -0.288341880\n[5,] -0.193146914 -0.82110623 -0.003110004 -0.15510500  0.1225416 -0.006374217\n[6,] -0.079406892  0.07942383 -0.210634012 -0.71836913  0.1517068 -0.004893337\n          [,919]      [,920]      [,921]      [,922]     [,923]      [,924]\n[1,] -0.55479077  0.58827751 -0.51749029  0.15600007  0.2993178  0.07089034\n[2,] -0.31383586 -0.05638017  0.42012283 -0.10786438  0.1610516  0.21509151\n[3,]  0.09226553  0.47292212 -0.58903221  0.09691872  0.7024419 -0.23168709\n[4,] -0.36895654 -0.24264975 -0.13569872  0.01930959 -0.2246225 -0.05679718\n[5,]  0.02514521 -0.07859917  0.02333894 -0.20737245 -0.1082331  0.13363259\n[6,]  0.30276792 -0.38065181  0.38490481 -0.40666453 -0.3198592 -0.15997055\n          [,925]      [,926]      [,927]      [,928]      [,929]      [,930]\n[1,]  0.03328636  0.33666360  0.33681913 -0.16462862  0.04019617  0.74084298\n[2,] -0.01677294  0.19640799 -0.32414600 -0.25524343  0.20928384  0.04895607\n[3,] -0.12433181  0.31758779  0.26979412  0.20900167 -0.28794959  0.20866474\n[4,]  0.10183414  0.16236477 -0.07777552  0.26193093 -0.37994636 -0.35428165\n[5,]  0.42435883 -0.35901404 -0.01973331  0.07754411 -0.43834310  1.16164815\n[6,]  0.29712875  0.06845554  0.32769830  0.24191237 -0.12477749 -0.52122482\n          [,931]     [,932]     [,933]      [,934]      [,935]      [,936]\n[1,]  0.23754662  0.1606029  0.2024757 -0.06195943 -0.40453618 -0.03561780\n[2,] -0.21082544  0.4529289 -0.1352618 -0.37320542 -0.15795044 -0.07997250\n[3,]  0.73758693 -0.4822368  0.1905660  0.07657601 -0.06386608  0.23314447\n[4,]  0.03794077 -0.2966945 -0.2532459  0.27596251 -0.32438261 -0.31517562\n[5,]  0.33824154  0.1786898 -0.3868406 -0.24587691 -0.34223680  0.08517643\n[6,] -0.08605913  0.2550981  0.1252678  0.41247455 -0.27824919  0.74461734\n          [,937]     [,938]      [,939]      [,940]      [,941]      [,942]\n[1,] -0.72579674  0.1463953  0.08466947  0.27879486 -0.21612312 0.127831902\n[2,]  0.45248903 -0.1598354  0.02948813 -0.37133048 -0.19597042 0.003398968\n[3,] -0.50116060 -0.1818127 -0.13166448  1.03141063 -0.01221056 0.040145637\n[4,]  0.01563390 -0.2026577  0.27596187 -0.08470276  0.23353745 0.365079106\n[5,] -0.26440668  0.5133752  0.26790070  0.40048634  0.24668641 0.362107129\n[6,] -0.01897488 -0.2351321  0.17757789 -0.07598482 -0.20960757 0.407268075\n          [,943]      [,944]      [,945]     [,946]     [,947]      [,948]\n[1,]  0.05816817 -0.02355363  0.33090333 -0.2454723 -0.4994938 -0.15568687\n[2,] -0.20988673 -0.48049441  0.03626217  0.2552458  0.1265471  0.10730330\n[3,] -0.06721660  0.61682470  0.54858784 -0.1379955  0.3010692  0.04978719\n[4,]  0.03847759  0.30966148 -0.11656532  0.6920453 -0.1216762 -0.23815130\n[5,]  0.31607065 -0.33960021  0.03522994  0.2777913 -0.5852425  0.05117434\n[6,]  0.37888324 -0.02711209 -0.07317539  0.5439801  0.7280035  0.29505763\n          [,949]       [,950]     [,951]      [,952]      [,953]      [,954]\n[1,] -0.24030753  0.002415335  0.3642143  0.01047724  0.24014846 -0.20004569\n[2,]  0.18530462  0.668772803 -0.1591550  0.22098768 -0.26439156 -0.56732010\n[3,] -0.24858094 -0.166843337  0.3832116  0.22163209  0.08075788  0.16083778\n[4,]  0.21982939 -0.063211344 -0.2376186 -0.44252471  0.50943207 -0.06583417\n[5,] -0.26771161  0.023619438 -0.2126506 -0.42636133 -0.33584104  0.08199910\n[6,]  0.02804767 -0.353575311 -0.1888961 -0.06593865 -0.26233521 -0.21332613\n         [,955]      [,956]      [,957]      [,958]      [,959]      [,960]\n[1,] -0.3439118  0.02349125  0.29857316 -0.38932699 -0.05575370  0.09405063\n[2,]  0.2769104 -0.07892007 -0.30315563  0.17821438 -0.03378732 -0.09979855\n[3,]  0.4435666 -0.05936979  0.51534462  0.07869008  0.55755724 -0.33805588\n[4,]  0.2090963  0.01419782 -0.33525156  0.20082611 -0.05454194 -0.04534644\n[5,]  0.7051122 -0.19401205  0.02136426  0.29061936 -0.45687605  0.13094189\n[6,]  0.2291972  0.42937849 -0.28766164 -0.79856519  0.02477325 -0.24695013\n          [,961]     [,962]      [,963]      [,964]      [,965]      [,966]\n[1,]  0.12314254 -0.3843580 -0.42733724  0.36239207  0.05981142  0.52616516\n[2,]  0.41172550 -0.4364342  0.06996581  0.32126710  0.56816693 -0.15559993\n[3,]  0.05742169  0.4470753 -0.36717995  0.62437072  0.19276849 -0.38454572\n[4,] -0.33050140  0.3844170  0.54963441  0.23185787 -0.09507639  0.29135919\n[5,]  0.22921156  0.1317670  0.44465912  0.02122396 -0.22086462  0.06068081\n[6,]  0.09152589 -0.3853897 -0.08879750 -0.04222556 -0.45501179 -0.46578704\n          [,967]      [,968]      [,969]     [,970]     [,971]      [,972]\n[1,]  0.01352909 -0.04270743  0.09983115  0.2822478 -0.2496828 -0.16698821\n[2,] -0.24835510  0.10906146 -0.36677207  0.4154083  0.1657277 -0.12699096\n[3,] -0.43608995  0.50471198 -0.22928030 -0.6160758  0.3639810  0.21409490\n[4,] -0.42185765  0.12377607  0.11359505 -0.1324287  0.1823074 -0.01190719\n[5,] -0.31706122 -0.26189392 -0.24930269  0.2487614 -0.4009842  0.21479234\n[6,]  0.34894952  0.33659369 -0.16829735 -0.1251111 -0.4283537 -0.46982906\n          [,973]      [,974]      [,975]     [,976]      [,977]      [,978]\n[1,] -0.33510192  0.30610419  0.05902057  0.0187761  0.04768022  0.05632129\n[2,] -0.06628882  0.03745034 -0.63312576  0.3069588 -0.19284861 -0.25479231\n[3,] -0.04135032 -0.17360615  0.51840760 -0.1653122  0.44152168 -0.48124209\n[4,] -0.05033167 -0.01120239  0.11582347  0.1214429 -0.21221033  0.21789806\n[5,] -0.74059729  0.24063756 -0.19576331 -0.2126503 -0.18384158 -0.15354334\n[6,]  0.15276982 -0.17496691 -0.21698716 -0.1170539 -0.15919465  0.27950762\n          [,979]      [,980]      [,981]      [,982]        [,983]      [,984]\n[1,] -0.21401015 -0.31134294  0.25626425 -0.42879399  0.4052707612 -0.36185590\n[2,]  0.04233576 -0.42583372  0.43647243 -0.23593525  0.3546589911  0.33685855\n[3,] -0.17271590  0.06663944 -0.46793271 -0.13585020  0.1860239516 -0.10966062\n[4,]  0.06726419  0.01414202 -0.33445712  0.06489623 -0.0007880222 -0.82405939\n[5,]  0.26092610  0.98415753  0.25767733 -0.19160785  0.1735637411  0.08712636\n[6,] -0.12833749  0.06573932 -0.03875513  0.40141049 -0.1774031940  0.20509181\n         [,985]      [,986]      [,987]     [,988]      [,989]      [,990]\n[1,] -0.2248144 -0.26977303  0.16235672 -0.1061577 -0.09897828 -0.49178009\n[2,] -0.3136517  0.20756319  0.20068064 -0.2265393 -0.32654013  0.05300913\n[3,] -0.2613305 -0.06894408  0.04509250  0.1754386 -0.14479174 -0.24506268\n[4,]  0.1207344 -0.10312790  0.28131674  0.1516023  0.15793037  0.17777566\n[5,] -0.3783833 -0.44048159 -0.01535437 -0.2528319 -0.10752023 -0.15972586\n[6,] -0.2463233 -0.38981158  0.46983301 -0.5081926 -0.31131993  0.56674386\n          [,991]      [,992]      [,993]       [,994]     [,995]      [,996]\n[1,]  0.01151520 -0.24968264  0.06129555  0.242886791 -0.1867168  0.40910467\n[2,]  0.48334183  0.09499175 -0.12403007 -0.151197928 -0.2061307 -0.19050404\n[3,]  0.23060508 -0.01065018 -0.14196075 -0.398304841  0.1766413 -0.48094042\n[4,]  0.16914827  0.05554463 -0.27165670  0.174390057  0.1353550  0.49841483\n[5,] -0.04873398  0.35851818 -0.52147178  0.333977997  0.4360523 -0.14803611\n[6,]  0.29230200 -0.06443252  0.25094153  0.001473389  0.3398976 -0.06412252\n           [,997]      [,998]       [,999]\n[1,] -0.175006994  0.11071429  0.443939473\n[2,]  0.002351947  0.34671088  0.290867330\n[3,]  0.353896266  0.03243286 -0.052799467\n[4,]  0.086476435 -0.25693659 -0.487843813\n[5,] -0.111264372  0.54198129 -0.007976626\n[6,] -0.447218764 -0.49585636 -0.002403459\n\n\n\nto calculate the simulated p-value this process has to be repeat nsim number of times this gives us a matrix with n rows and nsim columns and each column is a simulation value"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#calculate-p-value",
    "href": "getting-away-with-for-loops/index.html#calculate-p-value",
    "title": "for loops in R",
    "section": "calculate p-value",
    "text": "calculate p-value\n\n# calculate the simulate p-values\nnumerator <- rowSums(reps <= obs)\n\nhead(numerator)\n\n[1] 969 300 977 983 736   5\n\n\n\ndivide by number of simulations\n\n\n\n(numerator + 1) / (nsim + 1)\n\n  [1] 0.970 0.301 0.978 0.984 0.737 0.006 0.070 0.346 0.507 1.000 0.884 0.102\n [13] 0.026 0.305 0.328 0.265 0.658 0.078 0.754 0.024 0.349 0.719 0.574 0.891\n [25] 0.491 0.797 0.959 0.117 0.018 0.553 0.356 0.211 0.247 0.159 0.861 0.973\n [37] 0.940 0.254 0.966 0.350 1.000 0.813 0.230 0.098 0.035 0.050 0.010 0.974\n [49] 0.894 0.357 0.650 0.277 1.000 0.110 0.431 0.692 0.815 0.403 0.001 0.026\n [61] 0.717 0.494 0.075 0.407 0.109 0.656 0.012 0.743 0.656 0.531 0.536 0.679\n [73] 0.144 0.442 0.850 0.957 0.600 0.414 0.077 0.008 0.109 0.987 0.871 0.351\n [85] 0.234 0.277 0.937 0.326 0.976 0.838 0.975 0.096 0.511 0.064 0.837 0.535\n [97] 0.323 0.989 0.650 0.944\n\n\n\nto calculate the p-value would compare the observed value to the simulate values. count up the number of times observed statistic was greater than the simulated, then plug and check for the simulated p-value this works just fine"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#section-10",
    "href": "getting-away-with-for-loops/index.html#section-10",
    "title": "for loops in R",
    "section": "",
    "text": "but Roger Bivand pointed out how inneficint these calculations are for a small p-value you need a hell of a lot of simulations and what i wrote scaled linearly so if you need 999 simulations instead of 99 that would take 10 times longer. woof!"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#the-outer-loop",
    "href": "getting-away-with-for-loops/index.html#the-outer-loop",
    "title": "for loops in R",
    "section": "the outer loop",
    "text": "the outer loop\n\n\nres <- matrix(nrow = n, ncol = nsim)\n\nfor (j in 1:nsim) {\n  res[,j] <- simulate_stat(n, k)\n}\n\n\n\nsimulate_stat() is another for loop\n\nas mentioned earlier, the apply family and purrr is only just loop hiding we can think about all the steps i took as a series of for loops\nthe first can be rewritten like this first we preallocate a vector like a good programmer then we iterate through our simulations with simulate_stat()\nbut wait…\nsimulate_stat uses sapply! well damn. that’s another for loop\nyou got that right. I’m saying I wrote a NESTED for loop\ncringe, right?"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#the-inner-loop",
    "href": "getting-away-with-for-loops/index.html#the-inner-loop",
    "title": "for loops in R",
    "section": "the inner loop",
    "text": "the inner loop\n\nres <- numeric(n)\n\nfor (i in 1:n) {\n  res[i] <- stat_calc(k)\n}\n\n\nthe inner loop can be wewritten like this pre allocate the results again then populate them with a for loop simple enough"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#both-loops",
    "href": "getting-away-with-for-loops/index.html#both-loops",
    "title": "for loops in R",
    "section": "both loops",
    "text": "both loops\n\n# instantiate results matrix \nres_mat <- matrix(nrow = n, ncol = nsim)\n\nfor (j in 1:nsim) {\n  \n  # allocate results vector\n  res <- numeric(n) \n  \n  # populate results vector \n  for (i in 1:n) {\n    res[i] <- stat_calc(k)\n  }\n  \n  # fill results matrix with stat vector\n  res_mat[,j] <- res\n}\n\n\nput together that replicate statement can be rewritten using this nested for loop."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#speeding-it-up",
    "href": "getting-away-with-for-loops/index.html#speeding-it-up",
    "title": "for loops in R",
    "section": "speeding it up",
    "text": "speeding it up\n\n\nroger kindly pointed out a way to rethink this. Instead of trying to work in a vectorized mindset where I do something to every single element all at once. do the simulations for a single location all at once\nhe referred to some code of mine he had refactored months ago. after giving it another look, it finally made sense."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#each-element",
    "href": "getting-away-with-for-loops/index.html#each-element",
    "title": "for loops in R",
    "section": "each element",
    "text": "each element\n\nsimulations <- matrix(rnorm(k * nsim), nrow = nsim)\n\nhead(simulations)\n\n          [,1]       [,2]       [,3]       [,4]       [,5]        [,6]\n[1,] -1.221597  0.2320816  0.2275564 -2.1450528  0.1934132 -0.28482011\n[2,]  1.655723 -1.0671147 -2.3726236 -0.4006982  1.1311245  0.72018389\n[3,]  1.399798  0.4984924  0.3264791 -0.5657876 -0.5750421  0.38090130\n[4,]  1.253485  0.4198027 -0.6578335 -1.4031335 -0.8674624 -0.69282910\n[5,]  0.198897  0.8536004  1.1794205 -1.1499824  1.3326462 -0.19110694\n[6,]  1.063115  0.6473917 -1.1441991  1.2701802  0.7616580  0.05611599\n            [,7]        [,8]       [,9]      [,10]\n[1,] -0.04623873  0.59418404  1.3863573 -1.0563296\n[2,]  1.02548129  0.21060537 -0.5980706 -0.4064396\n[3,] -0.70079070 -0.28154873 -0.5961901 -0.2459481\n[4,] -0.43256866  0.85752280 -0.6668649  0.5756308\n[5,]  0.65510143 -0.07038567  0.5816813  0.7787426\n[6,] -0.38615247  0.81369632 -0.4818380 -0.6493791\n\n\n\nfor each location we can create a matrix of random draws where each row is a simulation and the columns are the number of neighbors"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#each-element-1",
    "href": "getting-away-with-for-loops/index.html#each-element-1",
    "title": "for loops in R",
    "section": "each element",
    "text": "each element\n\nsimulations <- matrix(rnorm(k * nsim), nrow = nsim)\n\nstat_sim_i <- rowMeans(simulations)\n\nhead(stat_sim_i)\n\n[1] -0.03505480 -0.06722337  0.29473346 -0.41919084  0.12895046  0.08677108\n\n\n\nand the average of each row is the simulation statistic"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#each-element-2",
    "href": "getting-away-with-for-loops/index.html#each-element-2",
    "title": "for loops in R",
    "section": "each element",
    "text": "each element\n\nsimulations <- matrix(rnorm(k * nsim), nrow = nsim)\n\nstat_sim_i <- rowMeans(simulations)\n\n# print p-value\n(sum(stat_sim_i <= obs[6]) + 1) / (nsim + 1)\n\n[1] 0.007\n\n\n\nand taking the row means returns a hand vector that can be compared to the observed statistic and the p-value can be measured easily"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#the-loop",
    "href": "getting-away-with-for-loops/index.html#the-loop",
    "title": "for loops in R",
    "section": "the loop",
    "text": "the loop\n\np_vals <- numeric(n)\n\nfor (i in 1:n) {\n  simulations <- matrix(rnorm(k * nsim), nrow = nsim)\n  stat_sim_i <- rowMeans(simulations)\n  p_vals[i] <- (sum(stat_sim_i <= obs[i]) + 1) / (nsim + 1)\n}\n\n\nbefore every for loop is a preallocated object for each location we generate those random samples take the mean of each simulation then calculate the p-value and fill accordingly"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#how-does-it-compare",
    "href": "getting-away-with-for-loops/index.html#how-does-it-compare",
    "title": "for loops in R",
    "section": "how does it compare?",
    "text": "how does it compare?\n\nbench::mark(\n  apply = {\n    reps <- replicate(nsim, simulate_stat(n, k))\n    p_vals <- (rowSums(reps <= obs) + 1) / (nsim + 1)\n  },\n  \n  for_loop = {\n    p_vals <- numeric(n)\n\n    for (i in 1:n) {\n      simulations <- matrix(rnorm(k * nsim), nrow = nsim)\n      stat_sim_i <- rowMeans(simulations)\n      p_vals[i] <- (sum(stat_sim_i <= obs[i]) + 1) / (nsim + 1)\n    }\n  }, check = FALSE\n)\n\n# A tibble: 2 × 6\n  expression      min   median `itr/sec` mem_alloc `gc/sec`\n  <bch:expr> <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl>\n1 apply       311.3ms  313.5ms      3.19   248.6MB     33.5\n2 for_loop     27.5ms   29.3ms     34.1     16.7MB     26.5"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#the-point",
    "href": "getting-away-with-for-loops/index.html#the-point",
    "title": "for loops in R",
    "section": "the point",
    "text": "the point\n\nthere is no innate virtue in apply() or purrr\nno automatic vectorization of code\nyou are your worst enemy\n\n\nwhat we should take away is that there is nothing innately good or bad about using apply or purrr. we can’t magically make code vectorized. and we are not always going to write the best code or the most efficient code and thats totally fine."
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#a-last-benchmark",
    "href": "getting-away-with-for-loops/index.html#a-last-benchmark",
    "title": "for loops in R",
    "section": "a last benchmark",
    "text": "a last benchmark\n\nnsim = 3999\nbench::mark(\n  purrr = purrr::map_dbl(obs, sim_stat, k, nsim),\n  lapply = unlist(lapply(obs, sim_stat, k, nsim)),\n  for_loop = {\n    p_vals <- numeric(n)\n    \n    for (i in 1:n) {\n      simulations <- matrix(rnorm(k * nsim), nrow = nsim)\n      stat_sim_i <- rowMeans(simulations)\n      p_vals[i] <- (sum(stat_sim_i <= obs[i]) + 1) / (nsim + 1)\n    }\n  },\n  check = FALSE\n)\n\n# A tibble: 3 × 6\n  expression      min   median `itr/sec` mem_alloc `gc/sec`\n  <bch:expr> <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl>\n1 purrr         104ms    107ms      7.72    66.1MB    21.2 \n2 lapply        102ms    103ms      9.68    65.9MB     9.68\n3 for_loop      105ms    106ms      9.43    65.9MB    11.3"
  },
  {
    "objectID": "getting-away-with-for-loops/index.html#the-take-aways",
    "href": "getting-away-with-for-loops/index.html#the-take-aways",
    "title": "for loops in R",
    "section": "the take-aways",
    "text": "the take-aways\n\nfor loops aren’t worse than apply or purrr\nyou just might be worse at writing code with a for loop\nwriting a for loop doesn’t make you a bad programmer\nfor loops can help you think differently\nif you care about speed and memory safety, just use rust"
  },
  {
    "objectID": "dots/slides.html",
    "href": "dots/slides.html",
    "title": ". . .",
    "section": "",
    "text": "you may have seen these before you may have an intuition of what they are but do you really know what they do and how they work?"
  },
  {
    "objectID": "dots/slides.html#dplyrselect.data-...",
    "href": "dots/slides.html#dplyrselect.data-...",
    "title": ". . .",
    "section": "dplyr::select(.data, ...)",
    "text": "dplyr::select(.data, ...)\n\nOne or more unquoted expressions separated by commas. Variable names can be used as if they were positions in the data frame, so expressions like x:y can be used to select a range of variables.\n\n\nthere’s a really good chance you’ve used the select function from dplyr select uses dots—albeit a special kind called dynamic dots—to let you select many different columns with freedom"
  },
  {
    "objectID": "dots/slides.html#dplyrmutate.data-...",
    "href": "dots/slides.html#dplyrmutate.data-...",
    "title": ". . .",
    "section": "dplyr::mutate(.data, ...)",
    "text": "dplyr::mutate(.data, ...)\n\nName-value pairs. The name gives the name of the column in the output.\n\n\ndots are also used in the mutate function from dplyr to let you create any columns you’d like by passing in expressions to names"
  },
  {
    "objectID": "dots/slides.html#paste...",
    "href": "dots/slides.html#paste...",
    "title": ". . .",
    "section": "paste(...)",
    "text": "paste(...)\n\none or more R objects, to be converted to character vectors.\n\n\nthe function paste from base R lets you pass in as many R objects as you would like to create nice character strings"
  },
  {
    "objectID": "dots/slides.html#lapplyx-fun-...",
    "href": "dots/slides.html#lapplyx-fun-...",
    "title": ". . .",
    "section": "lapply(x, FUN, ...)",
    "text": "lapply(x, FUN, ...)\n\noptional arguments to FUN"
  },
  {
    "objectID": "dots/slides.html#primary-uses",
    "href": "dots/slides.html#primary-uses",
    "title": ". . .",
    "section": "2 primary uses",
    "text": "2 primary uses\n\npassing arguments from one function to another\nwith S3 methods\n\n\n\nhttps://adv-r.hadley.nz/functions.html#fun-dot-dot-dot\n\naccording to advanced R there are two primary uses of dots they are to pass arguments from one function to another and secondly, which we will not go over in this video, is the use of dots to allow different s3 methods to take different arguments (like the very very very many predict methods)"
  },
  {
    "objectID": "dots/slides.html#recap",
    "href": "dots/slides.html#recap",
    "title": ". . .",
    "section": "recap",
    "text": "recap\nDots can:\n\npass arguments from one function to another\nbe collected using list()\nbe sneaky and “swallow” arguments\n\n\nYou should check them with {ellipsis}"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "youtube-tutorials",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  }
]